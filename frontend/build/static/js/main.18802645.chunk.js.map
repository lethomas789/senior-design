{"version":3,"sources":["images/muclubs.jpg","images/foodtruck.jpg","images/horses.jpg","images/global-header.svg","images/cows.jpg","images/band.jpg","images/bikes.jpg","images/farmersmarket.jpg","images/facebook.svg","images/instagram.svg","images/creative-market.svg","components/About/About.js","store/actions.js","components/Signup/Signup.js","components/Home/Home.js","components/Login/Login.js","components/ButtonAppBar/ButtonAppBar.js","components/ShopItem/ShopItem.js","components/ShopView/ShopView.js","components/VendorView/VendorView.js","components/VendorSignup/VendorSignup.js","components/EditClubInfo/EditClubInfo.js","components/AddProduct/AddProduct.js","components/OrderHistoryItem/OrderHistoryItem.js","components/OrderHistory/OrderHistory.js","components/ShopItemDetailed/ShopItemDetailed.js","components/EditItem/EditItem.js","components/EditItemView/EditItemView.js","components/Footer/Footer.js","components/AccountInfo/AccountInfo.js","components/RecoverPassword/RecoverPassword.js","components/InputRecoveryPassword/InputRecoveryPassword.js","components/CartItem/CartItem.js","components/PaypalButton/PaypalButton.js","components/Checkout/Checkout.js","components/Cart/Cart.js","components/CartView/CartView.js","components/EmailConfirmation/EmailConfirmation.js","components/ScrollToTop/ScrollToTop.js","components/AboutClub/AboutClub.js","components/Clubs/Clubs.js","components/GenericPage/GenericPage.js","components/Terms/Terms.js","components/Privacy/Privacy.js","components/Faq/Faq.js","App.js","serviceWorker.js","store/loginReducer.js","store/getProductsReducer.js","store/cartReducer.js","store/vendorReducer.js","store/shopItemReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","About","react_default","a","createElement","Hidden_default","smDown","className","mdUp","Component","actions","LOGGED_IN","LOGGED_OUT","GET_PRODUCTS","ADMIN_LOGGED_IN","GET_CART","ADD_CART","REMOVE_CART","EMPTY_CART","UPDATE_TOTAL","UPDATE_CART","UPDATE_AMOUNT_PURCHASED","GET_VENDOR_PRODUCTS","GET_VENDORS","UPDATE_VENDOR_ID","UPDATE_SELECTED_ITEM","Signup","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","responseGoogle","response","email","w3","U3","firstName","ofa","lastName","wea","setState","axios","post","params","then","res","console","log","data","success","isAdmin","updateLogin","notifier","title","message","type","getCart","history","push","get","withCredentials","currentVendorID","vendors","vid","currentVendors","currentVendorName","vendorName","updateAdminLogin","catch","err","toString","state","password","confirmPassword","open","progressValue","progressVariant","responseMessage","toRedirect","sendSignup","bind","assertThisInitialized","handleClose","handleEnter","_this2","e","keyCode","_this3","amtPurchased","i","length","updateItems","updateAmountPurchased","toShop","_this4","Redirect","to","id","Paper_default","TextField_default","label","required","onChange","event","target","value","onKeyDown","Button_default","variant","color","onClick","style","backgroundColor","boxShadow","fonFamily","google_login_default","clientId","process","buttonText","onSuccess","onFailure","cookiePolicy","connect","login","auth","dispatch","updateLogout","cart","vendorID","adminsOf","vendor","admins","currentVendor","amount","amountPurchased","withStyles","theme","progress","margin","spacing","unit","Home","Grid_default","container","direction","justify","alignContent","alignItems","react_alice_carousel_default","autoPlay","autoPlayInterval","buttonsDisabled","height","alt","src","image1","image2","image3","Link","require","width","Login","sendLogin","forceUpdate","logout","fontFamily","propsTypes","classes","PropTypes","object","isRequired","items","ButtonAppBar","alertMessage","currentAdminOf","openSelect","anchorEl","anchorElAccount","anchorIconMenu","anchorShop","handleMenuClose","handleMenuCloseAccount","handleAdminClick","currentTarget","handleIconMenuClick","handleIconMenuClose","handleAccountClick","handleShopClick","handleShopMenuClose","handleCloseSelect","handleOpenSelect","logoutUser","isResponsiveMenu","loginText","emptyCart","status","handleSelect","updateCurrentVendor","viewCartCheck","loginValue","toggleOpenDrawer","mobile","updateVendors","_this$state","vendorList","map","result","MenuItem_default","key","AppBar_default","position","backgroundImage","concat","header","backgroundSize","Toolbar_default","IconButton_default","aria-owns","undefined","aria-haspopup","Menu_default","core_Menu_default","Boolean","onClose","component","Typography_default","textDecoration","FormControl_default","marginRight","Select_default","onOpen","Badge_default","badgeContent","badge","ShoppingCart_default","react","text","cartLength","itemsPurchased","top","right","border","palette","ShopItem","name","productName","price","productPrice","pid","imageLink","imageSrc","addItem","updateVendor","showDetailed","viewVendor","user","image","updateSelectedItem","pathName","marginTop","Number","toFixed","displayLink","size","withRouter","newVendor","itemID","ShopView","updateProducts","products","vendorObject","find","components_ShopItem_ShopItem","productPicture","stock","productInfo","getAllItems","VendorView","bio","handle","match","VendorSignup","code","handleOpen","adminCode","marginBottom","InputLabel_default","EditClubInfo","lastUpdate","lastUpdateUser","emailSchedule","pickupInfo","facebook","instagram","getClubInfo","handleFileChange","files","filesToStore","imageNames","actualImages","images","imageName","randomText","possible","charAt","Math","floor","random","productID","selectedPreference","updateEmailPreferences","patch","sendEdit","forEach","file","fileUploader","startUpload","prevProps","paddingBottom","multiline","rowsMax","Infinity","react_firebase_file_uploader_lib_default","accept","storageRef","firebase","storage","ref","instance","multiple","onUploadError","error","select","config","apiKey","private_key","authDomain","databaseURL","storageBucket","initializeApp","field","maxImageSize","AddProduct","handleUploadSuccess","filename","child","handlePriceChange","isNaN","handleStockChange","handleStockChangeApparel","defineProperty","runningStockTotal","small","medium","large","xsmall","xlarge","apparelStock","isApparel","isItem","apparelCSS","itemShowStock","addProduct","uploadFiles","includes","split","s_stock","m_stock","l_stock","xs_stock","xl_stock","_this5","rows","InputProps","startAdornment","InputAdornment_default","FormLabel_default","RadioGroup_default","aria-label","handleChange","FormControlLabel_default","control","Radio_default","disabled","class","OrderHistoryItem","pickedUp","handleUpdateOrder","oid","updateOrder","_this$props","List_default","flexContainer","ListItem_default","ListItemText_default","primary","secondary","orderDate","Checkbox_default","checked","totalPrice","item","index","quantity","root","maxWidth","background","paper","dividerFullWidth","dividerInset","display","flexDirection","filterOrders","orders","filter","filterValue","order","searchOrders","searchValue","some","toLowerCase","OrderHistory","updateParent","handleSearch","typingTimeout","clearTimeout","setTimeout","search","renderOrders","arguments","convertDate","Date","date","hours","getHours","timeOfDay","String","minutes","getMinutes","actualDate","toDateString","components_OrderHistoryItem_OrderHistoryItem","paid","show","displayName","filteredOrders","toConsumableArray","reverse","marginLeft","autoComplete","htmlFor","inputProps","noValidate","OrderHistory_ClubOrders","ClubOrders","findIndex","newArr","_this$props2","total","token","CarouselImage","handleClick","isActive","data-index","ItemImageViewer","currentImage","nextImage","prevImage","changeImage","ShopItemDetailed_CarouselImage","ReactImageMagnify","smallImage","isFluidWidth","largeImage","enlargedImagePosition","enlargedImageContainerStyle","zIndex","ApparelItemInfo","handleQuantityChange","displayApparelStock","clubName","InputLabelProps","shrink","ItemInfo","_this$props3","displayStock","ShopItemDetailed","productStock","vendorNames","_this4$state","totalStock","totalAmountPurchased","addApparelToCart","apiURL","addQuantity","currentQuantity","removeQuantity","selectedSize","product","alert","ShopItemDetailed_ItemImageViewer","ShopItemDetailed_ItemInfo","ShopItemDetailed_ApparelItemInfo","selectedItem","selectedItemID","EditItem","updateFormAferClicked","clickFunction","EditItemView","getVendorProducts","populateEditForm","currentItem","info","itemStockCSS","itemSelected","updateItemInfo","imagesToUpload","newImages","pickupLocation","pickupTime","lastUser","components_EditItem_EditItem","Footer","AccountInfo","RecoverPassword","handleEmailField","sendRecoverEmail","onKeyPress","ev","preventDefault","InputRecoveryPassword","updatePassword","newPassword","handlePasswordField","handleConfirmPasswordField","queryString","parse","location","resetPassToken","duration","CartItem","newAmount","updateItemTotal","newTotal","removeItem","newItemsAfterDeletion","updateCartAfterDelete","updateTotal","sum","PPBtn","paypal","Button","driver","React","ReactDOM","PaypalButton","showButton","errorItem","asyncItemStockCheck","Promise","resolve","reject","amt","availableStock","checkStock","promises","all","isScriptLoaded","isScriptLoadSucceed","nextProps","currency","env","commit","client","onError","onCancel","onNotEnoughStock","paymentOptions","payment","rest","create","assign","transactions","input_fields","no_shipping","shipping","onAuthorize","execute","cancelled","payerID","paymentID","paymentToken","returnUrl","defaultProps","scriptLoader","Checkout","subtractStockSingleItem","sizeStock","subtractStock","waitPromises","currentVendorItems","cartItems","removeItemsFromVendor","removeSingleItemFromVendor","updateSelectedVendor","handlePaypalHide","item_list","totalValue","itemName","displayPaypal","sandbox","production","intent","redirect_urls","return_url","cancel_url","note_to_payer","cartTotal","paypalTransactionsArray","paypalTransactions","paypalItems","paypalItem","updateCheckoutParams","displayPaypalButton","components_PaypalButton_PaypalButton","emptyCartOnPayment","clearTotalOnPayment","extendedIcon","Cart","currentCart","priceTotal","newItems","window","reload","passedItems","passedVendor","vendorsInView","passedAllVendors","components_CartItem_CartItem","updateAfterDelete","components_Checkout_Checkout","handleRedirect","updateCart","CartView","separateItems","itemsArray","currentItems","Array","j","vendorItemsSeparated","separateVendors","currentVendorArray","currentVid","allVendors","currentCartItems","updateVendorsView","newVendors","handleEmptyCart","pathname","pageText","renderCarts","vendorGroupName","listOfVendors","currentListItems","components_Cart_Cart","EmailConfirmation","isConfirmed","toLogin","errorMessage","ScrollToTop","scrollTo","children","ClubInfo","bioPictures","AboutClub_ClubImages","href","ClubImages","AboutClub","_res$data","AboutClub_ClubInfo","DisplayClub","bioPicture","aboutLink","shopLink","Clubs","GenericPage","justifyContent","Terms","Privacy","createBrowserHistory","interceptors","use","App","notificationDOMRef","createRef","addNotification","_ref","_ref$title","_ref$message","_ref$type","_ref$duration","current","insert","animationIn","animationOut","dismiss","dismissable","click","_unused","checkIfTokenNeedsRefresh","Router","components_ScrollToTop_ScrollToTop","components_ButtonAppBar_ButtonAppBar","Switch","Route","exact","path","render","components_ShopView_ShopView","components_Signup_Signup","components_Login_Login","components_CartView_CartView","components_VendorView_VendorView","components_VendorSignup_VendorSignup","components_EditClubInfo_EditClubInfo","components_AddProduct_AddProduct","components_OrderHistory_OrderHistory","components_ShopItemDetailed_ShopItemDetailed","AboutClub_AboutClub_AboutClub","components_EditItemView_EditItemView","Clubs_Clubs_Clubs","components_AccountInfo_AccountInfo","components_RecoverPassword_RecoverPassword","components_InputRecoveryPassword_InputRecoveryPassword","EmailConfirmation_EmailConfirmation_EmailConfirmation","GenericPage_GenericPage_GenericPage","Terms_Terms_Terms","Privacy_Privacy_Privacy","Faq_Privacy","Footer_Footer_Footer","react_notifications_component_default","hostname","initialState","reducer","action","objectSpread","rootReducer","combineReducers","loginReducer","getProductsReducer","cartReducer","vendorReducer","shopItemReducer","persistConfig","stateReconciler","autoMergeLevel2","pReducer","persistReducer","store","createStore","persistor","persistStore","es","integration_react","loading","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.18802645.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/muclubs.86f8618b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/foodtruck.823d22ff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/horses.825b5a81.jpg\";","module.exports = __webpack_public_path__ + \"static/media/global-header.5fec2924.svg\";","module.exports = __webpack_public_path__ + \"static/media/cows.12bbbb41.jpg\";","module.exports = __webpack_public_path__ + \"static/media/band.50815617.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bikes.d6d47694.jpg\";","module.exports = __webpack_public_path__ + \"static/media/farmersmarket.29d560e9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/facebook.e65be673.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram.03d3878e.svg\";","module.exports = __webpack_public_path__ + \"static/media/creative-market.62d25b56.svg\";","import React, { Component } from \"react\";\nimport \"./About.css\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\n\nexport default class About extends Component {\n  render() {\n    return (\n      \n      <div>\n        <Hidden smDown>\n      <div className=\"parallax\">\n      <div className = \"full-height\">\n      \n      <div className = \"greater-container\">\n      <div className=\"about-container\">\n      \n        <header className=\"hero-text\">\n\n          <div>About Us</div>\n\n        </header>\n        \n\n        </div>\n        </div>\n      </div>\n \n     \n        <section className=\"about-info\">\n        <div className=\"helvv\">\n            <h2 className=\"decorated\">\n              <span>ECS193 E-COMMERCE</span>\n            </h2>\n          </div>\n        <div className = \"about-center\">\n        \n        <div className = \"about-info-text\">\n            We are a group of Computer Science seniors and this website is our senior design final project.\n            From a technical standpoint, our goal was to make a site with secure end to end transactions using\n            modern technologies such as React, Node, Firebase, and Google Cloud Services.\n            </div>\n\n            <div className = \"about-info-text\">\n            Our motivation for this site is that UC Davis clubs typically have an unofficial way to sell their merchandise, usually through Facebook and word of mouth. \n            There is no easy way to display, buy and sell goods. \n            Our site is to provide a method to streamline this process. \n            </div>\n\n            <div className = \"about-info-text\">\n            If you have any more questions about our services, please visit our FAQ or contact us at ecs193.ecommerce@gmail.com\n            \n            </div>\n            </div>\n        </section>\n        \n        </div>\n        </Hidden>\n        <Hidden mdUp>\n        <section className=\"about-info\">\n\n            <h2>\n              <span>ECS193 E-COMMERCE</span>\n            </h2>\n\n  \n        \n        <div className = \"about-info-text\">\n            We are a group of Computer Science seniors and this website is our senior design final project.\n            From a technical standpoint, our goal was to make a site with secure end to end transactions using\n            modern technologies such as React, Node, Firebase, and Google Cloud Services.\n            </div>\n\n            <div className = \"about-info-text\">\n            Our motivation for this site is that UC Davis clubs typically have an unofficial way to sell their merchandise, usually through Facebook and word of mouth. \n            There is no easy way to display, buy and sell goods. \n            Our site is to provide a method to streamline this process. \n            </div>\n\n            <div className = \"about-info-text\">\n            If you have any more questions about our services, please visit our FAQ or contact us at ecs193.ecommerce@gmail.com\n            \n            </div>\n       \n        </section>\n\n\n        </Hidden>\n\n\n        </div>\n        \n\n    );\n  }\n}\n","//actions to trigger reducer to handle state changes\nconst actions =  {\n    //auth actions\n    LOGGED_IN: \"LOGGED_IN\",\n    LOGGED_OUT: \"LOGGED_OUT\",\n    GET_PRODUCTS: \"GET_PRODUCTS\",\n    ADMIN_LOGGED_IN: \"ADMIN_LOGGED_IN\",\n    //cart actions\n    GET_CART: \"GET_CART\",\n    ADD_CART:\"ADD_CART\",\n    REMOVE_CART:\"REMOVE_CART\",\n    EMPTY_CART: \"EMPTY_CART\",\n    UPDATE_TOTAL: \"UPDATE_TOTAL\",\n    UPDATE_CART: \"UPDATE_CART\",\n    UPDATE_AMOUNT_PURCHASED: \"UPDATE_AMOUNT_PURCHASED\",\n\n    //vendor actions\n    GET_VENDOR_PRODUCTS: \"GET_VENDOR_PRODUCTS\",\n    GET_VENDORS: \"GET_VENDORS\",\n    UPDATE_VENDOR_ID: \"UPDATE_VENDOR_ID\",\n    //update selected item in shop view for detailed item info\n    UPDATE_SELECTED_ITEM: \"UPDATE_SELECTED_ITEM\",\n}\n\nexport default actions;\n","import React, { Component } from \"react\";\nimport GoogleLogin from \"react-google-login\";\nimport axios from \"axios\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./Signup.css\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../store/actions\";\n// import Dialog from \"@material-ui/core/Dialog\";\n// import DialogContent from \"@material-ui/core/DialogContent\";\n// import DialogContentText from \"@material-ui/core/DialogContentText\";\n// import { DialogActions } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\n// import CircularProgress from \"@material-ui/core/CircularProgress\";\n// import coffee from \"../../images/coffee.jpg\";\nimport PropTypes from \"prop-types\";\nimport { Redirect } from \"react-router-dom\";\n\nconst styles = theme => ({\n  progress: {\n    margin: theme.spacing.unit * 2\n  }\n});\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    //store user input\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      open: false,\n      progressValue: 0,\n      progressVariant: \"determinate\",\n      responseMessage: \"\",\n      success: false,\n      toRedirect: false\n    };\n    this.sendSignup = this.sendSignup.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleEnter = this.handleEnter.bind(this);\n  }\n\n  //handle dialog closing\n  handleClose() {\n    this.setState({\n      open: false\n    });\n\n    // if (this.state.success === true) {\n    //   this.props.history.push(\"/login\");\n    // }\n  }\n\n  //send signup request\n  sendSignup() {\n    //load progress circle to wait for signup check\n    this.setState({\n      progressValue: 50,\n      progressVariant: \"indeterminate\"\n    });\n\n    if (this.state.password !== this.state.confirmPassword) {\n      this.props.notifier({\n        title: \"Error\",\n        message: \"Passwords do not match.\",\n        type: \"warning\"\n      });\n    } else {\n      const apiURL = \"/api/signup\";\n      //send signup request\n      axios\n        .post(apiURL, {\n          params: {\n            firstName: this.state.firstName,\n            lastName: this.state.lastName,\n            email: this.state.email,\n            password: this.state.password\n          }\n        })\n        .then(res => {\n          //if signup is successful, display success message\n          if (res.data.success === true) {\n            this.props.notifier({\n              title: \"Success\",\n              message:\n                \"Signup successful, please check your email to activate your account.\",\n              type: \"success\"\n            });\n            this.setState(() => ({ toRedirect: true }));\n            // this.props.history.push('/check-email')\n          }\n\n          //display error message\n          else {\n            this.props.notifier({\n              title: \"Error\",\n              message: res.data.message + \" Please try again.\",\n              type: \"warning\"\n            });\n          }\n        })\n        .catch(err => {\n          this.props.notifier({\n            title: \"Error\",\n            message: err.toString(),\n            type: \"danger\"\n          });\n        });\n    }\n  }\n\n  //handle enter key being pressed\n  handleEnter(e) {\n    var key = e.keyCode;\n    if (key === 13) {\n      this.sendSignup();\n    }\n  }\n\n  //get logged in user's cart info\n  getCart() {\n    const apiURL = \"/api/getUserCart\";\n    axios\n      .get(apiURL, {\n        withCredentials: true\n      })\n      .then(res => {\n        var amtPurchased = 0;\n\n        for (let i = 0; i < res.data.data.length; i++) {\n          amtPurchased = amtPurchased + res.data.data[i].amtPurchased;\n        }\n\n        //after getting cart info, update redux store container\n        this.props.updateItems(res.data.data);\n\n        //update cart badge based on number of items in user's cart\n        this.props.updateAmountPurchased(amtPurchased);\n\n        // switch to shop page\n        this.setState(() => ({ toShop: true }));\n      })\n      .catch(err => {\n        this.props.notifier({\n          title: \"Error\",\n          message: err.toString(),\n          type: \"danger\"\n        });\n      });\n  }\n\n  //response values after oauth returns with email login and password\n  responseGoogle = response => {\n    //after getting response from google, proceed with login process of redux state\n    //send login parameters to backend\n    var email = response.w3.U3;\n    var firstName = response.w3.ofa;\n    var lastName = response.w3.wea;\n\n    //update email of user logged in by modifying state\n    this.setState({\n      email: email\n    });\n\n    //make api call to login with gmail\n    axios\n      .post(\"/api/login/gmail\", {\n        params: {\n          email: email,\n          firstName: firstName,\n          lastName: lastName\n        }\n      })\n      .then(res => {\n        console.log(res);\n        //check for login success status\n        if (res.data.success === true && res.data.isAdmin === false) {\n          //dispatch update login action to update login state\n          this.props.updateLogin();\n\n          this.props.notifier({\n            title: \"Success\",\n            message: \"Login Successful\",\n            type: \"success\"\n          });\n\n          //after updating login, get cart info\n          this.getCart();\n          this.props.history.push(\"/shop\");\n\n          //display dialog for login successful\n        } else if (res.data.success === true && res.data.isAdmin === true) {\n          const vendorURL = \"/api/adminUser\";\n          axios\n            .get(vendorURL, {\n              withCredentials: true\n            })\n            .then(res => {\n              let currentVendorID = res.data.vendors[0].vid;\n              let currentVendors = res.data.vendors;\n              let currentVendorName = res.data.vendors[0].vendorName;\n\n              //update redux store state\n              this.props.updateAdminLogin(\n                currentVendorID,\n                currentVendors,\n                currentVendorName\n              );\n\n              //after updating login, get cart info\n              this.getCart();\n\n              //display dialog for login successful\n              this.props.notifier({\n                title: \"Success\",\n                message: \"Login Successful\",\n                type: \"success\"\n              });\n              this.props.history.push(\"/shop\");\n            })\n            .catch(err => {\n              this.props.notifier({\n                title: \"Error\",\n                message: err.toString(),\n                type: \"danger\"\n              });\n            });\n        } // end of admin login\n        else {\n          this.props.notifier({\n            title: \"Warning\",\n            message: res.data.message.toString(),\n            type: \"warning\"\n          });\n        }\n      })\n      .catch(err => {\n        this.props.notifier({\n          title: \"Error\",\n          message: err.toString(),\n          type: \"danger\"\n        });\n      });\n  };\n\n  /*\n  //response values after oauth returns with email login and password\n  responseGoogle = response => {\n    //after getting response from google, proceed with login process of redux state\n    //send login parameters to backend\n    var email = response.w3.U3;\n    var firstName = response.w3.ofa;\n    var lastName = response.w3.wea;\n\n    //update email of user logged in by modifying state\n    this.setState({\n      email: email\n    });\n\n    //make api call to login with gmail\n    axios\n      .post(\"/api/signup/googleSignup\", {\n        params: {\n          email: email,\n          firstName: firstName,\n          lastName: lastName\n        }\n      })\n      .then(res => {\n        //if signup is successful, display success message\n        if (res.data.success === true) {\n          this.props.notifier({\n            title: \"Success\",\n            message:\n              \"Signup successful. Please check your email for a confirmation link.\",\n            type: \"success\",\n            time: 5000\n          });\n          this.setState(() => ({ toRedirect: true }));\n          // this.props.history.push('/check-email')\n        }\n\n        //display error message\n        else {\n          this.props.notifier({\n            title: \"Error\",\n            message: res.data.message + \" Please try again.\",\n            type: \"warning\",\n            time: 5000\n          });\n        }\n      })\n      .catch(err => {\n        this.props.notifier({\n          title: \"Error\",\n          message: err.toString(),\n          type: \"danger\",\n          time: 5000,\n        });\n      });\n  };\n  */\n\n  render() {\n    // const { classes } = this.props;\n    if (this.state.toRedirect === true) {\n      return <Redirect to=\"/check-email\" />;\n    }\n\n    return (\n      <div id=\"signupContainer\">\n        <div id=\"signupForms\">\n          <Paper className=\"signupPaperContainer\">\n            <h1> Sign Up </h1>\n            <div className=\"textFormm\" id=\"row\">\n              <TextField\n                label=\"First Name\"\n                required=\"true\"\n                onChange={event =>\n                  this.setState({ firstName: event.target.value })\n                }\n                onKeyDown={this.handleEnter}\n              />\n            </div>\n            <div className=\"textFormm\" id=\"row\">\n              <TextField\n                label=\"Last Name\"\n                required=\"true\"\n                onChange={event =>\n                  this.setState({ lastName: event.target.value })\n                }\n                onKeyDown={this.handleEnter}\n              />\n            </div>\n            <div className=\"textFormm\" id=\"row\">\n              <TextField\n                label=\"Email\"\n                required=\"true\"\n                onChange={event => this.setState({ email: event.target.value })}\n                onKeyDown={this.handleEnter}\n              />\n            </div>\n            <div className=\"textFormm\" id=\"row\">\n              <TextField\n                type=\"password\"\n                label=\"Password\"\n                required=\"true\"\n                onChange={event =>\n                  this.setState({ password: event.target.value })\n                }\n                onKeyDown={this.handleEnter}\n              />\n            </div>\n            <div className=\"textFormm\" id=\"row\">\n              <TextField\n                type=\"password\"\n                label=\"Confirm Password\"\n                required=\"true\"\n                onChange={event =>\n                  this.setState({ confirmPassword: event.target.value })\n                }\n                onKeyDown={this.handleEnter}\n              />\n            </div>\n            <div className=\"pushDown\">\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={this.sendSignup}\n                style={{\n                  backgroundColor: \"#DAAA00\",\n                  color: \"white\",\n                  boxShadow: \"none\",\n                  fonFamily: \"Proxima Nova\"\n                }}\n              >\n                Sign Up\n              </Button>\n            </div>\n\n            <GoogleLogin\n              clientId={process.env.REACT_APP_GOOGLE_ID}\n              buttonText=\"Login in with Google\"\n              onSuccess={this.responseGoogle}\n              onFailure={this.responseGoogle}\n              cookiePolicy={\"single_host_origin\"}\n            />\n          </Paper>\n        </div>\n      </div>\n    );\n  }\n}\n\n//obtain state from store as props for component\n//get cart items, login value, and user email\nconst mapStateToProps = state => {\n  return {\n    login: state.auth.login\n  };\n};\n\n//redux, dispatch action to reducer to update state\nconst mapDispatchToProps = dispatch => {\n  return {\n    //update logged in values\n    updateLogin: () =>\n      dispatch({\n        type: actions.LOGGED_IN\n      }),\n\n    updateLogout: () =>\n      dispatch({\n        type: actions.LOGGED_OUT\n      }),\n\n    //get user's cart from state after logging in\n    updateItems: response =>\n      dispatch({\n        type: actions.GET_CART,\n        cart: response\n      }),\n\n    //update admin login\n    updateAdminLogin: (vendorID, adminsOf, vendor) =>\n      dispatch({\n        type: actions.ADMIN_LOGGED_IN,\n        vid: vendorID,\n        admins: adminsOf,\n        currentVendor: vendor\n      }),\n\n    updateAmountPurchased: amount =>\n      dispatch({\n        type: actions.UPDATE_AMOUNT_PURCHASED,\n        amountPurchased: amount\n      })\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(Signup));\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Home.css\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Slide } from \"react-slideshow-image\";\nimport AliceCarousel from \"react-alice-carousel\";\nimport \"react-alice-carousel/lib/alice-carousel.css\";\nimport image1 from \"../../images/muclubs.jpg\";\nimport image2 from \"../../images/foodtruck.jpg\";\nimport image3 from \"../../images/horses.jpg\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div id=\"homeContainer\">\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignContent=\"center\"\n          alignItems=\"center\"\n        >\n          {/* <div className=\"helv\"> */}\n          <header>\n            <h1 className = \"helv\"> Welcome to ECS193 E-Commerce! </h1>\n            </header>\n          {/* </div> */}\n\n          <div id=\"carouselContainer\">\n            <AliceCarousel\n              autoPlay={true}\n              autoPlayInterval={3000}\n              buttonsDisabled={true}\n              // responsive={this.responsive}\n              style={{ height: \"100vh\" }}\n            > \n            {/* must disable the carousel, cannot override library's responsive design */}\n              <img className=\"slideImage\" alt=\"UCD 1\" src={image1} />\n              <img className=\"slideImage\" alt=\"UCD 2\" src={image2} />\n              <img className=\"slideImage\" alt=\"UCD 3\" src={image3} />\n            </AliceCarousel>\n          </div>\n\n          <div className=\"helvv\">\n            <h2 className=\"decorated\">\n              <span>An E-Commerce Website for Clubs at UC Davis</span>\n            </h2>\n          </div>\n\n          <div className=\"roww\">\n            <div className=\"colls\">\n              <Link to=\"/shop\">\n                <div className=\"moreContainer\">\n                  <img src={require(\"../../images/cows.jpg\")} alt=\"Collection of Toy Cows\" width=\"100%\" />\n                  <div className=\"hero-textt\">SHOP</div>\n                </div>\n              </Link>\n            </div>\n\n            <div className=\"colls\">\n              <Link to=\"/clubs\">\n                <div className=\"moreContainer\">\n                  <img src={require(\"../../images/band.jpg\")} alt=\"UC Davis Band\" width=\"100%\" />\n                  <div className=\"hero-textt\">CLUBS</div>\n                </div>\n              </Link>\n            </div>\n\n            <div className=\"colls\">\n              <Link to=\"/about\">\n                <div className=\"moreContainer\">\n                  <img src={require(\"../../images/bikes.jpg\")} alt=\"Bike Lane\" width=\"100%\" />\n                  <div className=\"hero-textt\">ABOUT</div>\n                </div>\n              </Link>\n            </div>\n          </div>\n        </Grid>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../../store/actions\";\r\nimport \"./Login.css\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from \"axios\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n// import Dialog from \"@material-ui/core/Dialog\";\r\n// import DialogContent from \"@material-ui/core/DialogContent\";\r\n// import DialogContentText from \"@material-ui/core/DialogContentText\";\r\n// import { DialogActions } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n// import CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport PropTypes from \"prop-types\";\r\n// import painting from \"../../images/painting.jpg\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nconst styles = theme => ({\r\n  progress: {\r\n    margin: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\n//Login component, allows user to login with email and password credentials\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //store user input\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      open: false,\r\n      progressValue: 0,\r\n      progressVariant: \"determinate\",\r\n      responseMessage: \"\",\r\n      toShop: false,\r\n    };\r\n    this.getCart = this.getCart.bind(this);\r\n    this.sendLogin = this.sendLogin.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleEnter = this.handleEnter.bind(this);\r\n  }\r\n\r\n  //get logged in user's cart info\r\n  getCart() {\r\n    const apiURL = \"/api/getUserCart\";\r\n    axios\r\n      .get(apiURL, {\r\n        withCredentials: true\r\n      })\r\n      .then(res => {\r\n        var amtPurchased = 0;\r\n\r\n        for(let i = 0; i < res.data.data.length; i++){\r\n          amtPurchased = amtPurchased + res.data.data[i].amtPurchased\r\n        }\r\n\r\n        //after getting cart info, update redux store container\r\n        this.props.updateItems(res.data.data);\r\n\r\n        //update cart badge based on number of items in user's cart\r\n        this.props.updateAmountPurchased(amtPurchased);\r\n\r\n        // switch to shop page\r\n        this.setState(() => ({ toShop: true}));\r\n      })\r\n      .catch(err => {\r\n        this.props.notifier({\r\n          title: \"Error\",\r\n          message: err.toString(),\r\n          type: \"danger\"\r\n        });\r\n      });\r\n  }\r\n\r\n  //send login request, display if login was successful\r\n  sendLogin() {\r\n    //load progress circle to wait for login check\r\n    this.setState({\r\n      progressValue: 50,\r\n      progressVariant: \"indeterminate\"\r\n    });\r\n    const apiURL = \"/api/login\";\r\n    axios\r\n      .post(apiURL, {\r\n        params: {\r\n          email: this.state.email,\r\n          password: this.state.password\r\n        }\r\n      })\r\n      //successful login, display message\r\n      .then(res => {\r\n        //login for regular user, non-admin\r\n        if (res.data.success === true && res.data.isAdmin === false) {\r\n          //dispatch update login action to update login state\r\n\r\n          //update redux store with email and jwt\r\n          this.props.updateLogin();\r\n\r\n          //after updating login, get cart info\r\n          this.getCart();\r\n\r\n          //display dialog for login successful\r\n          this.props.notifier({\r\n            title: \"Success\",\r\n            message: \"Login Successful\",\r\n            type: \"success\"\r\n          });\r\n          this.props.history.push(\"/shop\");\r\n          this.forceUpdate();\r\n        } else if (res.data.success === true && res.data.isAdmin === true) {\r\n          //after determining user is an admin, get object list of user's active vendors\r\n\r\n          const vendorURL = \"/api/adminUser\";\r\n          axios\r\n            .get(vendorURL, {\r\n              withCredentials: true,\r\n            })\r\n            .then(res => {\r\n              let currentVendorID = res.data.vendors[0].vid;\r\n              let currentVendors = res.data.vendors;\r\n              let currentVendorName = res.data.vendors[0].vendorName;\r\n\r\n              //update redux store state\r\n              this.props.updateAdminLogin(\r\n                currentVendorID,\r\n                currentVendors,\r\n                currentVendorName\r\n              );\r\n\r\n              //after updating login, get cart info\r\n              this.getCart();\r\n\r\n              //display dialog for login successful\r\n              this.props.notifier({\r\n                title: \"Success\",\r\n                message: \"Login Successful\",\r\n                type: \"success\"\r\n              });\r\n              this.props.history.push(\"/shop\");\r\n            })\r\n            .catch(err => {\r\n              this.props.notifier({\r\n                title: \"Error\",\r\n                message: err.toString(),\r\n                type: \"danger\"\r\n              });\r\n            });\r\n        }\r\n        //display error message with logging in\r\n        else {\r\n          this.props.notifier({\r\n            title: \"Warning\",\r\n            message: res.data.message,\r\n            type: \"warning\"\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.props.notifier({\r\n          title: \"Error\",\r\n          message: err.toString(),\r\n          type: \"danger\"\r\n        });\r\n      });\r\n  }\r\n\r\n  //handle dialog closing\r\n  handleClose() {\r\n    this.setState({\r\n      open: false\r\n    });\r\n\r\n    if (this.props.login === true) {\r\n      this.props.history.push(\"/shop\");\r\n    }\r\n  }\r\n\r\n  //handle enter key being pressed\r\n  handleEnter(e) {\r\n    var key = e.keyCode;\r\n    if (key === 13) {\r\n      this.sendLogin();\r\n    }\r\n  }\r\n\r\n  //response values after oauth returns with email login and password\r\n  responseGoogle = response => {\r\n    //after getting response from google, proceed with login process of redux state\r\n    //send login parameters to backend\r\n    var email = response.w3.U3;\r\n    var firstName = response.w3.ofa;\r\n    var lastName = response.w3.wea;\r\n\r\n    //update email of user logged in by modifying state\r\n    this.setState({\r\n      email: email\r\n    });\r\n\r\n    //make api call to login with gmail\r\n    axios\r\n      .post(\"/api/login/gmail\", {\r\n        params: {\r\n          email: email,\r\n          firstName: firstName,\r\n          lastName: lastName\r\n        }\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n        //check for login success status\r\n        if (res.data.success === true && res.data.isAdmin === false) {\r\n          //dispatch update login action to update login state\r\n          this.props.updateLogin();\r\n\r\n          this.props.notifier({\r\n            title: \"Success\",\r\n            message: \"Login Successful\",\r\n            type: \"success\"\r\n          });\r\n\r\n          //after updating login, get cart info\r\n          this.getCart();\r\n          this.props.history.push(\"/shop\");\r\n\r\n          //display dialog for login successful\r\n        } else if (res.data.success === true && res.data.isAdmin === true) {\r\n          const vendorURL = \"/api/adminUser\";\r\n          axios\r\n            .get(vendorURL, {\r\n              withCredentials: true\r\n            })\r\n            .then(res => {\r\n              let currentVendorID = res.data.vendors[0].vid;\r\n              let currentVendors = res.data.vendors;\r\n              let currentVendorName = res.data.vendors[0].vendorName;\r\n\r\n              //update redux store state\r\n              this.props.updateAdminLogin(\r\n                currentVendorID,\r\n                currentVendors,\r\n                currentVendorName,\r\n              );\r\n\r\n              //after updating login, get cart info\r\n              this.getCart();\r\n\r\n              //display dialog for login successful\r\n              this.props.notifier({\r\n                title: \"Success\",\r\n                message: \"Login Successful\",\r\n                type: \"success\"\r\n              });\r\n              this.props.history.push(\"/shop\");\r\n            })\r\n            .catch(err => {\r\n              this.props.notifier({\r\n                title: \"Error\",\r\n                message: err.toString(),\r\n                type: \"danger\"\r\n              });\r\n            });\r\n        } // end of admin login\r\n        else {\r\n          this.props.notifier({\r\n            title: \"Warning\",\r\n            message: res.data.message.toString(),\r\n            type: \"warning\"\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.props.notifier({\r\n          title: \"Error\",\r\n          message: err.toString(),\r\n          type: \"danger\"\r\n        });\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.logout) {\r\n      this.props.updateLogout();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // const { classes } = this.props;\r\n\r\n    if (this.state.toShop === true) {\r\n      return <Redirect to=\"/shop\" />\r\n    }\r\n\r\n    return (\r\n      <div id=\"loginContainer\">\r\n        <div id=\"loginForms\">\r\n          <Paper className=\"paperContainer\">\r\n            <h1> Login </h1>\r\n            <div className=\"testFormm\" id=\"row\">\r\n              <TextField\r\n                id=\"outline-simple-start-adornment\"\r\n                label=\"Email\"\r\n                required={true}\r\n                onChange={event => this.setState({ email: event.target.value })}\r\n                onKeyDown={this.handleEnter}\r\n              />\r\n            </div>\r\n            <div className=\"textFormm\" id=\"row\">\r\n              <TextField\r\n                type=\"password\"\r\n                label=\"Password\"\r\n                required={true}\r\n                onChange={event =>\r\n                  this.setState({ password: event.target.value })\r\n                }\r\n                onKeyDown={this.handleEnter}\r\n              />\r\n              <Link to=\"/recoverPassword\">\r\n                <h6> Recover Password </h6>\r\n              </Link>\r\n            </div>\r\n\r\n            <div className=\"pushDown\">\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={this.sendLogin}\r\n                style = {{backgroundColor:\"#DAAA00\", color: \"white\", fontFamily: \"Proxima Nova\", boxShadow: \"none\"}}\r\n              >\r\n                Login\r\n              </Button>\r\n            </div>\r\n\r\n            <div className=\"pushDown2\">\r\n              <GoogleLogin\r\n                clientId={process.env.REACT_APP_GOOGLE_ID}\r\n                buttonText=\"Login with Google\"\r\n                onSuccess={this.responseGoogle}\r\n                onFailure={this.responseGoogle}\r\n                cookiePolicy={\"single_host_origin\"}\r\n              />\r\n            </div>\r\n          </Paper>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//obtain state from store as props for component\r\n//get cart items, login value, and user email\r\nconst mapStateToProps = state => {\r\n  return {\r\n    items: state.cart.items,\r\n    login: state.auth.login,\r\n    vendors: state.vendor.vendors\r\n  };\r\n};\r\n\r\n//redux, dispatch action to reducer to update state\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    //update logged in values\r\n    updateLogin: () =>\r\n      dispatch({\r\n        type: actions.LOGGED_IN,\r\n      }),\r\n\r\n    updateLogout: () =>\r\n      dispatch({\r\n        type: actions.LOGGED_OUT\r\n      }),\r\n\r\n    //get user's cart from state after logging in\r\n    updateItems: response =>\r\n      dispatch({\r\n        type: actions.GET_CART,\r\n        cart: response\r\n      }),\r\n\r\n    //update admin login\r\n    updateAdminLogin: (vendorID, adminsOf, vendor) =>\r\n      dispatch({\r\n        type: actions.ADMIN_LOGGED_IN,\r\n        vid: vendorID,\r\n        admins: adminsOf,\r\n        currentVendor: vendor,\r\n      }),\r\n\r\n    updateAmountPurchased: amount => \r\n      dispatch({\r\n        type: actions.UPDATE_AMOUNT_PURCHASED,\r\n        amountPurchased: amount\r\n      })\r\n  };\r\n};\r\n\r\nLogin.propsTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(Login));\r\n","import React, { Component, Fragment } from \"react\";\n// import PropTypes from \"prop-types\";\nimport \"./ButtonAppBar.css\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../store/actions\";\nimport { Link } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport CartIcon from \"@material-ui/icons/ShoppingCart\";\nimport Badge from \"@material-ui/core/Badge\";\nimport axios from \"axios\";\n// import Dialog from \"@material-ui/core/Dialog\";\n// import DialogContent from \"@material-ui/core/DialogContent\";\n// import DialogContentText from \"@material-ui/core/DialogContentText\";\n// import { DialogActions, OutlinedInput } from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\n// import InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n// import { createMuiTheme } from \"@material-ui/core/styles\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport header from \"../../images/global-header.svg\";\n\n// export const prime = '#89BBFE';\n\n//variables to store routes to redirect to with Link component\nconst homeRoute = \"/\";\nconst aboutRoute = \"/about\";\nconst signupRoute = \"/signup\";\nconst loginRoute = \"/login\";\n// const shopRoute = \"/shop\";\nconst cartRoute = \"/cart\";\nconst editClubRoute = \"/editClubInfo\";\nconst addProductRoute = \"/addProduct\";\nconst editItemRoute = \"/editItem\";\nconst orderHistoryRoute = \"/orderHistory\";\n// const accountInfoRoute = \"/accountInfo\";\n// const primary = \"#6F8AB7\";\n\n//style for cart to display number of items\nconst styles = theme => ({\n  badge: {\n    top: \"50%\",\n    right: -3,\n    // The border color match the background color.\n    border: `2px solid ${\n      theme.palette.type === \"light\"\n      // ? theme.palette.grey[200]\n      // : theme.palette.grey[900]\n    }`\n  }\n});\n\n//navbar component\nclass ButtonAppBar extends Component {\n  state = {\n    open: false,\n    alertMessage: \"\",\n    currentAdminOf: this.props.vendorID,\n    adminsOf: this.props.adminsOf,\n    openSelect: false,\n    currentVendor: \"\",\n    anchorEl: null,\n    anchorElAccount: null,\n    anchorIconMenu: null,\n    logout: false,\n    anchorShop: null \n  };\n\n  //when navbar loads, get list of all vendors in database\n  //trying to get club names\n  componentDidMount() {\n    const apiURL = \"/api/getVendorInfo\";\n    axios\n      .get(apiURL)\n      .then(res => {\n        //update vendors of redux store\n        this.props.updateVendors(res.data.vendors);\n      })\n      .catch(err => {\n        this.props.notifier({\n          title: \"Error\",\n          message: err.toString(),\n          type: \"danger\"\n        });\n      });\n  }\n\n  // handle menu\n  handleMenuClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  // handle menu\n  handleMenuCloseAccount = () => {\n    this.setState({ anchorElAccount: null });\n  };\n\n  handleAdminClick = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleIconMenuClick = event => {\n    this.setState({ anchorIconMenu: event.currentTarget });\n  };\n\n  handleIconMenuClose = () => {\n    this.setState({ anchorIconMenu: null });\n  };\n\n  //handle account click, same logic as handle admin click\n  handleAccountClick = event => {\n    this.setState({ anchorElAccount: event.currentTarget });\n  };\n\n  handleShopClick = event => {\n    this.setState({ anchorShop: event.currentTarget });\n  };\n\n  handleShopMenuClose = () => {\n    this.setState({ anchorShop: null });\n  };\n\n  //handle dialog closing\n  handleClose = () => {\n    this.setState({\n      open: false\n    });\n  };\n\n  //handle closing select\n  handleCloseSelect = () => {\n    this.setState({\n      openSelect: false\n    });\n  };\n\n  //handle open select\n  handleOpenSelect = () => {\n    this.setState({\n      openSelect: true\n    });\n  };\n\n  //logout user when clicking \"Logout\" on navbar\n  //empty shopping cart\n  logoutUser = isResponsiveMenu => {\n    if (this.props.loginText === \"Logout\") {\n      this.props.updateLogout();\n      this.props.emptyCart();\n\n      // setState to rerender component\n      this.setState(() => ({ logout: !this.state.logout }));\n      // this.forceUpdate();\n\n      // call route to clear token\n      axios\n        .post(\"/api/logout\", { withCredentials: true })\n        .then(res => {\n          console.log(res.status);\n        })\n        .catch(err => {\n          console.log(err);\n        });\n\n      //display dialog\n      this.props.notifier({\n        title: \"Success\",\n        message: \"Logout successful.\",\n        type: \"success\"\n      });\n    }\n    // if response menu and login text, then close menu\n    else if (isResponsiveMenu && this.props.loginText === \"Login\") {\n      this.handleIconMenuClose();\n    }\n  };\n\n  //update value selected from dropdown menu\n  //if user is an admin of multiple clubs, will change what is being updated\n  handleSelect = event => {\n    var currentVendorName = event.target.value;\n    var currentVendorID = \"\";\n\n    //search through list of vendors, check if name selected equals vendor\n    //update vendor name selected and vid\n    for (let i = 0; i < this.props.vendors.length; i++) {\n      if (this.props.vendors[i].vendorName === currentVendorName) {\n        currentVendorID = this.props.vendors[i].vid;\n        this.props.updateCurrentVendor(currentVendorID, currentVendorName);\n        break;\n      }\n    }\n  };\n\n  //check if user is logged in to view cart\n  viewCartCheck = () => {\n    //prevent user from using cart until logged in\n    if (this.props.loginValue === false) {\n      this.props.notifier({\n        title: \"Info\",\n        message: \"Please login to view cart.\",\n        type: \"info\"\n      });\n    }\n\n    //if logged in, get cart and calculate cart's total\n    else {\n      const apiURL = \"/api/getUserCart\";\n      //if user is logged in, get cart info\n      if (this.props.login === true) {\n        axios\n          .get(apiURL, {\n            withCredentials: true\n          })\n          .then(res => {\n            //after getting cart from server, update user's items in redux state\n            this.props.notifier({\n              title: \"Info\",\n              message: \"Updating store with new items.\",\n              type: \"info\"\n            });\n            this.props.updateItems(res.data.data);\n          })\n          .catch(err => {\n            this.props.notifier({\n              title: \"Error\",\n              message: err.toString(),\n              type: \"danger\"\n            });\n          });\n      }\n    }\n  };\n\n  toggleOpenDrawer = () => {\n    if (!this.state.mobile) {\n      return;\n    }\n    this.setState({\n      open: !this.state.open\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { anchorEl, anchorElAccount, anchorIconMenu } = this.state;\n\n    if (this.props.isAdmin) {\n      var vendorList = this.props.adminsOf.map(result => {\n        return (\n          <MenuItem key={result.vid} value={result.vendorName}>\n            {result.vendorName}\n          </MenuItem>\n        );\n      });\n    }\n\n    // aria-owns={anchorIconMenu ? \"responsive-menu\" : undefined}\n    // aria-haspopup=\"true\"\n    // onClick={this.handleIconMenuClick}\n    // style={{ color: \"white\", fontFamily: \"Raleway\" }}\n    // className=\"menuButton\"\n    // color=\"inherit\"\n    // aria-label=\"Menu\"\n    return (\n      <nav className=\"root\">\n        <AppBar\n          position=\"static\"\n          style={{ backgroundImage: `url(${header})`, backgroundSize: \"cover\", boxShadow: \"none\"}}\n        >\n          <Toolbar>\n            {/* MENU BUTTON */}\n            <Hidden mdUp>\n              <div id=\"menu-button\">\n                <IconButton\n                  aria-owns={anchorIconMenu ? \"responsive-menu\" : undefined}\n                  aria-haspopup=\"true\"\n                  onClick={this.handleIconMenuClick}\n                  style={{ color: \"white\" }}\n                  className=\"menuButton\"\n                >\n                  <MenuIcon />\n                </IconButton>\n\n                <Menu\n                  id=\"responsive-menu\"\n                  anchorEl={anchorIconMenu}\n                  open={Boolean(anchorIconMenu)}\n                  onClose={this.handleIconMenuClose}\n                >\n                  <MenuItem\n                    component={Link}\n                    to={homeRoute}\n                    color=\"inherit\"\n                    onClick={this.handleIconMenuClose}\n                    style={{ fontFamily: \"Raleway\" }}\n                  >\n                    Home\n                  </MenuItem>\n\n                  {this.props.loginValue ? (\n                    <MenuItem\n                      component={Link}\n                      to={orderHistoryRoute}\n                      color=\"inherit\"\n                      onClick={this.handleIconMenuClose}\n                      style={{ fontFamily: \"Raleway\" }}\n                    >\n                      Order History\n                    </MenuItem>\n                  ) : (\n                    \"\"\n                  )}\n\n                  {this.props.isAdmin ? (\n                    <Typography\n                      style={{\n                        textDecoration: \"none\",\n                        fontFamily: \"Raleway\"\n                        // marginRight: \"10px\"\n                      }}\n                    >\n                      Select Admin Club:\n                    </Typography>\n                  ) : (\n                    \"\"\n                  )}\n\n                  {this.props.isAdmin ? (\n                    <span>\n                      <FormControl\n                        variant=\"filled\"\n                        className=\"club-select\"\n                        style={{ marginRight: \"10px\" }}\n                      >\n                        <Select\n                          value={this.props.currentVendor}\n                          open={this.state.openSelect}\n                          onClose={this.handleCloseSelect}\n                          onOpen={this.handleOpenSelect}\n                          onChange={this.handleSelect}\n                          style={{ color: \"black\" }}\n                        >\n                          {vendorList}\n                        </Select>\n                      </FormControl>\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n\n                  {this.props.isAdmin ? (\n                    <span>\n                      <MenuItem\n                        aria-haspopup=\"true\"\n                        onClick={this.handleAdminClick}\n                        style={{ fontFamily: \"Raleway\" }}\n                      >\n                        Admin Menu\n                      </MenuItem>\n\n                      <Menu\n                        anchorEl={anchorEl}\n                        open={Boolean(anchorEl)}\n                        onClose={this.handleMenuClose}\n                      >\n                        <MenuItem\n                          component={Link}\n                          to={editClubRoute}\n                          color=\"inherit\"\n                          onClick={this.handleMenuClose}\n                        >\n                          Edit Club Info\n                        </MenuItem>\n\n                        <MenuItem\n                          component={Link}\n                          to={addProductRoute}\n                          color=\"inherit\"\n                          onClick={this.handleMenuClose}\n                        >\n                          Add Items\n                        </MenuItem>\n                        <MenuItem\n                          component={Link}\n                          to={editItemRoute}\n                          color=\"inherit\"\n                          onClick={this.handleMenuClose}\n                        >\n                          Edit Items\n                        </MenuItem>\n                      </Menu>\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n\n                  <MenuItem\n                    component={Link}\n                    to={aboutRoute}\n                    color=\"inherit\"\n                    style={{ fontFamily: \"Raleway\" }}\n                    onClick={this.handleIconMenuClose}\n                  >\n                    About\n                  </MenuItem>\n\n                  <MenuItem\n                  component={Link}\n                  to=\"/clubs\"\n                  color=\"inherit\"\n                  style={{ fontFamily: \"Raleway\" }}\n                >\n                  Clubs\n                </MenuItem>\n\n\n                  {!this.props.loginValue ? (\n                    <MenuItem\n                      component={Link}\n                      to={signupRoute}\n                      color=\"inherit\"\n                      style={{ fontFamily: \"Raleway\" }}\n                      onClick={this.handleIconMenuClose}\n                    >\n                      Sign Up\n                    </MenuItem>\n                  ) : (\n                    \"\"\n                  )}\n\n                  <MenuItem\n                    style={{ fontFamily: \"Raleway\" }}\n                    component={Link}\n                    to={loginRoute}\n                    color=\"inherit\"\n                    onClick={this.logoutUser}\n                  >\n                    {this.props.loginText}\n                  </MenuItem>\n                  <MenuItem\n                    color=\"inherit\"\n                    style={{ fontFamily: \"Raleway\" }}\n                    onClick={this.handleShopClick}\n                  >\n                    Shop\n                  </MenuItem>\n                  <Menu\n                    // id=\"admin-menu\"\n                    anchorEl={this.state.anchorShop}\n                    open={Boolean(this.state.anchorShop)}\n                    onClose={this.handleShopMenuClose}\n                  >\n                    <MenuItem\n                      component={Link}\n                      to={\"/clubs\"}\n                      color=\"inherit\"\n                      onClick={this.handleShopMenuClose}\n                    >\n                      By Club\n                    </MenuItem>\n\n                    <MenuItem\n                      component={Link}\n                      to={\"/shop\"}\n                      color=\"inherit\"\n                      onClick={this.handleShopMenuClose}\n                    >\n                      All Items\n                    </MenuItem>\n                  </Menu>\n\n                  {this.props.loginValue ? (\n                    // if logged in, display amt items in cart\n                    <MenuItem\n                      component={Link}\n                      to={cartRoute}\n                      color=\"inherit\"\n                      onClick={this.viewCartCheck}\n                    >\n                      <Badge\n                        badgeContent={this.props.amountPurchased}\n                        color=\"primary\"\n                        classes={{ badge: classes.badge }}\n                      >\n                        <CartIcon />\n                      </Badge>\n                    </MenuItem>\n                  ) : (\n                    // else not logged in, display generic cart icon\n                    <MenuItem color=\"inherit\" onClick={this.viewCartCheck}>\n                      <CartIcon />\n                    </MenuItem>\n                  )}\n                </Menu>\n              </div>\n            </Hidden>\n\n            {/******************* END RESPONSIVE MENU ICON **********/}\n\n            {/* HOME LABEL */}\n            <Hidden smDown>\n              <Typography\n                style={{ textDecoration: \"none\", fontFamily: \"Proxima Nova\" }}\n                component={Link}\n                to={homeRoute}\n                variant=\"h6\"\n                color=\"inherit\"\n                className=\"grow\"\n              >\n                ECS193 E-Commerce\n              </Typography>\n\n              {this.props.isAdmin ? (\n                <Typography\n                  style={{\n                    textDecoration: \"none\",\n                    fontFamily: \"Proxima Nova\",\n                    marginRight: \"10px\"\n                  }}\n                  variant=\"h6\"\n                  color=\"inherit\"\n                >\n                  Select Admin Club:\n                </Typography>\n              ) : (\n                \"\"\n              )}\n\n\n              {/* REGULAR NAV BAR */}\n              {/* NAV BUTTONS */}\n              <div id=\"navLink\">\n                {/* ADMIN BUTTONS */}\n                {this.props.isAdmin ? (\n                  <Fragment>\n                    {/* SELECT CLUB */}\n                    <FormControl\n                      variant=\"filled\"\n                      className=\"club-select\"\n                      style={{ marginRight: \"10px\" }}\n                    >\n                      <Select\n                        value={this.props.currentVendor}\n                        open={this.state.openSelect}\n                        onClose={this.handleCloseSelect}\n                        onOpen={this.handleOpenSelect}\n                        onChange={this.handleSelect}\n                        style={{ color: \"white\", fontFamily: \"Proxima Nova\", width: \"150px\" }}\n                      >\n                        {vendorList}\n                      </Select>\n                    </FormControl>\n\n                    <Button\n                      // aria-owns={anchorElAccount}\n                      aria-haspopup=\"true\"\n                      onClick={this.handleAdminClick}\n                      style={{ color: \"white\", fontFamily: \"Proxima Nova\" }}\n                    >\n                      Admin Menu\n                    </Button>\n                    <Menu\n                      // id=\"admin-menu\"\n                      anchorEl={anchorEl}\n                      open={Boolean(anchorEl)}\n                      onClose={this.handleMenuClose}\n                    >\n                      <MenuItem\n                        component={Link}\n                        to={editClubRoute}\n                        color=\"inherit\"\n                        onClick={this.handleMenuClose}\n                      >\n                        Edit Club Info\n                      </MenuItem>\n                      <MenuItem\n                        component={Link}\n                        to={addProductRoute}\n                        color=\"inherit\"\n                        onClick={this.handleMenuClose}\n                      >\n                        Add Items\n                      </MenuItem>\n                      <MenuItem\n                        component={Link}\n                        to={editItemRoute}\n                        color=\"inherit\"\n                        onClick={this.handleMenuClose}\n                      >\n                        Edit Items\n                      </MenuItem>\n                    </Menu>\n                  </Fragment>\n                ) : (\n                  // else dont display admin stuff\n                  \"\"\n                )}\n\n                {/* BUTTONS FOR ALL USERS */}\n                <Button\n                  onClick={this.handleShopClick}\n                  color=\"inherit\"\n                  style={{ fontFamily: \"Proxima Nova\" }}\n                >\n                  Shop\n                </Button>\n                <Menu\n                  // id=\"admin-menu\"\n                  anchorEl={this.state.anchorShop}\n                  open={Boolean(this.state.anchorShop)}\n                  onClose={this.handleShopMenuClose}\n                >\n                  <MenuItem\n                    component={Link}\n                    to={\"/clubs\"}\n                    color=\"inherit\"\n                    onClick={this.handleShopMenuClose}\n                  >\n                    By Club\n                  </MenuItem>\n\n                  <MenuItem\n                    component={Link}\n                    to={\"/shop\"}\n                    color=\"inherit\"\n                    onClick={this.handleShopMenuClose}\n                  >\n                    All Items\n                  </MenuItem>\n                </Menu>\n\n                <Button\n                  component={Link}\n                  to=\"/clubs\"\n                  color=\"inherit\"\n                  style={{ fontFamily: \"Proxima Nova\" }}\n                >\n                  Clubs\n                </Button>\n\n                <Button\n                  component={Link}\n                  to={aboutRoute}\n                  color=\"inherit\"\n                  style={{ fontFamily: \"Proxima Nova\" }}\n                >\n                  About\n                </Button>\n\n                {/* display signup if not logged in */}\n                {!this.props.loginValue ? (\n                  <Button\n                    component={Link}\n                    to={signupRoute}\n                    color=\"inherit\"\n                    style={{ fontFamily: \"Proxima Nova\" }}\n                  >\n                    Sign Up\n                  </Button>\n                ) : (\n                  <Fragment />\n                )}\n\n                {/*LOGIN/LOGOUT BUTTON*/}\n                <Button\n                  style={{ fontFamily: \"Proxima Nova\" }}\n                  component={Link}\n                  to={loginRoute}\n                  color=\"inherit\"\n                  onClick={this.logoutUser}\n                >\n                  {this.props.loginText}\n                </Button>\n\n                {/* ACCOUNT BUTTON? */}\n                {this.props.loginValue ? (\n                  <Button\n                    component={Link}\n                    to={orderHistoryRoute}\n                    color=\"inherit\"\n                    style={{ fontFamily: \"Proxima Nova\" }}\n                  >\n                    Order History\n                  </Button>\n                ) : (\n                  \"\"\n                )}\n\n                \n\n                {/* CART BUTTON */}\n                {this.props.loginValue ? (\n                  // if logged in, display amt items in cart\n                  <Button\n                    component={Link}\n                    to={cartRoute}\n                    color=\"inherit\"\n                    onClick={this.viewCartCheck}\n                  >\n                    <Badge\n                      badgeContent={this.props.amountPurchased}\n                      color=\"primary\"\n                      classes={{ badge: classes.badge }}\n                    >\n                      <CartIcon />\n                    </Badge>\n                  </Button>\n                ) : (\n                  // else not logged in, display generic cart icon\n                  <Button color=\"inherit\" onClick={this.viewCartCheck}>\n                    <CartIcon />\n                  </Button>\n                )}\n              </div>\n            </Hidden>\n            {/* POP UP DIALOG */}\n            {/* TODO: remove with an alert library for UX */}\n            {/* <Dialog\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-describedby=\"alert-dialog-description\"\n              >\n                <DialogContent>\n                  <DialogContentText id=\"alert-dialog-description\">\n                    {this.state.alertMessage}\n                  </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                  <Button onClick={this.handleClose} color=\"primary\">\n                    Ok\n                  </Button>\n                </DialogActions>\n              </Dialog> */}\n          </Toolbar>\n        </AppBar>\n      </nav>\n    );\n  }\n}\n\n//redux\n\n//dispatch action to reducer\nconst mapDispatchToProps = dispatch => {\n  return {\n    //update store that user logged out\n    updateLogout: () =>\n      dispatch({\n        type: actions.LOGGED_OUT\n      }),\n\n    //update store cart is empty\n    emptyCart: () =>\n      dispatch({\n        type: actions.EMPTY_CART\n      }),\n\n    //update vendors\n    updateVendors: response =>\n      dispatch({\n        type: actions.GET_VENDORS,\n        vendors: response\n      }),\n\n    //update vendor id\n    updateCurrentVendor: (vendorID, vendorName) =>\n      dispatch({\n        type: actions.UPDATE_VENDOR_ID,\n        vid: vendorID,\n        vendor: vendorName\n      })\n  };\n};\n\n//obtain state from store as props for component\n//get login value, login text, and cart length\nconst mapStateToProps = state => {\n  return {\n    loginValue: state.auth.login,\n    loginText: state.auth.text,\n    isAdmin: state.auth.isAdmin,\n    cartLength: state.cart.items.length,\n    items: state.cart.items,\n    adminsOf: state.auth.adminsOf,\n    vendorID: state.auth.vendorID,\n    vendors: state.vendor.vendors,\n    currentVendor: state.auth.currentVendor,\n    amountPurchased: state.cart.itemsPurchased,\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(ButtonAppBar));\n","import React, { Component } from \"react\";\nimport \"./ShopItem.css\";\nimport Button from \"@material-ui/core/Button\";\nimport actions from \"../../store/actions\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\n// import { withStyles } from \"@material-ui/core/styles\";\nimport { Link, withRouter } from \"react-router-dom\";\n\n//component to display product info\nclass ShopItem extends Component {\n  constructor(props) {\n    super(props);\n\n    //initial state of products\n    this.state = {\n      name: this.props.productName,\n      price: this.props.productPrice,\n      pid: this.props.pid,\n      amtPurchased: 1,\n      vendorID: this.props.vendorID,\n      open: false,\n      alertMessage: \"\",\n      imageLink: this.props.imageSrc\n    };\n\n    //bind functions to component\n    this.addItem = this.addItem.bind(this);\n    this.updateVendor = this.updateVendor.bind(this);\n    this.showDetailed = this.showDetailed.bind(this);\n  }\n\n  //update vendor in redux store\n  updateVendor() {\n    var viewVendor = this.state.vendorID;\n    this.props.updateVendor(viewVendor);\n  }\n\n  //function to update cart of user\n  //add item to user's cart\n  addItem() {\n    //check if user is logged in\n    //only allow user to add to cart if logged in\n    if (this.props.login === false) {\n      this.setState({\n        open: true,\n        alertMessage: \"Please login to add to cart!\"\n      });\n    } else {\n      //update user's cart on server\n      var apiURL = \"/api/getUserCart/addItems\";\n      axios\n        .post(apiURL, {\n          params: {\n            user: this.props.user,\n            pid: this.state.pid,\n            amtPurchased: this.state.amtPurchased,\n            vendorID: this.state.vendorID,\n            image: this.state.imageLink\n          }\n        })\n        .then(res => {\n          if (res.data.success === true) {\n            //after adding to item, get updated cart\n            const getCartURL = \"/api/getUserCart\";\n            axios\n              .get(getCartURL, {\n                params: {\n                  user: this.props.user\n                }\n              })\n              .then(res => {\n                //after getting cart info, update redux store container\n                this.props.updateItems(res.data.data);\n                this.setState({\n                  open: true,\n                  alertMessage: \"Item added to cart!\"\n                });\n              })\n              .catch(err => {\n                this.props.notifier({\n                  title: \"Error\",\n                  message: err.toString(),\n                  type: \"danger\"\n                });\n              });\n          }\n        })\n        .catch(err => {\n          this.props.notifier({\n            title: \"Error\",\n            message: err.toString(),\n            type: \"danger\"\n          });\n        });\n    }\n  } //end of add item\n\n  //show detailed info of item, reroute\n  showDetailed() {\n    //update which item was selected for detailed view in Redux\n    this.props.updateSelectedItem(this.state.pid);\n    this.props.updateVendor(this.state.vendorID);\n\n    //add vendorID and pid to url as parameters\n    //allows user to access shop info via URL instead of only being allowed click\n\n    //construct URL with pathname, /itemDetails/vid/pid\n    var pathName = \"/itemDetails\";\n    pathName = pathName + \"/\" + this.state.vendorID;\n    pathName = pathName + \"/\" + this.state.pid;\n\n    //redirect to url with vendor id and pid\n    this.props.history.push(pathName);\n  }\n\n  render() {\n    return (\n\n      <div className=\"shopitem-container\">\n        <div onClick={this.showDetailed} className=\"box\">\n          <div className=\"center\">\n            <div className=\"darken\">\n            <img\n              src={this.props.imageSrc}\n              alt=\"Item\"\n              width=\"100%\"\n              height=\"100%\"            \n            />\n            </div>\n          </div>\n        </div>\n\n\n        <div className=\"resizing\">\n          <h5 className=\"shopitem-productname\">{this.props.productName}</h5>\n          <div style={{ marginTop: \"10px\" }}>\n            <span style={{ color: \"#DEB31A\" }}>\n              ${Number(this.props.productPrice).toFixed(2)}\n            </span>\n            {/* <Button size=\"small\" color=\"primary\" onClick={this.addItem}>\n              Add To Cart\n            </Button> */}\n            {this.props.displayLink ? (\n              <Button size=\"small\" color=\"primary\" onClick={this.updateVendor}>\n                <Link to={`/vendorProducts/${this.state.vendorID}`}\n                style = {{color: \"#00B5E2\"}}\n                >\n                  More From {this.props.vendorName}\n                </Link>\n              </Button>\n            ) : (\n              \"\"\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n//obtain state from store as props for component\n//get login value and user email\nconst mapStateToProps = state => {\n  return {\n    login: state.auth.login\n  };\n};\n\n//dispatch action to reducer\n//update redux state of current cart\nconst mapDispatchToProps = dispatch => {\n  return {\n    //get user's cart from state after logging in\n    updateItems: response =>\n      dispatch({\n        type: actions.GET_CART,\n        cart: response\n      }),\n\n    updateVendor: newVendor =>\n      dispatch({\n        type: actions.GET_VENDOR_PRODUCTS,\n        vendor: newVendor\n      }),\n\n    updateSelectedItem: pid =>\n      dispatch({\n        type: actions.UPDATE_SELECTED_ITEM,\n        itemID: pid\n      })\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(ShopItem)\n);\n","import React, { Component } from \"react\";\r\nimport \"./ShopView.css\";\r\nimport ShopItem from \"../ShopItem/ShopItem\";\r\nimport axios from \"axios\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../../store/actions\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass ShopView extends Component {\r\n\r\n  //get products from server after mounting to screen\r\n  componentDidMount() {\r\n    const apiURL = \"/api/getAllProducts\";\r\n    //get all products from server\r\n    //update state of view to obtain items\r\n    axios\r\n      .get(apiURL)\r\n      .then(res => {\r\n        //update product state in redux store\r\n        this.props.updateProducts(res.data.data);\r\n\r\n        //after getting products, get list of vendors\r\n        const vendorsURL = \"/api/getVendorInfo\";\r\n        axios\r\n          .get(vendorsURL)\r\n          .then(res => {\r\n            this.props.updateVendors(res.data.vendors);\r\n          })\r\n          .catch(err => {\r\n            this.props.notifier({\r\n              title: \"Error\",\r\n              message: \"Error getting vendors!\",\r\n              type: \"danger\"\r\n            });\r\n          });\r\n      })\r\n      .catch(err => {\r\n        this.props.notifier({\r\n          title: \"Error\",\r\n          message: \"Server error retrieving items\",\r\n          type: \"danger\"\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    if (this.props.products === null) {\r\n      this.props.history.push(\"/404-error\");\r\n    }\r\n\r\n    const vendors = this.props.vendors;\r\n    const items = this.props.products.map(result => {\r\n      let vendorObject = vendors.find(vendor => vendor.vid === result.vid);\r\n      return (\r\n        <ShopItem\r\n          key={result.pid}\r\n          imageSrc={result.productPicture[0]}\r\n          vendorID={result.vid}\r\n          pid={result.pid}\r\n          productName={result.productName}\r\n          productPrice={result.productPrice}\r\n          stock={result.stock}\r\n          productInfo={result.productInfo}\r\n          displayLink={true}\r\n          vendorName={vendorObject.vendorName}\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div id=\"shopview-container\">\r\n        <header>\r\n          <h1> Shop </h1>\r\n        </header>\r\n        <Hidden smDown>\r\n          <div className=\"shop-hero-image-container\">\r\n            <div className=\"hero-image\">\r\n              <img\r\n                src={require(\"../../images/farmersmarket.jpg\")}\r\n                width=\"100%\"\r\n                height=\"60%\"\r\n                alt=\"Shop Hero\"\r\n              />\r\n            </div>\r\n            <div className=\"hero-text\">UCD CLUBS</div>\r\n          </div>\r\n        </Hidden>\r\n        <div id=\"shopview-item-container\">{items}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//redux\r\n\r\n//dispatch action to reducer\r\n//update items from server to become state of store\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    updateProducts: products =>\r\n      dispatch({\r\n        type: actions.GET_PRODUCTS,\r\n        items: products\r\n      }),\r\n\r\n    updateVendors: currentVendors =>\r\n      dispatch({\r\n        type: actions.GET_VENDORS,\r\n        vendors: currentVendors\r\n      })\r\n  };\r\n};\r\n\r\n//get items from products state of store\r\n//obtain state from store as props for component\r\nconst mapStateToProps = state => {\r\n  return {\r\n    products: state.getAllItems.products,\r\n    vendors: state.vendor.vendors,\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(ShopView)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport \"./VendorView.css\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../../store/actions\";\r\nimport ShopItem from \"../ShopItem/ShopItem\";\r\nimport \"./VendorView.css\";\r\n\r\nclass VendorView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      products: [],\r\n      vendorName: \"\",\r\n      bio: \"\",\r\n      vid: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    //get array of vendor names and information associated with each vendor\r\n    const vendorAPI = \"/api/getVendorInfo\";\r\n\r\n    //get vendor info as an array and store into redux\r\n    axios\r\n      .get(vendorAPI)\r\n      .then(res => {\r\n        if (res.data.success === true) {\r\n          //update array of vendors containing vid, name, bio etc.\r\n          this.props.updateVendors(res.data.vendors);\r\n\r\n          //extract param values from URL\r\n          //match object contains parameter values\r\n          const handle = this.props.match.params;\r\n          const apiURL = \"/api/getVendorProducts\";\r\n          axios\r\n            .get(apiURL, {\r\n              params: {\r\n                vid: handle.vid\r\n              }\r\n            })\r\n            .then(res => {\r\n              var currentVendorName = \"\";\r\n              var currentVendorBio = \"\";\r\n\r\n              //search for matching vendor id in array of vendors of redux store\r\n              //compare parameter of vid in url to matching vid in array of vendors\r\n              for (let i = 0; i < this.props.vendors.length; i++) {\r\n                if (this.props.vendors[i].vid === handle.vid) {\r\n                  //extract info from matching vid\r\n                  //update component state, list of products from vendor, name of vendor, and bio\r\n                  this.setState({\r\n                    products: res.data.data,\r\n                    vendorName: this.props.vendors[i].vendorName,\r\n                    bio: this.props.vendors[i].bio,\r\n                    vid: this.props.vendors[i].vid,\r\n                  });\r\n                  break;\r\n                }\r\n              }\r\n            });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.props.notifier({\r\n          title: \"Error\",\r\n          message: err.toString(),\r\n          type: \"danger\"\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const items = this.state.products.map(result => {\r\n      return (\r\n        <ShopItem\r\n          key={result.pid}\r\n          imageSrc={result.productPicture[0]}\r\n          vendorID={result.vid}\r\n          pid={result.pid}\r\n          productName={result.productName}\r\n          productPrice={result.productPrice}\r\n          stock={result.stock}\r\n          productInfo={result.productInfo}\r\n          displayLink={false}\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"vendor-items-view-container\">\r\n        <h1 className=\"vendor-items-headers\"> {this.state.vendorName} </h1>\r\n        <h3>\r\n          <Link to={`/aboutClub/${this.state.vid}`}> About </Link>\r\n        </h3>\r\n        {/* <h3> Bio: {this.state.bio} </h3> */}\r\n\r\n        <div className=\"vendor-items-container\">{items}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//redux\r\n\r\n//dispatch action to reducer\r\n//update items from server to become state of store\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    //update products to view based on selected vendor\r\n    updateProducts: products =>\r\n      dispatch({\r\n        type: actions.GET_PRODUCTS,\r\n        items: products\r\n      }),\r\n\r\n    //update vendor names and information\r\n    updateVendors: currentVendors =>\r\n      dispatch({\r\n        type: actions.GET_VENDORS,\r\n        vendors: currentVendors\r\n      })\r\n  };\r\n};\r\n\r\n//get items from products state of store\r\n//obtain state from store as props for component\r\nconst mapStateToProps = state => {\r\n  return {\r\n    vendor: state.vendor.vendor,\r\n    vendors: state.vendor.vendors\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(VendorView);\r\n","import React, { Component } from 'react';\r\nimport './VendorSignup.css';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../store/actions';\r\nimport axios from 'axios';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n// import { createHashHistory, createBrowserHistory } from 'histor\r\n// const history = createBrowserHistory();\r\n\r\n//vendor confirmation\r\n\r\n//insert email for verification\r\n//dropdown menu to select clubs\r\n//insert access code\r\n\r\nclass VendorSignup extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      code: '',\r\n      vendor: 'Select Club Name',\r\n      open: false,\r\n      value: '',\r\n      vendorID: '',\r\n      vendors: []\r\n    };\r\n    this.sendSignup = this.sendSignup.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleOpen = this.handleOpen.bind(this);\r\n    this.handleSelect = this.handleSelect.bind(this);\r\n  }\r\n\r\n  //store list of active vendors from database\r\n  componentDidMount(){\r\n    const apiURL = \"/api/getVendorInfo\";\r\n    axios.get(apiURL)\r\n      .then(res => {\r\n        this.setState({\r\n          vendors: res.data.vendors\r\n        })\r\n      })\r\n      .catch(err => {\r\n        this.props.notifier({\r\n          title: \"Error\",\r\n          message: err.toString(),\r\n          type: \"danger\"\r\n        });\r\n      })\r\n  }\r\n\r\n  //close select\r\n  handleClose(){\r\n    this.setState({\r\n      open: false\r\n    })\r\n  }\r\n\r\n  //open select\r\n  handleOpen(){\r\n    this.setState({\r\n      open: true\r\n    })\r\n  }\r\n\r\n  //update value selected\r\n  handleSelect(event){\r\n    var currentVendorID = event.target.value;\r\n    var currentVendorName = '';\r\n    //search through list of available vendors\r\n    //save state of selected vendor\r\n    //save vendor id and name of selected vendor\r\n    for(let i = 0; i < this.state.vendors.length; i++){\r\n      if(this.state.vendors[i].vid === currentVendorID){\r\n        currentVendorName = this.state.vendors[i].vendorName;\r\n        this.setState({\r\n          vendorID: currentVendorID,\r\n          vendor: currentVendorName     \r\n        });\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  //send signup to verify admin process\r\n  sendSignup(){\r\n    //add current user to be admin of selected vendor\r\n    const apiURL = \"/api/adminUser/addAdminUser\";\r\n\r\n    axios.post(apiURL, {\r\n\r\n      params:{\r\n        user: this.state.email,\r\n        vid: this.state.vendorID,\r\n        adminCode: this.state.code\r\n      }\r\n    })\r\n    .then(res => {\r\n      //if successful, set isAdmin = true\r\n      //login in user\r\n      //redirect back to homepage with admin version of navbar\r\n      if(res.data.success === true){\r\n        //get list of vendors user is an admin of\r\n        //get the vids of vendors in which user is an admin of\r\n        const adminsURL = \"/api/adminUser\";\r\n        axios.get(adminsURL, {\r\n          withCredentials: true,\r\n        })\r\n        .then(res => {\r\n          if(res.data.success === true){\r\n            //update the user's email, update current admin of which vendor, and update which vendors user is an admin of\r\n            var currentVendor = '';\r\n\r\n            //find matching vendor id, extract vendor name from list of vendors\r\n            for(let i = 0; i < this.props.vendors.length; i++){\r\n              if(this.props.vendors[i].vid === this.state.vendorID){\r\n                currentVendor = this.props.vendors[i].vendorName;\r\n                break;\r\n              }\r\n            }\r\n\r\n            //update redux store\r\n            //update user's email, vendorID currently an admin of, list of vids of an admin of, and name of current\r\n            this.props.updateAdminLogin(this.state.vendorID, res.data.vendors,currentVendor);\r\n            this.props.notifier({\r\n              title: \"Success\",\r\n              message: \"Admin verification successful\",\r\n              type: \"success\"\r\n            });\r\n\r\n            //redirect user back home\r\n            this.props.history.push('/');\r\n          }\r\n        })\r\n        .catch(err => {\r\n          this.props.notifier({\r\n            title: \"Error\",\r\n            message: err.toString(),\r\n            type: \"danger\"\r\n          });\r\n        })\r\n      }\r\n\r\n      //print why verification didn't work\r\n      else{\r\n        this.props.notifier({\r\n          title: \"Error\",\r\n          message: res.data.message,\r\n          type: \"danger\"\r\n        });\r\n      }\r\n    })\r\n    .catch(err => {\r\n      this.props.notifier({\r\n        title: \"Error\",\r\n        message: err.toString(),\r\n        type: \"danger\"\r\n      });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.vendors == null) {\r\n      return (<div></div>)\r\n    }\r\n\r\n    const vendorList = this.state.vendors.map(result => {\r\n      return <MenuItem key = {result.vid} value = {result.vid} name = {result.vendorName}> {result.vendorName} </MenuItem>\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <Grid container direction = \"column\" justify = \"center\" alignItems = \"center\" id=\"vendor-signup-container\">\r\n          <Paper id = \"vendorSignupPaperContainer\">\r\n            <h1> Admin Verification </h1>\r\n            <div className = \"textForm\" id=\"row\">\r\n              <TextField\r\n                label=\"Email\"\r\n                required=\"true\"\r\n                onChange={(event) => this.setState({ email: event.target.value })}\r\n              />\r\n            </div>\r\n\r\n            <div className = \"textForm\" id=\"row\">\r\n              <TextField\r\n                label=\"Access Code\"\r\n                type=\"password\"\r\n                required=\"true\"\r\n                onChange={(event) => this.setState({ code: event.target.value })}\r\n                style={{marginBottom: \"15px\"}}\r\n              />\r\n            </div>\r\n\r\n            <h5> Select Vendor </h5>\r\n\r\n            <div className = \"textForm\" id = \"row\">\r\n              <FormControl id = \"clubForm\">\r\n                <InputLabel> {this.state.vendor} </InputLabel>\r\n                <Select value = {this.state.value} open = {this.state.open} onClose = {this.handleClose} onOpen = {this.handleOpen} onChange = {this.handleSelect}>\r\n                  {vendorList}\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n            <Button type = \"submit\" variant = \"contained\" color = \"primary\" onClick = {this.sendSignup} style={{marginTop: \"10px\"}}> Verify  </Button>\r\n          </Paper>\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n//obtain state from store as props for component\r\n//get cart items, login value, and user email\r\nconst mapStateToProps = state => {\r\n  return{\r\n    items: state.cart.items,\r\n    login: state.auth.login,\r\n    vendors: state.vendor.vendors\r\n  }\r\n}\r\n\r\n//redux\r\n//dispatch action to reducer, get user's cart from store\r\nconst mapDispatchToProps = dispatch => {\r\n  return{\r\n    updateAdminLogin: (vendorID, adminsOf, vendor) => dispatch({\r\n      type: actions.ADMIN_LOGGED_IN,\r\n      vid: vendorID,\r\n      admins: adminsOf,\r\n      currentVendor: vendor\r\n    })\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VendorSignup);\r\n","import React, { Component } from \"react\";\nimport \"./EditClubInfo.css\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\n// import actions from \"../../store/actions\";\nimport TextField from \"@material-ui/core/TextField\";\n// import Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport firebase from \"firebase\";\nimport FileUploader from \"react-firebase-file-uploader\";\n\nclass EditClubInfo extends Component {\n  state = {\n    bio: \"\",\n    lastUpdate: \"\",\n    lastUpdateUser: \"\",\n    vendorName: \"\",\n    emailSchedule: \"\",\n    email: \"\",\n    pickupInfo: \"\",\n    facebook: \"\",\n    instagram: \"\"\n  };\n\n  //get club info\n  getClubInfo = () => {\n    const apiURL = \"/api/adminVendor\";\n    axios\n      .get(apiURL, {\n        withCredentials: true,\n        params: {\n          vid: this.props.vendorID\n        }\n      })\n      .then(res => {\n        if (res.data.success === true) {\n          this.setState({\n            bio: res.data.bio,\n            lastUpdate: res.data.lastUpdate,\n            lastUpdateUser: res.data.lastUpdateUser,\n            vendorName: res.data.vendorName,\n            pickupInfo: res.data.pickupInfo,\n            email: res.data.email,\n            facebook: res.data.facebook,\n            instagram: res.data.instagram\n          });\n        } else {\n          this.props.notifier({\n            title: \"Error\",\n            message: \"Must be logged in and an admin to view.\",\n            type: \"danger\"\n          });\n        }\n      })\n      .catch(err => {\n        this.props.notifier({\n          title: \"Error\",\n          message: err.toString(),\n          type: \"danger\"\n        });\n      });\n  };\n\n  //detects when an image is uploaded from user\n  //change number of files to upload\n  handleFileChange = event => {\n    //extract file from upload component\n    const {\n      target: { files }\n    } = event;\n\n    const maxImageSize = 100000;\n\n    //TO DO modify file size\n    //check if image being uploaded exceeds max file size\n    if (files[0].size > maxImageSize) {\n      this.props.notifier({\n        title: \"Error\",\n        message: \"Please upload image less than 1MB\",\n        type: \"danger\"\n      });\n\n      //if file exceeds file size, cancel upload and set file input to null\n      //this is as if no file was uploaded\n      event.target.value = null;\n      return;\n    }\n\n    //if file size is acceptable, proceed saving file in array of images to upload to server\n\n    //store image names\n    // const filesToStore = [];\n    const filesToStore = this.state.imageNames;\n\n    //store actual image files\n    const actualImages = this.state.images;\n    // console.log(files[0]);\n\n    //store image name as an object\n    let imageName = {};\n    imageName.name = files[0].name;\n\n    //push values to arrays\n    filesToStore.push(imageName);\n    actualImages.push(files[0]);\n\n    //generate vid to match product with image\n    let randomText = \"\";\n    const possible =\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n    for (let i = 0; i < 20; i++) {\n      randomText += possible.charAt(\n        Math.floor(Math.random() * possible.length)\n      );\n    }\n\n    //set state of component\n    this.setState({\n      images: actualImages,\n      productID: randomText,\n      imageNames: filesToStore\n    });\n  };\n\n  //upload images to database\n  uploadFiles() {\n    //for each file in images array, upload to database\n    const files = this.state.images;\n    files.forEach(file => {\n      this.fileUploader.startUpload(file);\n    });\n  }\n\n  //handle select when user chooses email preference\n  handleSelect = () => {\n    //update email preference\n    this.setState({\n      emailSchedule: this.selectedPreference.value\n    });\n  };\n\n  //when component loads, get club info from server\n  componentDidMount() {\n    this.getClubInfo();\n  }\n\n  //if user selects another admin to update, update component with new club data\n  componentDidUpdate(prevProps) {\n    if (prevProps.vendorID != this.props.vendorID) {\n      this.getClubInfo();\n    }\n  }\n\n  //update email preferences\n  updateEmailPreferences = () => {\n    //validator to make sure admin selected appropriate email schedule\n    if (\n      this.state.emailSchedule === \"\" ||\n      this.state.emailSchedule === \"select\"\n    ) {\n      this.props.notifier({\n        title: \"Error\",\n        message: \"Please select an email preference time.\",\n        type: \"danger\"\n      });\n      return;\n    }\n    const apiURL = \"/api/adminVendor/emailSchedule\";\n    axios\n      .patch(apiURL, {\n        withCredentials: true,\n        params: {\n          emailSchedule: this.state.emailSchedule,\n          vid: this.props.vendorID\n        }\n      })\n      .then(res => {\n        if (res.data.success === true) {\n          this.props.notifier({\n            title: \"Success\",\n            message: res.data.message.toString(),\n            type: \"success\"\n          });\n        } else {\n          this.props.notifier({\n            title: \"Error\",\n            message: res.data.message.toString(),\n            type: \"warning\"\n          });\n        }\n      })\n      .catch(err => {\n        this.props.notifier({\n          title: \"Error\",\n          message: err.toString(),\n          type: \"danger\"\n        });\n      });\n  };\n\n  //update club info on server\n  sendEdit = () => {\n    //validator for inputs\n\n    //check a club name was provided\n    if (this.state.vendorName === \"\") {\n      this.props.notifier({\n        title: \"Error\",\n        message: \"Please insert club name\",\n        type: \"danger\"\n      });\n      return;\n    }\n\n    //check a bio was provided\n    if (this.state.bio === \"\") {\n      this.props.notifier({\n        title: \"Error\",\n        message: \"Please insert club biography\",\n        type: \"danger\"\n      });\n      return;\n    }\n\n    //check if an email was provided\n    if (this.state.email === \"\") {\n      this.props.notifier({\n        title: \"Error\",\n        message: \"Please insert contact email\",\n        type: \"danger\"\n      });\n      return;\n    }\n\n    //check if pickup info was provided\n    if (this.state.pickupInfo === \"\") {\n      this.props.notifier({\n        title: \"Error\",\n        message: \"Please insert pickup information\",\n        type: \"danger\"\n      });\n      return;\n    }\n\n    const apiURL = \"/api/adminVendor/editVendorInfo\";\n    axios\n      .patch(apiURL, {\n        withCredentials: true,\n        params: {\n          vid: this.props.vendorID,\n          vendorName: this.state.vendorName,\n          bio: this.state.bio,\n          email: this.state.email,\n          pickupInfo: this.state.pickupInfo,\n          facebook: this.state.facebook,\n          instagram: this.state.instagram\n        }\n      })\n      .then(res => {\n        //if edit was successful, get new info for edited club\n        if (res.data.success === true) {\n          this.props.notifier({\n            title: \"Success\",\n            message: res.data.message.toString(),\n            type: \"success\"\n          });\n          this.getClubInfo();\n        } else {\n          this.props.notifier({\n            title: \"Error\",\n            message: res.data.message.toString(),\n            type: \"danger\"\n          });\n        }\n      })\n      .catch(err => {\n        this.props.notifier({\n          title: \"Error\",\n          message: err.toString(),\n          type: \"danger\"\n        });\n      });\n  };\n\n  render() {\n    return (\n      <div id=\"edit-club-info-container\">\n        <h1> Edit Club Info </h1>\n\n        <h6> Last Updated: {this.state.lastUpdate} </h6>\n        <h6 id=\"goDown\"> Last Edited By: {this.state.lastUpdateUser} </h6>\n\n        <form id=\"editClubForm\">\n          <div className=\"tooltip\">\n            <span className=\"tooltiptext\">Your club's name.</span>\n            <div className=\"textForm\" id=\"row\">\n              <TextField\n                label=\"Club Name\"\n                value={this.state.vendorName}\n                required={true}\n                onChange={event =>\n                  this.setState({ vendorName: event.target.value })\n                }\n                style={{ paddingBottom: \"20px\", width: \"35vw\" }}\n              />\n            </div>\n          </div>\n\n          <div className=\"tooltip\">\n            <span className=\"tooltiptext\">\n              Your biography will displayed on your club's about page.\n            </span>\n            <div className=\"textForm\" id=\"row\">\n              <TextField\n                label=\"Biography\"\n                value={this.state.bio}\n                required={true}\n                onChange={event => this.setState({ bio: event.target.value })}\n                multiline={true}\n                rowsMax={Infinity}\n                style={{ paddingBottom: \"20px\", width: \"35vw\" }}\n              />\n            </div>\n          </div>\n          <div className=\"tooltip\">\n            <span className=\"tooltiptext\">\n              The location and time to pickup your products. This information\n              will also be displayed on your club's about page, as well as in\n              any of your club's order emails.\n            </span>\n            <div className=\"textForm\" id=\"row\">\n              <TextField\n                label=\"Item Pickup Info\"\n                value={this.state.pickupInfo}\n                required={true}\n                onChange={event =>\n                  this.setState({ pickupInfo: event.target.value })\n                }\n                multiline={true}\n                style={{ paddingBottom: \"20px\", width: \"35vw\" }}\n                rowsMax={Infinity}\n              />\n            </div>\n          </div>\n\n          <div className=\"tooltip\">\n            <span className=\"tooltiptext\">Link to your facebook.</span>\n            <div className=\"textForm\" id=\"row\">\n              <TextField\n                label=\"Facebook Link\"\n                value={this.state.facebook}\n                required={true}\n                onChange={event =>\n                  this.setState({ facebook: event.target.value })\n                }\n                multiline={false}\n                style={{ paddingBottom: \"20px\", width: \"35vw\" }}\n                rowsMax={Infinity}\n              />\n            </div>\n          </div>\n\n          <div className=\"tooltip\">\n            <span className=\"tooltiptext\">Link to your Instagram. </span>\n            <div className=\"textForm\" id=\"row\">\n              <TextField\n                label=\"Instagram Link\"\n                value={this.state.instagram}\n                required={false}\n                onChange={event =>\n                  this.setState({ instagram: event.target.value })\n                }\n                multiline={true}\n                style={{ paddingBottom: \"20px\", width: \"35vw\" }}\n                rowsMax={Infinity}\n              />\n            </div>\n          </div>\n\n          <div className=\"tooltip\">\n            <span className=\"tooltiptext\">\n              Contact email displayed in your club's about page. Also, this\n              email will be contacted periodically about the number of new\n              orders, if any.\n            </span>\n            <div className=\"textForm\" id=\"row\">\n              <TextField\n                label=\"Contact Email\"\n                required={true}\n                type=\"email\"\n                value={this.state.email}\n                onChange={event => this.setState({ email: event.target.value })}\n                style={{ paddingBottom: \"20px\", width: \"35vw\" }}\n              />\n            </div>\n          </div>\n        </form>\n\n        <div className=\"tooltip\">\n          {/* <span className=\"tooltiptext\">In progress </span> */}\n          <div className=\"btn-update-info\">\n            <Button\n              variant=\"contained\"\n              onClick={this.sendEdit}\n              style={{\n                backgroundColor: \"#DAAA00\",\n                color: \"white\",\n                fontFamily: \"Proxima Nova\",\n                boxShadow: \"none\"\n              }}\n            >\n              Update Club Info\n            </Button>\n          </div>\n        </div>\n\n        <div className=\"club-bio-picture-uploader\">\n          <h4>Upload club pictures to display on your club's about page.</h4>\n\n          <div id=\"column\" className=\"file-uploader tooltip\">\n\n            <span className=\"tooltiptext\">\n              The first picture will be the main image displayed on your club's\n              about page.\n            </span>\n            <FileUploader\n              accept=\"image/*\"\n              onChange={this.handleFileChange}\n              storageRef={firebase\n                .storage()\n                .ref(\n                  \"/images\" + \"/\" + this.props.vid + \"/\" + this.state.productID\n                )}\n              ref={instance => {\n                this.fileUploader = instance;\n              }}\n              multiple\n              onUploadError={error => {\n                this.props.notifier({\n                  title: \"Error\",\n                  message: error.toString(),\n                  type: \"danger\"\n                });\n              }}\n            />\n          </div>\n\n          <div id=\"column\" className=\"file-uploader tooltip\">\n            <span className=\"tooltiptext\">\n              The second picture will be the image displayed alongside the list\n              of other club's on our website. See https://193ecommerce.com/clubs\n            </span>\n            <FileUploader\n              accept=\"image/*\"\n              onChange={this.handleFileChange}\n              storageRef={firebase\n                .storage()\n                .ref(\n                  \"/images\" + \"/\" + this.props.vid + \"/\" + this.state.productID\n                )}\n              ref={instance => {\n                this.fileUploader = instance;\n              }}\n              multiple\n              onUploadError={error => {\n                this.props.notifier({\n                  title: \"Error\",\n                  message: error.toString(),\n                  type: \"danger\"\n                });\n              }}\n            />\n          </div>\n          <div className=\"tooltip\">\n            {/* <span className=\"tooltiptext\">In progress </span> */}\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{\n                backgroundColor: \"#DAAA00\",\n                color: \"white\",\n                fontFamily: \"Proxima Nova\",\n                boxShadow: \"none\"\n              }}\n            >\n              Update pictures.\n            </Button>\n          </div>\n\n        </div>\n\n        <div id=\"updateEmailsContainer\">\n          <div className=\"tooltip\">\n            <span className=\"tooltiptext\">\n              Your club's contact email will be notified every X hours about the\n              number of any new incoming orders. If there are no new orders\n              within the selected time period, no email will be sent.\n            </span>\n            <select\n              id=\"emailSelect\"\n              onChange={this.handleSelect}\n              ref={select => {\n                this.selectedPreference = select;\n              }}\n            >\n              <option value=\"select\"> Select your email preference </option>\n              <option value=\"none\"> None </option>\n              <option value=\"0 */1 * * *\"> Every 1 Hour </option>\n              <option value=\"0 */2 * * *\"> Every 2 Hours </option>\n              <option value=\"0 */4 * * *\"> Every 4 Hours </option>\n              <option value=\"0 */8 * * *\"> Every 8 Hours</option>\n              <option value=\"0 */24 * * *\"> Every 24 Hours </option>\n            </select>\n          </div>\n          <div className=\"tooltip\">\n            {/* <span className=\"tooltiptext\">In progress </span> */}\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.updateEmailPreferences}\n              style={{\n                backgroundColor: \"#DAAA00\",\n                color: \"white\",\n                fontFamily: \"Proxima Nova\",\n                boxShadow: \"none\"\n              }}\n            >\n              Update Email Preferences\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n//obtain state from store as props for component\n//get cart items, login value, and user email\nconst mapStateToProps = state => {\n  return {\n    items: state.cart.items,\n    login: state.auth.login,\n    vendorID: state.auth.vendorID,\n    isAdmin: state.auth.isAdmin\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(EditClubInfo);\n","import React, { Component } from \"react\";\nimport \"./AddProduct.css\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport firebase from \"firebase\";\nimport FileUploader from \"react-firebase-file-uploader\";\nimport firebaseConfig from \"../../config/ecs193-ecommerce-firebase-adminsdk-7iy3n-f581d24562.json\";\n\n//config file for firebase\nconst config = {\n  apiKey: firebaseConfig.private_key,\n  authDomain: \"ecs193-ecommerce.firebaseapp.com\",\n  databaseURL: \"https://ecs193-ecommerce.firebaseio.com\",\n  storageBucket: \"ecs193-ecommerce.appspot.com\"\n};\n\nfirebase.initializeApp(config);\n\n//image location for firestore upload\nconst imageLocation = \"images/vendors\";\n\nconst style = {\n  field: { width: \"500px\" }\n};\n\nconst maxImageSize = 100000;\n\n//component to allow admin to add products for purchase\nclass AddProduct extends Component {\n  constructor(props) {\n    super(props);\n    //EDIT, converting \"\" to Number results in 0, so default values set to \"\" to allow user to remove/delete input\n    this.state = {\n      productName: \"\",\n      productInfo: \"\",\n      productPrice: \"\",\n      stock: \"\",\n      productID: \"\",\n      isApparel: false,\n      isItem: false,\n      apparelStock: 0,\n      small: \"\",\n      medium: \"\",\n      large: \"\",\n      xsmall: \"\",\n      xlarge: \"\",\n      apparelCSS: \"hideApparelSizes\",\n      itemShowStock: \"showItemStock\",\n      images: [],\n      imageNames: []\n    };\n    this.addProduct = this.addProduct.bind(this);\n    this.handleUploadSuccess = this.handleUploadSuccess.bind(this);\n    this.uploadFiles = this.uploadFiles.bind(this);\n  }\n\n  //upload success\n  handleUploadSuccess = filename => {\n    firebase\n      .storage()\n      .ref(\"images\")\n      .child(filename);\n  };\n\n  //handle input change for product price\n  handlePriceChange = price => {\n    //if user types a non-number or doesn't press delete/backspace, don't register input change\n    if (isNaN(price.target.value) === true && price.target.value != \"\") {\n      return;\n    }\n\n    //else change value\n    else {\n      this.setState({\n        productPrice: price.target.value\n      });\n    }\n  };\n\n  //non apparel, account for empty field\n  handleStockChange = stock => {\n    //if the user backspaces or presses delete, create empty input for user to enter number\n    //converting \"\" to number using Number(stock) converts \"\" to 0\n    //if user tries to type a letter, just convert it to 0 or \"\"\n    if (isNaN(stock.target.value) === true || stock.target.value == \"\") {\n      this.setState({\n        stock: \"\"\n      });\n      return;\n    }\n\n    //if user enters a negative stock value, set default to \"\" in background\n    //display notifier\n    else if (Number(stock.target.value) < 0) {\n      this.setState({\n        stock: \"\"\n      });\n\n      this.props.notifier({\n        title: \"Warning\",\n        message: \"Please enter stock value greater than or equal to 0\",\n        type: \"warning\"\n      });\n    }\n\n    //else, set stock to user's input of number\n    else {\n      this.setState({\n        stock: Number(stock.target.value)\n      });\n    }\n  };\n\n  //handle stock change, update total stock values when user changes input\n  handleStockChangeApparel = name => stock => {\n    //check if user is trying to type non-number or letter, if so don't register change\n    if (isNaN(stock.target.value) === true && stock.target.value != \"\") {\n      return;\n    }\n\n    //if the user backspaces or presses delete, create empty input for user to enter number\n    //checks if user types a number, if user types a non-number set default value to \"\", or 0\n    else if (isNaN(stock.target.value) === true || stock.target.value == \"\") {\n      this.setState(\n        {\n          [name]: \"\"\n        },\n        () => {\n          //still add new running total if user removes value\n          //add running total of stocks when value is changed, callback function after state was updated\n          //when user adds \"\", records value as 0 and update new running total\n          var runningStockTotal = 0;\n          runningStockTotal =\n            Number(this.state.small) +\n            Number(this.state.medium) +\n            Number(this.state.large) +\n            Number(this.state.xsmall) +\n            Number(this.state.xlarge);\n\n          //update stock with running total\n          this.setState({\n            apparelStock: Number(runningStockTotal)\n          });\n        }\n      );\n    }\n\n    //if the user is setting the stock to a negative value, set default to 0\n    else if (Number(stock.target.value) < 0) {\n      this.setState({\n        [name]: \"\"\n      });\n      this.props.notifier({\n        title: \"Warning\",\n        message: \"Please enter stock value greater than or equal to 0\",\n        type: \"warning\"\n      });\n    }\n\n    //update stock of current item and update running total of stock items\n    else {\n      //update stock value for current size\n      //after updating current stock, update running total of stock for all sizes\n      //callback function called after setState\n      this.setState(\n        {\n          [name]: Number(stock.target.value)\n        },\n        () => {\n          //add running total of stocks when value is changed, callback function after state was updated\n          var runningStockTotal = 0;\n\n          runningStockTotal =\n            Number(this.state.small) +\n            Number(this.state.medium) +\n            Number(this.state.large) +\n            Number(this.state.xsmall) +\n            Number(this.state.xlarge);\n\n          //update stock with running total\n          this.setState({\n            apparelStock: Number(runningStockTotal)\n          });\n        }\n      );\n    }\n  };\n\n  //detects when an image is uploaded from user\n  //change number of files to upload\n  handleFileChange = event => {\n    //extract file from upload component\n    const {\n      target: { files }\n    } = event;\n\n    //TO DO modify file size\n    //check if image being uploaded exceeds max file size\n    if (files[0].size > maxImageSize) {\n      this.props.notifier({\n        title: \"Error\",\n        message: \"Please upload image less than 1MB\",\n        type: \"danger\"\n      });\n\n      //if file exceeds file size, cancel upload and set file input to null\n      //this is as if no file was uploaded\n      event.target.value = null;\n      return;\n    }\n\n    //if file size is acceptable, proceed saving file in array of images to upload to server\n\n    //store image names\n    // const filesToStore = [];\n    const filesToStore = this.state.imageNames;\n\n    //store actual image files\n    const actualImages = this.state.images;\n    // console.log(files[0]);\n\n    //store image name as an object\n    let imageName = {};\n    imageName.name = files[0].name;\n\n    //push values to arrays\n    filesToStore.push(imageName);\n    actualImages.push(files[0]);\n\n    //generate vid to match product with image\n    let randomText = \"\";\n    const possible =\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n    for (let i = 0; i < 20; i++) {\n      randomText += possible.charAt(\n        Math.floor(Math.random() * possible.length)\n      );\n    }\n\n    //set state of component\n    this.setState({\n      images: actualImages,\n      productID: randomText,\n      imageNames: filesToStore\n    });\n  };\n\n  //upload images to database\n  uploadFiles() {\n    //for each file in images array, upload to database\n    const files = this.state.images;\n    files.forEach(file => {\n      this.fileUploader.startUpload(file);\n    });\n  }\n\n  //add product that is an apparel type\n  //add product to vendor's collection in database\n  addProduct() {\n    //validators for input fields, making sure user has typed something\n\n    //product name\n    if (this.state.productName === \"\") {\n      this.props.notifier({\n        title: \"Error\",\n        message: \"Please insert name for product\",\n        type: \"danger\"\n      });\n      return;\n    }\n\n    //product info\n    if (this.state.productInfo === \"\") {\n      this.props.notifier({\n        title: \"Error\",\n        message: \"Please insert info for product\",\n        type: \"danger\"\n      });\n      return;\n    }\n\n    //product price\n    if (this.state.productPrice === \"\") {\n      this.props.notifier({\n        title: \"Error\",\n        message: \"Please insert price for product\",\n        type: \"danger\"\n      });\n      return;\n    }\n\n    //check to see if user inserted correct price format $D.CC\n    //if user enters money in format $D, then okay proceed\n    //throw an error if invalid money format such as $D.CCCCC or $D. or $D.C\n    if (this.state.productPrice.includes(\".\") === true) {\n      //check to see if user inputted more than 2 spots for cents\n      var checkCentValues = this.state.productPrice.split(\".\");\n      //split into array of items before . and after .\n      if (checkCentValues[1].length != 2) {\n        this.props.notifier({\n          title: \"Error\",\n          message: \"Please insert correct price format\",\n          type: \"danger\"\n        });\n        return;\n      }\n    }\n\n    //user needs to select item or apparel\n    if (this.state.isApparel === false && this.state.isItem === false) {\n      this.props.notifier({\n        title: \"Error\",\n        message: \"Please select an item type\",\n        type: \"danger\"\n      });\n      return;\n    }\n\n    //handle if item being added is an apparel\n    if (this.state.isApparel === true) {\n      //check if apparel stock is greater than 0\n      if (Number(this.state.apparelStock) === 0) {\n        this.props.notifier({\n          title: \"Error\",\n          message: \"Please insert stock for apparel items\",\n          type: \"danger\"\n        });\n        return;\n      }\n\n      //check for at least one image was uploaded for product\n      if (\n        this.state.images.length === 0 &&\n        this.state.imageNames.length === 0\n      ) {\n        this.props.notifier({\n          title: \"Error\",\n          message: \"Please upload at least one image for product\",\n          type: \"danger\"\n        });\n        return;\n      }\n\n      //proceed with adding product\n      const apiURL = \"/api/adminProducts/addNewProduct\";\n\n      //EDIT stock value is apparelStock, total apparel stock value summed from different sizes of apparel\n      //differs from stock by itself, which is total stock of non-apparel item\n      axios\n        .post(apiURL, {\n          withCredentials: true,\n          params: {\n            vid: this.props.vid,\n            productInfo: this.state.productInfo,\n            productName: this.state.productName,\n            productPrice: this.state.productPrice,\n            pid: this.state.productID,\n            stock: this.state.apparelStock,\n            isApparel: this.state.isApparel,\n            s_stock: this.state.small,\n            m_stock: this.state.medium,\n            l_stock: this.state.large,\n            xs_stock: this.state.xsmall,\n            xl_stock: this.state.xlarge,\n            productPicture: this.state.imageNames\n          }\n        })\n        .then(res => {\n          //upload image only on success\n          if (res.data.success === true) {\n            this.uploadFiles();\n            this.props.notifier({\n              title: \"Success\",\n              message: res.data.message.toString(),\n              type: \"success\"\n            });\n          }\n          //add product failed\n          else {\n            this.props.notifier({\n              title: \"Error\",\n              message: res.data.message.toString(),\n              type: \"danger\"\n            });\n          }\n        })\n        .catch(err => {\n          this.props.notifier({\n            title: \"Error\",\n            message: err.toString(),\n            type: \"danger\"\n          });\n        });\n    }\n\n    //if the item is not an apparel\n    else if (this.state.isItem === true) {\n      //check if stock is greater than 0\n      if (Number(this.state.stock) === 0) {\n        this.props.notifier({\n          title: \"Error\",\n          message: \"Please insert stock greater than 0 for item product\",\n          type: \"danger\"\n        });\n        return;\n      }\n\n      //check that at least one image was uploaded\n      if (\n        this.state.images.length === 0 &&\n        this.state.imageNames.length === 0\n      ) {\n        this.props.notifier({\n          title: \"Error\",\n          message: \"Please upload at least one image for product\",\n          type: \"danger\"\n        });\n        return;\n      }\n\n      //proceed with adding product\n      const apiURL = \"/api/adminProducts/addNewProduct\";\n      axios\n        .post(apiURL, {\n          withCredentials: true,\n          params: {\n            vid: this.props.vid,\n            productInfo: this.state.productInfo,\n            productName: this.state.productName,\n            productPrice: this.state.productPrice,\n            stock: this.state.stock,\n            pid: this.state.productID,\n            isApparel: this.state.isApparel,\n            productPicture: this.state.imageNames\n          }\n        })\n        .then(res => {\n          //upload image only on success\n          if (res.data.success === true) {\n            this.uploadFiles();\n            this.props.notifier({\n              title: \"Success\",\n              message: res.data.message.toString(),\n              type: \"success\"\n            });\n          }\n\n          //product failed to upload\n          else {\n            this.props.notifier({\n              title: \"Error\",\n              message: res.data.message.toString(),\n              type: \"danger\"\n            });\n          }\n        })\n        .catch(err => {\n          this.props.notifier({\n            title: \"Error\",\n            message: err.toString(),\n            type: \"danger\"\n          });\n        });\n    }\n  }\n\n  //EDIT removed type=number field in text fields, typing \"e\" is considered number value, want to prevent letters in number input\n  componentDidMount() {\n    // call a route to check if they are logged in and an admin\n    const apiURL = \"/api/adminUser/checkAdmin\";\n    axios\n      .get(apiURL, {\n        withCredentials: true\n      })\n      .then(res => {\n        // user not an admin\n        if (res.data.success === false) {\n          this.props.notifier({\n            title: \"Warning\",\n            message: \"Not an admin. Access denied.\",\n            type: \"warning\"\n          });\n          this.props.history.push(\"/login\");\n        }\n      })\n      .catch(err => {\n        this.props.notifier({\n          title: \"Error\",\n          message: err.toString(),\n          type: \"danger\"\n        });\n      });\n  }\n  render() {\n    return (\n      <div className=\"addProductContainer\">\n        {/* <Paper className=\"addProductPaperContainer\"> */}\n        <h1> Add Product </h1>\n        <div className=\"tooltip\">\n          <span className=\"tooltiptext\">Name of your product.</span>\n          <div className=\"add-textForm\" id=\"row\">\n            <TextField\n              label=\"Product Name\"\n              required=\"true\"\n              onChange={event =>\n                this.setState({ productName: event.target.value })\n              }\n              style={style.field}\n            />\n          </div>\n        </div>\n\n        <div className=\"tooltip\">\n          <span className=\"tooltiptext\">\n            The product info that will be displayed on the item's product page.\n          </span>\n          <div className=\"add-textForm\" id=\"row\">\n            <TextField\n              label=\"Product Info\"\n              required=\"true\"\n              multiline={true}\n              rows={2}\n              onChange={event =>\n                this.setState({ productInfo: event.target.value })\n              }\n              style={style.field}\n            />\n          </div>\n        </div>\n\n        {/* <div className=\"tooltip\">\n          <span className=\"tooltiptext\">In progress </span>\n          <div className=\"add-textForm\" id=\"row\">\n            <TextField\n              label=\"Pickup Location (Enter location and date/time)\"\n              required=\"true\"\n              onChange={event =>\n                this.setState({ pickupLocation: event.target.value })\n              }\n              style={style.field}\n            />\n          </div>\n        </div> */}\n\n        <div className=\"tooltip\">\n          <span className=\"tooltiptext\">The product's price in USD.</span>\n          <div className=\"add-textForm\" id=\"row\">\n            <TextField\n              label=\"Product Price\"\n              required={true}\n              //               type=\"number\"\n              //               onChange={event =>\n              //                 this.setState({ productPrice: event.target.value })\n              //               }\n              //               style={style.field}\n              //regular dollar sign,\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"> $ </InputAdornment>\n                )\n              }}\n              value={this.state.productPrice}\n              onChange={event => this.handlePriceChange(event)}\n              style={style.field}\n            />\n          </div>\n        </div>\n        {/* toggle visibility of product stock\n            if user is adding regular item, allow user to enter input\n            calculate running total if item is an apparel */}\n\n        <FormControl component=\"fieldset\">\n          <div className=\"add-textForm\">\n            <div className=\"tooltip\">\n              <span className=\"tooltiptext\">\n                Please select whether your product is a regular item on an\n                apparel item. Apparel items may have different sizes.\n              </span>\n              <FormLabel component=\"legend\" style={style.field}>\n                Select Product Type\n              </FormLabel>\n            </div>\n            <RadioGroup\n              aria-label=\"gender\"\n              name=\"gender2\"\n              value={this.state.value}\n              onChange={this.handleChange}\n            >\n              {/* if user selects item, hide apparel selections, toggle css */}\n              <FormControlLabel\n                control={<Radio color=\"primary\" />}\n                value=\"item\"\n                label=\"Item\"\n                // labelPlacement=\"start\"\n                onChange={() =>\n                  this.setState({\n                    isApparel: false,\n                    isItem: true,\n                    apparelCSS: \"hideApparelSizes\",\n                    itemShowStock: \"showItemStock\",\n                    apparelStock: 0,\n                    small: \"\",\n                    medium: \"\",\n                    large: \"\",\n                    xsmall: \"\",\n                    xlarge: \"\"\n                  })\n                }\n                style={style.field}\n              />\n              <FormControlLabel\n                control={<Radio color=\"primary\" />}\n                value=\"apparel\"\n                label=\"Apparel\"\n                // labelPlacement=\"start\"\n                onChange={() =>\n                  this.setState({\n                    isApparel: true,\n                    isItem: false,\n                    apparelCSS: \"showApparelSizes\",\n                    itemShowStock: \"hideItemStock\",\n                    stock: \"\"\n                  })\n                }\n              />\n            </RadioGroup>\n          </div>\n        </FormControl>\n\n        {/* <div className = {this.state.itemShowStock} id = \"row\"> */}\n        <div className=\"tooltip\">\n          <span className=\"tooltiptext\">\n            Your product's stock. The website will stop accepting orders for\n            that product once its stock is out.\n          </span>\n          <div className=\"add-textForm\" id=\"row\">\n            <TextField\n              label=\"Product Stock\"\n              required={true}\n              //remove type is number to allow user to enter backspace/delete character\n              //check for number by using isNaN on input change\n              value={this.state.stock}\n              onChange={event => this.handleStockChange(event)}\n              style={style.field}\n            />\n          </div>\n        </div>\n\n        {/* add quantity for apparel sizes, toggel visibility if selected */}\n        <div className={this.state.apparelCSS}>\n          <div className=\"add-textForm\" id=\"row\">\n            <TextField\n              label=\"Apparel Product Stock\"\n              type=\"number\"\n              //EDIT show value of apparel stock, which differs from regular stock total\n              value={this.state.apparelStock}\n              disabled\n            />\n          </div>\n\n          <div className=\"add-textForm\" id=\"row\">\n            <TextField\n              label=\"Small Stock\"\n              required={false}\n              value={this.state.small}\n              onChange={this.handleStockChangeApparel(\"small\")}\n            />\n          </div>\n\n          <div className=\"add-textForm\" id=\"row\">\n            <TextField\n              label=\"Medium Stock\"\n              required={false}\n              value={this.state.medium}\n              onChange={this.handleStockChangeApparel(\"medium\")}\n            />\n          </div>\n\n          <div className=\"add-textForm\" id=\"row\">\n            <TextField\n              label=\"Large Stock\"\n              required={false}\n              value={this.state.large}\n              onChange={this.handleStockChangeApparel(\"large\")}\n            />\n          </div>\n\n          <div className=\"add-textForm\" id=\"row\">\n            <TextField\n              label=\"X-Small Stock\"\n              required={false}\n              value={this.state.xsmall}\n              onChange={this.handleStockChangeApparel(\"xsmall\")}\n            />\n          </div>\n\n          <div className=\"add-textForm\" id=\"row\">\n            <TextField\n              label=\"X-Large Stock\"\n              required={false}\n              value={this.state.xlarge}\n              onChange={this.handleStockChangeApparel(\"xlarge\")}\n            />\n          </div>\n        </div>\n\n        <div className=\"add-textForm\" id=\"row\">\n          <div class=\"tooltip\">\n            <span class=\"tooltiptext\">\n              Upload the images for your product here, up to a maximum of four\n              pictures. NOTE: The first image uploaded will be the default image\n              displayed on shop. Remaining images used in the product's shop\n              page.\n            </span>\n            <h5 className=\"uploadImageText\"> Upload Images </h5>\n          </div>\n          <div id=\"column\">\n            <FileUploader\n              accept=\"image/*\"\n              onChange={this.handleFileChange}\n              storageRef={firebase\n                .storage()\n                .ref(\n                  \"/images\" + \"/\" + this.props.vid + \"/\" + this.state.productID\n                )}\n              ref={instance => {\n                this.fileUploader = instance;\n              }}\n              multiple\n              onUploadError={error => {\n                this.props.notifier({\n                  title: \"Error\",\n                  message: error.toString(),\n                  type: \"danger\"\n                });\n              }}\n            />\n          </div>\n\n          <div id=\"column\">\n            <FileUploader\n              accept=\"image/*\"\n              onChange={this.handleFileChange}\n              storageRef={firebase\n                .storage()\n                .ref(\n                  \"/images\" + \"/\" + this.props.vid + \"/\" + this.state.productID\n                )}\n              ref={instance => {\n                this.fileUploader = instance;\n              }}\n              multiple\n              onUploadError={error => {\n                this.props.notifier({\n                  title: \"Error\",\n                  message: error.toString(),\n                  type: \"danger\"\n                });\n              }}\n            />\n          </div>\n\n          <div id=\"column\">\n            <FileUploader\n              accept=\"image/*\"\n              onChange={this.handleFileChange}\n              storageRef={firebase\n                .storage()\n                .ref(\n                  \"/images\" + \"/\" + this.props.vid + \"/\" + this.state.productID\n                )}\n              ref={instance => {\n                this.fileUploader = instance;\n              }}\n              multiple\n              onUploadError={error => {\n                this.props.notifier({\n                  title: \"Error\",\n                  message: error.toString(),\n                  type: \"danger\"\n                });\n              }}\n            />\n          </div>\n\n          <div id=\"column\">\n            <FileUploader\n              accept=\"image/*\"\n              onChange={this.handleFileChange}\n              storageRef={firebase\n                .storage()\n                .ref(\n                  \"/images\" + \"/\" + this.props.vid + \"/\" + this.state.productID\n                )}\n              ref={instance => {\n                this.fileUploader = instance;\n              }}\n              multiple\n              onUploadError={error => {\n                this.props.notifier({\n                  title: \"Error\",\n                  message: error.toString(),\n                  type: \"danger\"\n                });\n              }}\n            />\n          </div>\n        </div>\n\n        <Button\n          variant=\"contained\"\n          onClick={this.addProduct}\n          style={{\n            backgroundColor: \"#DAAA00\",\n            color: \"white\",\n            fontFamily: \"Proxima Nova\",\n            boxShadow: \"none\"\n          }}\n        >\n          Add Product\n        </Button>\n      </div>\n    );\n  }\n}\n\n//redux\n\n//obtain state from store as props for component\n//get cart items, login value, and user email\nconst mapStateToProps = state => {\n  return {\n    items: state.cart.items,\n    login: state.auth.login,\n    vid: state.auth.vendorID\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(AddProduct);\n","import React, { Component } from \"react\";\nimport \"./OrderHistoryItem.css\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  dividerFullWidth: {\n    margin: `5px 0 0 ${1 * 2}px`\n  },\n  dividerInset: {\n    margin: `5px 0 0 ${1 * 9}px`\n  },\n  flexContainer: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  }\n});\n\nclass OrderHistoryItem extends Component {\n  static propTypes = {\n    classes: PropTypes.object.isRequired,\n    orderDate: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    firstName: PropTypes.string.isRequired,\n    lastName: PropTypes.string.isRequired,\n    paid: PropTypes.string.isRequired,\n    pickedUp: PropTypes.bool.isRequired,\n    totalPrice: PropTypes.string.isRequired,\n    items: PropTypes.array.isRequired,\n    vid: PropTypes.string.isRequired,\n    updateOrder: PropTypes.func.isRequired,\n  };\n\n  state = {\n    pickedUp: this.props.pickedUp\n  };\n\n  handleUpdateOrder = (oid, vid) => {\n    const apiURL = \"/api/orders/updateOrder\";\n    axios\n      .patch(apiURL, { withCredentials: true, params: { oid: oid, vid: vid } })\n      .then(res => {\n        if (res.data.success) {\n          this.props.updateOrder(oid, !this.state.pickedUp);\n          this.setState(() => ({ pickedUp: !this.state.pickedUp }));\n\n          // this.props.notifier({\n          //   title: \"Success\",\n          //   message: res.data.message.toString(),\n          //   type: \"success\"\n          // });\n        } else {\n          this.props.notifier({\n            title: \"Error\",\n            message: res.data.message.toString(),\n            type: \"warning\"\n          });\n        }\n      })\n      .catch(err => {\n        console.log(\"Error in OrderHistory:\", err);\n        this.props.notifier({\n          title: \"Error\",\n          message: err.toString(),\n          type: \"danger\"\n        });\n      });\n  };\n\n  render() {\n    const { classes, items, oid, vid } = this.props;\n\n    return (\n      <div className=\"order-history-item-container\">\n        <List className={classes.flexContainer}>\n          <ListItem>\n            <ListItemText primary=\"Date\" secondary={this.props.orderDate} />\n          </ListItem>\n\n          {/* <ListItem>\n          <ListItemText primary= \"Name\" secondary= {this.props.firstName + ' ' + this.props.lastName} />\n        </ListItem> */}\n\n          <ListItem>\n            <ListItemText primary=\"Email\" secondary={this.props.email} />\n          </ListItem>\n\n          <ListItem>\n            <ListItemText primary=\"Order ID\" secondary={this.props.oid} />\n          </ListItem>\n\n          {/* <ListItem>\n          <ListItemText primary=\"Paid\" secondary= {this.props.paid} />\n        </ListItem> */}\n\n          <ListItem>\n            <ListItemText\n              primary=\"Picked Up\"\n              secondary={this.state.pickedUp ? \"Yes\" : \"No\"}\n              style={{ position: \"relative\" }}\n            />\n            {vid !== \"null\" ? (\n              <Checkbox\n                checked={this.state.pickedUp}\n                color=\"primary\"\n                value=\"pickedUp\"\n                style={{ position: \"absolute\", right: \"100px\" }}\n                onChange={() => this.handleUpdateOrder(oid, vid)}\n              />\n            ) : (\n              \"\"\n            )}\n          </ListItem>\n\n          <ListItem>\n            <ListItemText\n              primary=\"Total\"\n              secondary={\"$\" + this.props.totalPrice}\n            />\n          </ListItem>\n        </List>\n\n        <div className=\"order-summary-container\">\n          <div className=\"order-summary-row-title order-summary-row\">\n            <div>\n              <b>Item</b>\n            </div>\n            <div>\n              <b>Price</b>\n            </div>\n            <div>\n              <b>Quantity</b>\n            </div>\n            <div>\n              <b>Total</b>\n            </div>\n          </div>\n          {items.map((item, index) => (\n            <div key={`${item.name}-${index}`} className=\"order-summary-row\">\n              <div className=\"order-summary-item\">\n                <div>\n                  <b>{`${item.name}`}</b>\n                </div>\n\n                {item.size && (\n                  <div>\n                    <b>Size</b>: {`${item.size}`}\n                  </div>\n                )}\n              </div>\n\n              <div>${item.price}</div>\n\n              <div>{item.quantity}</div>\n\n              <div>\n                ${Number(Number(item.price) * Number(item.quantity)).toFixed(2)}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(OrderHistoryItem);\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./OrderHistory.css\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../../store/actions\";\r\nimport axios from \"axios\";\r\nimport OrderHistoryItem from \"../OrderHistoryItem/OrderHistoryItem.js\";\r\nimport Button from \"@material-ui/core/Button\";\r\n// import FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n/**\r\n * Return array of all orders that have a certain filterValue\r\n *\r\n * @param {array} orders - array of order objects\r\n * @param {string} filter - property of order obj to check\r\n * @param {any} filterValue - value to check filter against\r\n */\r\nfunction filterOrders(orders, filter, filterValue) {\r\n  if (orders.length === 0 || orders === undefined) {\r\n    return [];\r\n  }\r\n\r\n  let history = orders.filter(order => {\r\n    if (order[filter] === filterValue) {\r\n      return true;\r\n    }\r\n    return false;\r\n  });\r\n\r\n  return history;\r\n}\r\n\r\n/**\r\n * Returns of an array of order objects filtered by item names containing the\r\n * search substring\r\n *\r\n * @param {array} orders - array of order objects\r\n * @param {string} searchValue - substring to search item name by\r\n */\r\nfunction searchOrders(orders, searchValue) {\r\n  if (orders.length === 0 || orders === undefined) {\r\n    return [];\r\n  }\r\n\r\n  let history = orders.filter(order => {\r\n    // true if any item name in order contains search substring\r\n    let hasSearch = order.items.some(item => {\r\n      return item.name.toLowerCase().includes(searchValue);\r\n    });\r\n\r\n    return hasSearch;\r\n  });\r\n\r\n  return history;\r\n}\r\n\r\nclass OrderHistory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      orders: [],\r\n      show: \"user\", // which order history to show\r\n      displayName: \"User\",\r\n      date: \"asc\", // default date to ascending order\r\n      pickedUp: \"all\",\r\n      search: \"\",\r\n      searchValue: \"\",\r\n      typingTimeout: 0,\r\n      updateParent: false\r\n    };\r\n  }\r\n\r\n  updateParent = () => {\r\n    console.log(\"I AM CALLED 1\");\r\n    this.setState({ updateParent: true });\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleSearch = event => {\r\n    // reset typing timeout\r\n    if (this.state.typingTimeout) {\r\n      clearTimeout(this.state.typingTimeout);\r\n    }\r\n\r\n    // put dealy on changing search state to account for user typing;\r\n    // done so that the component doesnt try to rerender for every letter\r\n    this.setState({\r\n      searchValue: event.target.value.toLowerCase(),\r\n      typingTimeout: setTimeout(() => {\r\n        this.setState(() => ({ search: this.state.searchValue }));\r\n      }, 300)\r\n    });\r\n    // this.setState({ search: event.target.value.toLowerCase() });\r\n  };\r\n\r\n  /**\r\n   * Return array OrderHistoryItem to be rendered to the page\r\n   *\r\n   * @param {array} orders - array of order objects\r\n   */\r\n  renderOrders = (orders, index, vid = \"null\", notifier, updateOrder) => {\r\n    let renderedOrders;\r\n\r\n    if (orders.length === 0 || orders === undefined) {\r\n      return (\r\n        <h2 id=\"order-history-container\" className=\"no-orders\">\r\n          No Orders\r\n        </h2>\r\n      );\r\n    }\r\n\r\n    renderedOrders = orders.map(order => {\r\n      let convertDate = new Date(order.date);\r\n      let hours = convertDate.getHours();\r\n      let timeOfDay = \"AM\";\r\n\r\n      if (hours > 12) {\r\n        hours = hours - 12;\r\n        timeOfDay = \"PM\";\r\n      }\r\n\r\n      hours = String(hours);\r\n\r\n      let minutes = String(convertDate.getMinutes());\r\n\r\n      if (minutes.length === 1) {\r\n        minutes = \"0\" + minutes;\r\n      }\r\n\r\n      // let seconds = String(convertDate.getSeconds());\r\n\r\n      let actualDate =\r\n        convertDate.toDateString() +\r\n        \" \" +\r\n        hours +\r\n        \":\" +\r\n        minutes +\r\n        \" \" +\r\n        timeOfDay;\r\n\r\n      return (\r\n        <Fragment key={`${order.oid}-${index}`}>\r\n          <OrderHistoryItem\r\n            key={`${order.oid}-${index}`}\r\n            orderDate={actualDate}\r\n            email={order.email}\r\n            firstName={order.firstName}\r\n            lastName={order.lastName}\r\n            oid={order.oid}\r\n            paid={String(order.paid)}\r\n            pickedUp={order.pickedUp}\r\n            totalPrice={order.totalPrice}\r\n            items={order.items}\r\n            notifier={notifier}\r\n            vid={vid}\r\n            updateOrder={updateOrder}\r\n          />\r\n        </Fragment>\r\n      );\r\n    });\r\n\r\n    return renderedOrders;\r\n  };\r\n\r\n  componentDidMount() {\r\n    const apiURL = \"/api/orders/getUserOrders\";\r\n\r\n    axios\r\n      .get(apiURL, {\r\n        withCredentials: true\r\n      })\r\n      .then(res => {\r\n        if (res.data.success === true) {\r\n          this.setState({\r\n            orders: res.data.orders\r\n          });\r\n        } else {\r\n          this.props.notifier({\r\n            title: \"Error\",\r\n            message: res.data.message.toString(),\r\n            type: \"warning\"\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.props.notifier({\r\n          title: \"Error\",\r\n          message: err.toString(),\r\n          type: \"warning\"\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { isAdmin, adminsOf } = this.props;\r\n\r\n    if (this.state.orders.length === 0) {\r\n      return (\r\n        <div id=\"order-history-container\">\r\n          <div className=\"order-history-center\">\r\n            <h1> No orders were made! </h1>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    let filteredOrders = this.state.orders;\r\n\r\n    if (this.state.pickedUp !== \"all\") {\r\n      filteredOrders = filterOrders(\r\n        filteredOrders,\r\n        \"pickedUp\",\r\n        this.state.pickedUp,\r\n        this.updateParent\r\n      );\r\n    }\r\n\r\n    // filter by search and pickedUp\r\n    if (this.state.search !== \"\") {\r\n      filteredOrders = searchOrders(filteredOrders, this.state.search);\r\n    }\r\n\r\n    // reverse array if descending\r\n    if (this.state.date === \"desc\") {\r\n      filteredOrders = [...filteredOrders].reverse();\r\n    }\r\n\r\n    // finally render the filtered orders into OrderHistoryItems\r\n    filteredOrders = this.renderOrders(\r\n      filteredOrders,\r\n      \"user\",\r\n      \"null\",\r\n      this.props.notifier,\r\n      this.updateParent\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <h1 className=\"centerHeader\"> {this.state.displayName} Orders </h1>\r\n        <div className=\"centerize\">\r\n          <div className=\"centerize\">\r\n            {/**\r\n             * TODO\r\n             * take out paid,\r\n             * put in email\r\n             * differentiate user orders vs club orders for admin\r\n             * filter/search order history\r\n             */}\r\n\r\n            {/* if admin, display button to switch to logged in user orders */}\r\n            {isAdmin ? (\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() =>\r\n                  this.setState({ show: \"user\", displayName: \"User\" })\r\n                }\r\n                key=\"user\"\r\n                style={{\r\n                  backgroundColor: \"#DAAA00\",\r\n                  color: \"white\",\r\n                  fontFamily: \"Proxima Nova\",\r\n                  boxShadow: \"none\"\r\n                }}\r\n              >\r\n                User Orders\r\n              </Button>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            {/* if admin, display buttons to switch to club orders */}\r\n            {isAdmin\r\n              ? adminsOf.map(vendor => (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    onClick={() =>\r\n                      this.setState({\r\n                        show: vendor.vid,\r\n                        displayName: vendor.vendorName\r\n                      })\r\n                    }\r\n                    key={vendor.vid}\r\n                    style={{\r\n                      marginLeft: \"10px\",\r\n                      backgroundColor: \"#DAAA00\",\r\n                      color: \"white\",\r\n                      fontFamily: \"Proxima Nova\",\r\n                      boxShadow: \"none\"\r\n                    }}\r\n                  >\r\n                    {vendor.vendorName} Orders\r\n                  </Button>\r\n                ))\r\n              : \"\"}\r\n\r\n            {/********* filter buttons ********************/}\r\n\r\n            <div id=\"order-history-filters-container\">\r\n              {/* filter by date: asc/desc */}\r\n              <form autoComplete=\"off\">\r\n                <InputLabel\r\n                  htmlFor=\"date\"\r\n                  style={{ fontFamily: \"Proxima Nova\" }}\r\n                >\r\n                  Date:\r\n                </InputLabel>\r\n                <Select\r\n                  value={this.state.date}\r\n                  onChange={this.handleChange}\r\n                  inputProps={{ name: \"date\", id: \"date\" }}\r\n                  style={{\r\n                    margin: \"16px 10px 0px 10px\",\r\n                    fontFamily: \"Proxima Nova\"\r\n                  }}\r\n                >\r\n                  <MenuItem value=\"asc\" style={{ fontFamily: \"Proxima Nova\" }}>\r\n                    Ascending\r\n                  </MenuItem>\r\n                  <MenuItem value=\"desc\" style={{ fontFamily: \"Proxima Nova\" }}>\r\n                    Descending\r\n                  </MenuItem>\r\n                </Select>\r\n              </form>\r\n\r\n              {/* filter by picked up true/false */}\r\n              <form autoComplete=\"off\">\r\n                <InputLabel\r\n                  htmlFor=\"pickedUp\"\r\n                  style={{ fontFamily: \"Proxima Nova\" }}\r\n                >\r\n                  Picked Up:\r\n                </InputLabel>\r\n                <Select\r\n                  value={this.state.pickedUp}\r\n                  onChange={this.handleChange}\r\n                  inputProps={{ name: \"pickedUp\", id: \"pickedUp\" }}\r\n                  style={{\r\n                    margin: \"16px 10px 0px 10px\",\r\n                    fontFamily: \"Proxima Nova\"\r\n                  }}\r\n                >\r\n                  <MenuItem value=\"all\" style={{ fontFamily: \"Proxima Nova\" }}>\r\n                    Display All\r\n                  </MenuItem>\r\n                  <MenuItem value={true} style={{ fontFamily: \"Proxima Nova\" }}>\r\n                    Yes\r\n                  </MenuItem>\r\n                  <MenuItem\r\n                    value={false}\r\n                    style={{ fontFamily: \"Proxima Nova\" }}\r\n                  >\r\n                    No\r\n                  </MenuItem>\r\n                </Select>\r\n              </form>\r\n\r\n              {/* search by item name in order */}\r\n              <form noValidate autoComplete=\"off\">\r\n                <TextField\r\n                  label=\"Search by Item Name\"\r\n                  value={this.state.searchValue}\r\n                  onChange={this.handleSearch}\r\n                  style={{ fontFamily: \"Proxima Nova\" }}\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* below displays the actual order histories */}\r\n        {isAdmin\r\n          ? adminsOf.map((vendor, index) => (\r\n              <ClubOrders\r\n                key={index}\r\n                vid={vendor.vid}\r\n                vendorName={vendor.vendorName}\r\n                notifier={this.props.notifier}\r\n                show={this.state.show}\r\n                date={this.state.date}\r\n                pickedUp={this.state.pickedUp}\r\n                search={this.state.search}\r\n                renderOrders={this.renderOrders}\r\n                style={{ fontFamily: \"Proxima Nova\" }}\r\n              />\r\n            ))\r\n          : \"\"}\r\n\r\n        {/* this user orders */}\r\n        {this.state.show === \"user\" ? (\r\n          <div id=\"order-history-items-container\" key=\"user-orders\">\r\n            {filteredOrders}\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass ClubOrders extends Component {\r\n  static propTypes = {\r\n    // vendors: PropTypes.array.isRequired,\r\n    notifier: PropTypes.func.isRequired,\r\n    vid: PropTypes.string.isRequired,\r\n    vendorName: PropTypes.string.isRequired,\r\n    show: PropTypes.string,\r\n    date: PropTypes.string.isRequired\r\n    // pickedUp: PropTypes.bool.isRequired\r\n  };\r\n\r\n  state = {\r\n    orders: [],\r\n    display: true,\r\n    updateParent: false\r\n  };\r\n\r\n  updateParent = () => {\r\n    console.log(\"I AM CALLED 2\");\r\n    this.forceUpdate();\r\n    // this.setState({ updateParent: true })\r\n  };\r\n\r\n  updateOrder = (oid, pickedUp) => {\r\n    const index = this.state.orders.findIndex(order => order.oid === oid);\r\n    const newArr = this.state.orders;\r\n    newArr[index].oid = oid;\r\n    newArr[index].pickedUp = pickedUp;\r\n    this.setState(() => ({ orders: newArr }));\r\n  };\r\n\r\n  componentDidMount() {\r\n    const apiURL = \"/api/orders/getVendorOrders\";\r\n    axios\r\n      .post(apiURL, { withCredentials: true, params: { vid: this.props.vid } })\r\n      .then(res => {\r\n        if (res.data.success) {\r\n          this.setState({\r\n            orders: res.data.orders\r\n          });\r\n        } else {\r\n          this.props.notifier({\r\n            title: \"Error\",\r\n            message: res.data.message.toString(),\r\n            type: \"warning\"\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(\"Error in ClubOrders:\", err);\r\n        this.props.notifier({\r\n          title: \"Error\",\r\n          message: err.toString(),\r\n          type: \"danger\"\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { vendorName, show, vid, date, pickedUp, search } = this.props;\r\n\r\n    let filteredOrders = this.state.orders;\r\n\r\n    if (show !== vid) {\r\n      return null;\r\n    }\r\n\r\n    // TODO pickedUp toggling fixes\r\n\r\n    if (pickedUp !== \"all\") {\r\n      filteredOrders = filterOrders(filteredOrders, \"pickedUp\", pickedUp);\r\n    }\r\n\r\n    // filter by search and pickedUp\r\n    if (search !== \"\") {\r\n      filteredOrders = searchOrders(filteredOrders, search);\r\n    }\r\n\r\n    // reverse array if descending\r\n    if (date === \"desc\") {\r\n      filteredOrders = [...filteredOrders].reverse();\r\n    }\r\n\r\n    // finally render the filtered orders into OrderHistoryItems\r\n    filteredOrders = this.props.renderOrders(\r\n      filteredOrders,\r\n      vendorName,\r\n      vid,\r\n      this.props.notifier,\r\n      this.updateOrder\r\n    );\r\n\r\n    return (\r\n      <div id=\"order-history-container\">\r\n        {/* <h3 className=\"order-history-vendor-name\">{vendorName} Orders</h3> */}\r\n        {filteredOrders}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//obtain state from store as props for component\r\n//get cart items, login value, and user email\r\nconst mapStateToProps = state => {\r\n  return {\r\n    items: state.cart.items,\r\n    login: state.auth.login,\r\n    user: state.auth.user,\r\n    total: state.cart.total,\r\n    cart: state.cart.items,\r\n    isAdmin: state.auth.isAdmin,\r\n    adminsOf: state.auth.adminsOf,\r\n    token: state.auth.token\r\n  };\r\n};\r\n\r\n//redux\r\n//dispatch action to reducer, get user's cart from store\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    updateItems: response =>\r\n      dispatch({\r\n        type: actions.GET_CART,\r\n        cart: response\r\n      })\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(OrderHistory);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport actions from \"../../store/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./ShopItemDetailed.css\";\r\nimport ReactImageMagnify from \"react-image-magnify\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass CarouselImage extends Component {\r\n  handleClick = () => {\r\n    this.props.onClick(this.props.index);\r\n  };\r\n\r\n  render() {\r\n    const { src, index, isActive } = this.props;\r\n\r\n    return (\r\n      <img\r\n        key={index}\r\n        data-index={index}\r\n        className={isActive ? \"selected-carousel-img\" : \"carousel-img\"}\r\n        src={src}\r\n        alt={`Product Img${index}`}\r\n        onClick={this.handleClick}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nclass ItemImageViewer extends Component {\r\n  static propTypes = {\r\n    imageLink: PropTypes.array.isRequired\r\n  };\r\n\r\n  state = {\r\n    currentImage: 0\r\n  };\r\n\r\n  // view next image, increment index in image array\r\n  nextImage = () => {\r\n    if (this.state.currentImage < this.props.imageLink.length - 1) {\r\n      this.setState({\r\n        currentImage: this.state.currentImage + 1\r\n      });\r\n    }\r\n  };\r\n\r\n  // previous image, decrement index in image array\r\n  prevImage = () => {\r\n    if (this.state.currentImage > 0) {\r\n      this.setState({\r\n        currentImage: this.state.currentImage - 1\r\n      });\r\n    }\r\n  };\r\n\r\n  changeImage = index => {\r\n    // console.log('click event');\r\n    // console.log(e.target.getAttribute('data-index'));\r\n    this.setState({\r\n      // currentImage: e.target.getAttribute(\"data-index\")\r\n      currentImage: index\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { imageLink } = this.props;\r\n    return (\r\n      <section className=\"item-image-container\">\r\n        <div className=\"carousel-container\">\r\n          {imageLink.map((src, index) => (\r\n            <CarouselImage\r\n              key={index}\r\n              index={index}\r\n              src={src}\r\n              isActive={this.state.currentImage === index}\r\n              onClick={this.changeImage}\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"magnify-container\">\r\n          <ReactImageMagnify\r\n            {...{\r\n              smallImage: {\r\n                alt: \"Test Image\",\r\n                isFluidWidth: true,\r\n                src: imageLink[this.state.currentImage]\r\n              },\r\n              largeImage: {\r\n                src: imageLink[this.state.currentImage],\r\n                width: 1600,\r\n                height: 1600,\r\n                enlargedImagePosition: \"over\"\r\n              },\r\n              enlargedImageContainerStyle: {\r\n                zIndex: 10000 // set so enlarged image always display above\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nclass ApparelItemInfo extends Component {\r\n  static propTypes = {\r\n    productName: PropTypes.string.isRequired,\r\n    productPrice: PropTypes.number.isRequired,\r\n    productInfo: PropTypes.string.isRequired,\r\n    amtPurchased: PropTypes.number.isRequired,\r\n    handleQuantityChange: PropTypes.func.isRequired,\r\n    handleChange: PropTypes.func.isRequired,\r\n    addItem: PropTypes.func.isRequired,\r\n    displayApparelStock: PropTypes.func.isRequired,\r\n    size: PropTypes.string.isRequired,\r\n    clubName: PropTypes.string.isRequired\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      productName,\r\n      productPrice,\r\n      productInfo,\r\n      amtPurchased,\r\n      handleQuantityChange,\r\n      addItem,\r\n      handleChange,\r\n      size,\r\n      displayApparelStock,\r\n      clubName\r\n    } = this.props;\r\n\r\n    return (\r\n      <section className=\"item-info\">\r\n        <h2> {productName} </h2>\r\n        <div className=\"price\">${Number(productPrice).toFixed(2)}</div>\r\n\r\n        <div className=\"item-availability\">\r\n          {this.props.size === \"None\" ? (\r\n            <Fragment>\r\n              <b>Availability</b>: Please select a size first.\r\n            </Fragment>\r\n          ) : (\r\n            <Fragment>\r\n              <b>Availability</b>: {displayApparelStock()}\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"item-club-link\">\r\n          <b>Club: </b>\r\n          <Link to={`/vendorProducts/${this.props.vendorID}`}>{clubName}</Link>\r\n        </div>\r\n\r\n        <p className=\"description\">{productInfo}</p>\r\n\r\n        <div className=\"select-container\">\r\n          {/* TODO fix selector */}\r\n          <form autoComplete=\"off\">\r\n            <FormControl className=\"select-size\">\r\n              <InputLabel htmlFor=\"select-size\">Select Size</InputLabel>\r\n              <Select value={size} onChange={handleChange(\"size\")} name=\"size\">\r\n                <MenuItem value=\"None\">\r\n                  <em>None</em>\r\n                </MenuItem>\r\n                <MenuItem value=\"X-Small\"> X-Small </MenuItem>\r\n                <MenuItem value=\"Small\"> Small </MenuItem>\r\n                <MenuItem value=\"Medium\"> Medium </MenuItem>\r\n                <MenuItem value=\"Large\"> Large </MenuItem>\r\n                <MenuItem value=\"X-Large\"> X-Large </MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </form>\r\n\r\n          <TextField\r\n            className=\"quantity\"\r\n            label=\"Quantity\"\r\n            value={amtPurchased}\r\n            onChange={handleQuantityChange}\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"btn-cart\">\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            onClick={addItem}\r\n            style={{\r\n              backgroundColor: \"#DAAA00\",\r\n              color: \"white\",\r\n              fontFamily: \"Proxima Nova\",\r\n              boxShadow: \"none\"\r\n            }}\r\n          >\r\n            Add To Cart\r\n          </Button>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nclass ItemInfo extends Component {\r\n  //props for ItemInfo\r\n  static propTypes = {\r\n    productName: PropTypes.string.isRequired,\r\n    productPrice: PropTypes.number.isRequired,\r\n    productInfo: PropTypes.string.isRequired,\r\n    amtPurchased: PropTypes.number.isRequired,\r\n    handleQuantityChange: PropTypes.func.isRequired,\r\n    addItem: PropTypes.func.isRequired,\r\n    displayStock: PropTypes.func.isRequired,\r\n    clubName: PropTypes.string.isRequired\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      productName,\r\n      productPrice,\r\n      productInfo,\r\n      amtPurchased,\r\n      handleQuantityChange,\r\n      addItem,\r\n      displayStock,\r\n      clubName\r\n    } = this.props;\r\n\r\n    return (\r\n      <section className=\"item-info\">\r\n        <h2> {productName} </h2>\r\n        <div className=\"price\">${Number(productPrice).toFixed(2)}</div>\r\n\r\n        <div className=\"item-availability\">\r\n          <b>Availability</b>: {displayStock()}\r\n        </div>\r\n\r\n        <div className=\"item-club-link\">\r\n          <b>Club: </b>\r\n          <Link to={`/vendorProducts/${this.props.vendorID}`}>{clubName}</Link>\r\n        </div>\r\n\r\n        <p className=\"description\">{productInfo}</p>\r\n\r\n        <div className=\"select-container\">\r\n          <TextField\r\n            className=\"quantity\"\r\n            label=\"Quantity\"\r\n            value={amtPurchased}\r\n            onChange={handleQuantityChange}\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"btn-cart\">\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            onClick={addItem}\r\n            style={{\r\n              backgroundColor: \"#DAAA00\",\r\n              color: \"white\",\r\n              fontFamily: \"Proxima Nova\",\r\n              boxShadow: \"none\"\r\n            }}\r\n          >\r\n            Add To Cart\r\n          </Button>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nclass ShopItemDetailed extends Component {\r\n  // TODO update add item behavior for apparel; either frontend or backend or\r\n  // both\r\n  state = {\r\n    imageLink: [],\r\n    productInfo: \"\",\r\n    productName: \"\",\r\n    productPrice: \"\",\r\n    amtPurchased: 1,\r\n    vendor: \"\",\r\n    productStock: \"\",\r\n    isApparel: false,\r\n    s_stock: 0,\r\n    m_stock: 0,\r\n    l_stock: 0,\r\n    xs_stock: 0,\r\n    xl_stock: 0,\r\n    size: \"None\",\r\n    currentImage: 0,\r\n    vendorNames: [],\r\n    vid: \"\",\r\n    pid: \"\"\r\n  };\r\n\r\n  //display stock based on number of items available for each apparel\r\n  //display number if less than 10\r\n  displayApparelStock = () => {\r\n    const { xs_stock, s_stock, m_stock, l_stock, xl_stock } = this.state;\r\n    var totalStock = xs_stock + s_stock + m_stock + l_stock + xl_stock;\r\n\r\n    //display stock based on size selected\r\n    switch (this.state.size) {\r\n      case \"Small\":\r\n        totalStock = s_stock;\r\n        break;\r\n\r\n      case \"Medium\":\r\n        totalStock = m_stock;\r\n        break;\r\n\r\n      case \"Large\":\r\n        totalStock = l_stock;\r\n        break;\r\n\r\n      case \"X-Small\":\r\n        totalStock = xs_stock;\r\n        break;\r\n\r\n      case \"X-Large\":\r\n        totalStock = xl_stock;\r\n        break;\r\n\r\n      // when no size selected, do not display\r\n      default:\r\n        return;\r\n    }\r\n\r\n    let text = \"\";\r\n\r\n    // available stock\r\n    if (totalStock > 10) {\r\n      text = \"In Stock\";\r\n    }\r\n    // less than 10, greater than 0, display alert\r\n    else if (totalStock > 0) {\r\n      text = `Only ${totalStock} item(s) left!`;\r\n      return <span className=\"out-of-stock\">{text}</span>;\r\n    } else if (totalStock === 0) {\r\n      text = \"Item out of stock.\";\r\n      return <span className=\"out-of-stock\">{text}</span>;\r\n      \r\n    } else {\r\n      text = \"Item out of stock.\";\r\n      return <span className=\"out-of-stock\">{text}</span>;\r\n    }\r\n\r\n    return <span className=\"stock\">{text}</span>;\r\n  };\r\n\r\n  displayStock = () => {\r\n    const { productStock } = this.state;\r\n\r\n    let text = \"\";\r\n\r\n    if (productStock > 10) {\r\n      text = \"In Stock\";\r\n    } else if (productStock > 0) {\r\n      text = `Only ${productStock} item(s) left!`;\r\n      return <span className=\"out-of-stock\">{text}</span>;\r\n    } else if (productStock === 0) {\r\n      text = \"Item out of stock.\";\r\n      return <span className=\"out-of-stock\">{text}</span>;\r\n    } else {\r\n      text = \"Item out of stock.\";\r\n      return <span className=\"out-of-stock\">{text}</span>;\r\n    }\r\n    return <span className=\"stock\">{text}</span>;\r\n  };\r\n\r\n  totalAmountPurchased = items => {\r\n    let amtPurchased = 0;\r\n    for (let i = 0; i < items.length; i++) {\r\n      amtPurchased = amtPurchased + items[i].amtPurchased;\r\n    }\r\n\r\n    //update cart badge based on number of items in user's cart\r\n    this.props.updateAmountPurchased(amtPurchased);\r\n  };\r\n\r\n  addApparelToCart = () => {\r\n    const apiURL = \"/api/getUserCart/addItems\";\r\n    axios\r\n      .post(apiURL, {\r\n        withCredentials: true,\r\n        params: {\r\n          pid: this.props.pid,\r\n          amtPurchased: this.state.amtPurchased,\r\n          vendorID: this.state.vid,\r\n          imageLink: this.state.imageLink,\r\n          isApparel: this.state.isApparel,\r\n          s_stock: this.state.s_stock,\r\n          m_stock: this.state.m_stock,\r\n          l_stock: this.state.l_stock,\r\n          xs_stock: this.state.xs_stock,\r\n          xl_stock: this.state.xl_stock,\r\n          size: this.state.size\r\n        }\r\n      })\r\n      .then(res => {\r\n        if (res.data.success === true) {\r\n          //after adding to item, get updated cart\r\n          const getCartURL = \"/api/getUserCart\";\r\n          axios\r\n            .get(getCartURL, {\r\n              withCredentials: true\r\n            })\r\n            .then(res => {\r\n              //after getting cart info, update redux store container\r\n              this.props.updateItems(res.data.data);\r\n              this.totalAmountPurchased(res.data.data);\r\n\r\n              //switch from alert to notifier\r\n              this.props.notifier({\r\n                title: \"Success\",\r\n                message: \"Item added to cart!\",\r\n                type: \"success\"\r\n              });\r\n            })\r\n            .catch(err => {\r\n              this.props.notifier({\r\n                title: \"Error\",\r\n                message: err.toString(),\r\n                type: \"danger\"\r\n              });\r\n            });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.props.notifier({\r\n          title: \"Error\",\r\n          message: err.toString(),\r\n          type: \"danger\"\r\n        });\r\n      });\r\n  };\r\n\r\n  //add item to user's cart\r\n  addItem = () => {\r\n    //check if user is logged in\r\n    if (this.props.login === false) {\r\n      // alert(\"please login to add to cart\");\r\n      //switch from alert to notifier\r\n      this.props.notifier({\r\n        title: \"Error\",\r\n        message: \"Please login to add to cart.\",\r\n        type: \"warning\"\r\n      });\r\n    }\r\n\r\n    //check if user entered negative number or just left negative sign\r\n    //must have 1 more items purchased\r\n    else if (this.state.amtPurchased <= 0 || this.state.amtPurchased == '-') {\r\n      // alert(\"Sorry, cannot add a quantity of 0.\");\r\n      //switch from alert to notifier\r\n      this.props.notifier({\r\n        title: \"Error\",\r\n        message: \"Please enter a value greater than 0\",\r\n        type: \"warning\"\r\n      });\r\n    }\r\n\r\n    //check stock check for non apparel\r\n    else if (\r\n      this.state.amtPurchased > Number(this.state.productStock) &&\r\n      this.state.isApparel === false\r\n    ) {\r\n      // alert(\"Quantity selected exceeds stock\");\r\n      //switch from alert to notifier\r\n      this.props.notifier({\r\n        title: \"Error\",\r\n        message: \"Sorry, quantity selected exceeds stock.\",\r\n        type: \"danger\"\r\n      });\r\n\r\n      //bug fix, when stock exceeds break from function execution\r\n      return;\r\n    }\r\n\r\n    //check apparel stock\r\n    else if (this.state.isApparel === true) {\r\n      switch (this.state.size) {\r\n        case \"Small\":\r\n          if (this.state.amtPurchased > Number(this.state.s_stock)) {\r\n            // alert(\"Quantity exceeds stock\");\r\n            this.props.notifier({\r\n              title: \"Error\",\r\n              message: \"Sorry, not enough stock.\",\r\n              type: \"warning\"\r\n            });\r\n          }\r\n          //add item to cart\r\n          else {\r\n            this.addApparelToCart();\r\n          }\r\n          break;\r\n\r\n        case \"Medium\":\r\n          if (this.state.amtPurchased > Number(this.state.m_stock)) {\r\n            this.props.notifier({\r\n              title: \"Error\",\r\n              message: \"Sorry, not enough stock.\",\r\n              type: \"warning\"\r\n            });\r\n          } else {\r\n            // TODO add item\r\n            this.addApparelToCart();\r\n          }\r\n          break;\r\n\r\n        case \"Large\":\r\n          if (this.state.amtPurchased > Number(this.state.l_stock)) {\r\n            this.props.notifier({\r\n              title: \"Error\",\r\n              message: \"Sorry, not enough stock.\",\r\n              type: \"warning\"\r\n            });\r\n          } else {\r\n            this.addApparelToCart();\r\n          }\r\n          break;\r\n\r\n        case \"X-Small\":\r\n          if (this.state.amtPurchased > Number(this.state.xs_stock)) {\r\n            this.props.notifier({\r\n              title: \"Error\",\r\n              message: \"Sorry, not enough stock.\",\r\n              type: \"warning\"\r\n            });\r\n          } else {\r\n            this.addApparelToCart();\r\n          }\r\n          break;\r\n\r\n        case \"X-Large\":\r\n          if (this.state.amtPurchased > Number(this.state.xl_stock)) {\r\n            this.props.notifier({\r\n              title: \"Error\",\r\n              message: \"Sorry, not enough stock.\",\r\n              type: \"warning\"\r\n            });\r\n          } else {\r\n            this.addApparelToCart();\r\n          }\r\n          break;\r\n\r\n        default:\r\n          this.props.notifier({\r\n            title: \"Error\",\r\n            message: \"Please select a size.\",\r\n            type: \"warning\"\r\n          });\r\n      }\r\n    }\r\n\r\n    //add to user's cart\r\n    else {\r\n      //update user's cart on server\r\n      var apiURL = \"/api/getUserCart/addItems\";\r\n      //item added to user's cart is not an apparel\r\n      if (this.state.isApparel === false) {\r\n        axios\r\n          .post(apiURL, {\r\n            withCredentials: true,\r\n            params: {\r\n              pid: this.props.pid,\r\n              amtPurchased: this.state.amtPurchased,\r\n              vendorID: this.state.vid,\r\n              imageLink: this.state.imageLink,\r\n              isApparel: this.state.isApparel\r\n            }\r\n          })\r\n          .then(res => {\r\n            if (res.data.success === true) {\r\n              //after adding to item, get updated cart\r\n              const getCartURL = \"/api/getUserCart\";\r\n              axios\r\n                .get(getCartURL, {\r\n                  withCredentials: true\r\n                })\r\n                .then(res => {\r\n                  //after getting cart info, update redux store container\r\n                  this.props.updateItems(res.data.data);\r\n                  this.totalAmountPurchased(res.data.data);\r\n                  this.props.notifier({\r\n                    title: \"Success\",\r\n                    message: \"Item added to cart.\",\r\n                    type: \"success\"\r\n                  });\r\n                })\r\n                .catch(err => {\r\n                  this.props.notifier({\r\n                    title: \"Error\",\r\n                    message: err.toString(),\r\n                    type: \"danger\"\r\n                  });\r\n                });\r\n            }\r\n          })\r\n          .catch(err => {\r\n            this.props.notifier({\r\n              title: \"Error\",\r\n              message: err.toString(),\r\n              type: \"danger\"\r\n            });\r\n          });\r\n      }\r\n\r\n      //item added to user's cart is an apparel\r\n      else {\r\n        axios\r\n          .post(apiURL, {\r\n            withCredentials: true,\r\n            params: {\r\n              pid: this.props.pid,\r\n              amtPurchased: this.state.amtPurchased,\r\n              vendorID: this.state.vid,\r\n              imageLink: this.state.imageLink,\r\n              isApparel: this.state.isApparel,\r\n              s_stock: this.state.s_stock,\r\n              m_stock: this.state.m_stock,\r\n              l_stock: this.state.l_stock,\r\n              xs_stock: this.state.xs_stock,\r\n              xl_stock: this.state.xl_stock,\r\n              size: this.state.size\r\n            }\r\n          })\r\n          .then(res => {\r\n            if (res.data.success === true) {\r\n              //after adding to item, get updated cart\r\n              const getCartURL = \"/api/getUserCart\";\r\n              axios\r\n                .get(getCartURL, {\r\n                  params: {\r\n                    user: this.props.user\r\n                  }\r\n                })\r\n                .then(res => {\r\n                  //after getting cart info, update redux store container\r\n                  this.props.updateItems(res.data.data);\r\n                  this.totalAmountPurchased(res.data.data);\r\n                  //switch from alert to notifier\r\n                  this.props.notifier({\r\n                    title: \"Success\",\r\n                    message: \"Item added to cart!\",\r\n                    type: \"success\"\r\n                  });\r\n                })\r\n                .catch(err => {\r\n                  this.props.notifier({\r\n                    title: \"Error\",\r\n                    message: err.toString(),\r\n                    type: \"danger\"\r\n                  });\r\n                });\r\n            }\r\n          })\r\n          .catch(err => {\r\n            this.props.notifier({\r\n              title: \"Error\",\r\n              message: err.toString(),\r\n              type: \"danger\"\r\n            });\r\n          });\r\n      } //end of else statement for isApparel\r\n    } //end of adding item to cart\r\n  }; //end of addItem function\r\n\r\n  //increase number of quantity to add to user's cart\r\n  addQuantity = () => {\r\n    var currentQuantity = this.state.amtPurchased;\r\n    currentQuantity += 1;\r\n    this.setState({\r\n      amtPurchased: currentQuantity\r\n    });\r\n  };\r\n\r\n  //remove number of quantity to add to user's cart\r\n  removeQuantity = () => {\r\n    var currentQuantity = this.state.amtPurchased;\r\n    //can't have negative amount of items selected\r\n    if (currentQuantity <= 1) {\r\n      //switch from alert to notifier\r\n      this.props.notifier({\r\n        title: \"Error\",\r\n        message: \"Can't remove, must have at least one item\",\r\n        type: \"danger\"\r\n      });\r\n    } else {\r\n      currentQuantity -= 1;\r\n      this.setState({\r\n        amtPurchased: currentQuantity\r\n      });\r\n    }\r\n  };\r\n\r\n  //handle select when user selects shirt size\r\n  handleSelect = () => {\r\n    this.setState({\r\n      size: this.selectedSize.value\r\n    });\r\n  };\r\n\r\n  handleChange = name => event => {\r\n    this.setState({ [name]: event.target.value });\r\n  };\r\n\r\n  //EDIT allow user to type in number values\r\n  handleQuantityChange = event => {\r\n    //if user types a non-number or not trying to delete, don't record input\r\n    if(isNaN(event.target.value) === true && event.target.value != \"\"){\r\n      return;\r\n    }\r\n\r\n    else{\r\n      this.setState({ amtPurchased: event.target.value });\r\n    }\r\n  };\r\n\r\n  //load item info by calling getProductInfo api and render to screen\r\n  componentDidMount() {\r\n    //get list of vendor names\r\n    const vendorAPI = \"/api/getVendorInfo\";\r\n\r\n    //update state of vendors\r\n    axios\r\n      .get(vendorAPI)\r\n      .then(res => {\r\n        if (res.data.success === true) {\r\n          //update list of vendors\r\n          this.setState({\r\n            vendorNames: res.data.vendors\r\n          });\r\n\r\n          //after getting list of vendors, make request to get product info\r\n\r\n          //extract param values from URL\r\n          //match object contains parameter values\r\n          const handle = this.props.match.params;\r\n\r\n          //update vid for redux, link to about page\r\n          this.props.updateVendor(handle.vid);\r\n          this.setState({\r\n            vid: handle.vid,\r\n            pid: handle.pid\r\n          });\r\n\r\n          //obtain item info from server based on matching pid\r\n          //pid extracted from handle match object params\r\n          const apiURL = \"/api/getProductInfo\";\r\n          axios\r\n            .get(apiURL, {\r\n              params: {\r\n                pid: handle.pid\r\n              }\r\n            })\r\n            .then(res => {\r\n              //if successfully got product info, update component\r\n              if (res.data.success === true) {\r\n                //get club name for this product\r\n                var vendorName = \"\";\r\n\r\n                //go through each vendor and check if vid matches item vid\r\n                for (let i = 0; i < this.state.vendorNames.length; i++) {\r\n                  //extract matching vid\r\n                  if (this.state.vendorNames[i].vid === res.data.product.vid) {\r\n                    vendorName = this.state.vendorNames[i].vendorName;\r\n                  }\r\n                }\r\n\r\n                //if the product is an apparel\r\n                if (res.data.product.isApparel === true) {\r\n                  this.setState({\r\n                    productInfo: res.data.product.productInfo,\r\n                    productName: res.data.product.productName,\r\n                    productPrice: res.data.product.productPrice,\r\n                    imageLink: res.data.product.productPicture,\r\n                    productStock: res.data.product.stock,\r\n                    vendor: vendorName,\r\n                    isApparel: true,\r\n                    s_stock: res.data.product.s_stock,\r\n                    m_stock: res.data.product.m_stock,\r\n                    l_stock: res.data.product.l_stock,\r\n                    xs_stock: res.data.product.xs_stock,\r\n                    xl_stock: res.data.product.xl_stock\r\n                  });\r\n                } else {\r\n                  this.setState({\r\n                    productInfo: res.data.product.productInfo,\r\n                    productName: res.data.product.productName,\r\n                    productPrice: res.data.product.productPrice,\r\n                    imageLink: res.data.product.productPicture,\r\n                    productStock: res.data.product.stock,\r\n                    vendor: vendorName\r\n                  });\r\n                }\r\n              } else {\r\n                alert(res.data.message);\r\n                this.props.notifier({\r\n                  title: \"Success\",\r\n                  message: res.data.message.toString(),\r\n                  type: \"success\"\r\n                });\r\n              }\r\n            })\r\n            .catch(err => {\r\n              this.props.notifier({\r\n                title: \"Error\",\r\n                message: err.toString(),\r\n                type: \"danger\"\r\n              });\r\n            });\r\n        }\r\n      })\r\n      //catch error for getting vendors\r\n      .catch(err => {\r\n        this.props.notifier({\r\n          title: \"Error\",\r\n          message: err.toString(),\r\n          type: \"danger\"\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isApparel === false) {\r\n      return (\r\n        <section className=\"item-detailed-container\">\r\n          <ItemImageViewer imageLink={this.state.imageLink} />\r\n          <ItemInfo\r\n            productName={this.state.productName}\r\n            productPrice={this.state.productPrice}\r\n            productInfo={this.state.productInfo}\r\n            handleQuantityChange={this.handleQuantityChange}\r\n            addItem={this.addItem}\r\n            displayStock={this.displayStock}\r\n            amtPurchased={this.state.amtPurchased}\r\n            clubName={this.state.vendor}\r\n            vendorID={this.props.vendorID}\r\n          />\r\n        </section>\r\n      );\r\n    } else {\r\n      return (\r\n        <section className=\"item-detailed-container\">\r\n          <ItemImageViewer imageLink={this.state.imageLink} />\r\n          <ApparelItemInfo\r\n            productName={this.state.productName}\r\n            productPrice={this.state.productPrice}\r\n            productInfo={this.state.productInfo}\r\n            handleQuantityChange={this.handleQuantityChange}\r\n            handleChange={this.handleChange}\r\n            addItem={this.addItem}\r\n            displayApparelStock={this.displayApparelStock}\r\n            amtPurchased={this.state.amtPurchased}\r\n            size={this.state.size}\r\n            clubName={this.state.vendor}\r\n            vendorID={this.props.vendorID}\r\n          />\r\n        </section>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n//obtain state from store as props for component\r\n//get login value and user email\r\nconst mapStateToProps = state => {\r\n  return {\r\n    pid: state.selectedItem.selectedItemID,\r\n    login: state.auth.login,\r\n    vendorID: state.vendor.vendor\r\n  };\r\n};\r\n\r\n//dispatch action to reducer\r\n//update which item was selected for detailed view of item\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    //get user's cart from state after logging in\r\n    updateItems: response =>\r\n      dispatch({\r\n        type: actions.GET_CART,\r\n        cart: response\r\n      }),\r\n\r\n    updateVendor: newVendor =>\r\n      dispatch({\r\n        type: actions.GET_VENDOR_PRODUCTS,\r\n        vendor: newVendor\r\n      }),\r\n\r\n    updateAmountPurchased: amount =>\r\n      dispatch({\r\n        type: actions.UPDATE_AMOUNT_PURCHASED,\r\n        amountPurchased: amount\r\n      })\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ShopItemDetailed);\r\n","import React, { Component } from \"react\";\r\nimport \"./EditItem.css\";\r\nimport axios from \"axios\";\r\n// import axios from 'axios';\r\nimport { connect } from \"react-redux\";\r\n// import actions from \"../../store/actions\";\r\n// import Grid from '@material-ui/core/Grid';\r\n// import TextField from '@material-ui/core/TextField';\r\n// import Button from '@material-ui/core/Button';\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass EditItem extends Component {\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    clickFunction: PropTypes.func.isRequired\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: this.props.name\r\n    };\r\n  }\r\n\r\n  //onclick function, call function that was passed as a prop to EditItemView component\r\n  //pass name after being clicked to parent component to fill in form data\r\n  updateFormAferClicked = () => {\r\n    this.props.clickFunction(this.state.name);\r\n  };\r\n\r\n  componentDidMount() {\r\n    // call a route to check if they are logged in and an admin\r\n    const apiURL = \"/api/adminUser/checkAdmin\";\r\n    axios\r\n      .get(apiURL, {\r\n        withCredentials: true\r\n      })\r\n      .then(res => {\r\n        // user not an admin\r\n        if (res.data.success === false) {\r\n          this.props.notifier({\r\n            title: \"Warning\",\r\n            message: \"Not an admin. Access denied.\",\r\n            type: \"warning\"\r\n          });\r\n          this.props.history.push(\"/login\");\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.props.notifier({\r\n          title: \"Error\",\r\n          message: err.toString(),\r\n          type: \"danger\"\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"editItem\">\r\n        <h2 id=\"selectEditItem\" onClick={this.updateFormAferClicked}>\r\n          {this.props.name}\r\n        </h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  null\r\n)(EditItem);\r\n","import React, { Component } from \"react\";\nimport \"./EditItemView.css\";\nimport EditItem from \"../EditItem/EditItem\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\n// import actions from \"../../store/actions\";\n// import Grid from '@material-ui/core/Grid';\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FileUploader from \"react-firebase-file-uploader\";\nimport firebase from \"firebase\";\n// import firebaseConfig from '../../config/ecs193-ecommerce-firebase-adminsdk-7iy3n-f581d24562.json';\n\n//config file for firebase\n// const config = {\n//   apiKey: firebaseConfig.private_key,\n//   authDomain: \"ecs193-ecommerce.firebaseapp.com\",\n//   databaseURL: \"https://ecs193-ecommerce.firebaseio.com\",\n//   storageBucket: \"ecs193-ecommerce.appspot.com\"\n// };\n\n// firebase.initializeApp(config);\n\nconst style = {\n  field: { width: \"500px\" }\n};\n\nconst maxImageSize = 1000000;\n\nclass EditItemView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      name: \"\",\n      info: \"\",\n      pickupLocation: \"\",\n      stock: \"\",\n      price: \"\",\n      isApparel: false,\n      vid: this.props.vendorID,\n      pid: \"\",\n      lastUpdate: \"\",\n      lastUser: \"\",\n      user: this.props.user,\n      productPicture: [],\n      pickupTime: \"\",\n      small: 0,\n      medium: 0,\n      large: 0,\n      xsmall: 0,\n      xlarge: 0,\n      apparelCSS: \"hideApparelSizes\",\n      itemStockCSS: \"showItemStock\",\n      images: [],\n      imageNames: [],\n      newImages: false,\n      itemSelected: false\n    };\n  }\n\n  //get all items from vendor, display to allow admin to edit item\n  getVendorProducts = () => {\n    const apiURL = \"/api/getVendorProducts\";\n\n    //get all products of current vendor based on vendor id\n    axios\n      .get(apiURL, {\n        params: {\n          vid: this.props.vendorID\n        }\n      })\n      .then(res => {\n        if (res.data.success === true) {\n          //update list of items\n          this.setState({\n            items: res.data.data\n          });\n        } else {\n          this.props.notifier({\n            title: \"Error\",\n            message: \"Error getting items\",\n            type: \"danger\"\n          });\n        }\n      })\n      .catch(err => {\n        this.props.notifier({\n          title: \"Error\",\n          message: err.toString(),\n          type: \"danger\"\n        });\n      });\n  };\n\n  //get items of vendor from database\n  //allow admin to view and select which item to edit\n  componentDidMount() {\n    // call a route to check if they are logged in and an admin\n    const apiURL = \"/api/adminUser/checkAdmin\";\n    axios\n      .get(apiURL, {\n        withCredentials: true\n      })\n      .then(res => {\n        // user not an admin\n        if (res.data.success === false) {\n          this.props.notifier({\n            title: \"Warning\",\n            message: \"Not an admin. Access denied.\",\n            type: \"warning\"\n          });\n          this.props.history.push(\"/login\");\n        }\n      })\n      .catch(err => {\n        this.props.notifier({\n          title: \"Error\",\n          message: err.toString(),\n          type: \"danger\"\n        });\n      });\n    this.getVendorProducts();\n  }\n\n  //if vendor changes, get updated items\n  //restart component as if just rendered to handle new vendor items\n  //clears out previous item info from previous vendor\n  componentDidUpdate(prevProps) {\n    if (prevProps.vendorID != this.props.vendorID) {\n      this.getVendorProducts();\n      this.setState({\n        items: [],\n        name: \"\",\n        info: \"\",\n        stock: \"\",\n        price: \"\",\n        isApparel: false,\n        vid: this.props.vendorID,\n        pid: \"\",\n        lastUpdate: \"\",\n        lastUser: \"\",\n        user: this.props.user,\n        productPicture: [],\n        small: 0,\n        medium: 0,\n        large: 0,\n        xsmall: 0,\n        xlarge: 0,\n        apparelCSS: \"hideApparelSizes\",\n        itemStockCSS: \"showItemStock\",\n        images: [],\n        imageNames: [],\n        newImages: false,\n        itemSelected: false\n      });\n    }\n  }\n\n  //populate edit forms based on which item was selected\n  //name parameter finds matching product info in state array of items\n  populateEditForm = name => {\n    //go through each item in array and determine which item matches\n    for (let i = 0; i < this.state.items.length; i++) {\n      //if matching product, populate form data and state of component\n      if (this.state.items[i].productName === name) {\n        var currentItem = this.state.items[i];\n        //if the item selected is not an apparel, do not display apparel sizes\n        if (currentItem.isApparel === false) {\n          this.setState({\n            name: name,\n            info: currentItem.productInfo,\n            price: String(currentItem.productPrice),\n            stock: currentItem.stock,\n            pid: currentItem.pid,\n            productPicture: currentItem.productPicture,\n            isApparel: currentItem.isApparel,\n            apparelCSS: \"hideApparelSizes\",\n            itemStockCSS: \"showItemStock\",\n            itemSelected: true\n          });\n        }\n\n        //if the item is an apparel, display and update size stock\n        else {\n          this.setState({\n            name: name,\n            info: currentItem.productInfo,\n            price: String(currentItem.productPrice),\n            stock: currentItem.stock,\n            pid: currentItem.pid,\n            productPicture: currentItem.productPicture,\n            isApparel: currentItem.isApparel,\n            small: currentItem.s_stock,\n            medium: currentItem.m_stock,\n            large: currentItem.l_stock,\n            xsmall: currentItem.xs_stock,\n            xlarge: currentItem.xl_stock,\n            apparelCSS: \"showApparelSizes\",\n            itemStockCSS: \"hideItemStock\",\n            itemSelected: true\n          });\n        }\n      }\n    }\n  };\n\n  //handle input change for product price\n  handlePriceChange = price => {\n    //if user types a non-number or doesn't press delete/backspace, don't register input change\n    if (isNaN(price.target.value) === true && price.target.value != \"\") {\n      return;\n    }\n\n    //else change value\n    else {\n      this.setState({\n        price: price.target.value\n      });\n    }\n  };\n\n  //handle stock change for non apparel items\n  //non apparel, account for empty field\n  handleStockChange = stock => {\n    //if the user backspaces or presses delete, create empty input for user to enter number\n    //converting \"\" to number using Number(stock) converts \"\" to 0\n    //if user tries to type a letter, just convert it to 0 or \"\"\n    if (isNaN(stock.target.value) === true || stock.target.value == \"\") {\n      this.setState({\n        stock: \"\"\n      });\n      return;\n    }\n\n    //if user enters a negative stock value, set default to \"\" in background\n    //display notifier\n    else if (Number(stock.target.value) < 0) {\n      this.setState({\n        stock: \"\"\n      });\n\n      this.props.notifier({\n        title: \"Warning\",\n        message: \"Please enter stock value greater than or equal to 0\",\n        type: \"warning\"\n      });\n    }\n\n    //else, set stock to user's input of number\n    else {\n      this.setState({\n        stock: Number(stock.target.value)\n      });\n    }\n  };\n\n  //handle stock change for apparel items, update total stock values when user changes input\n  handleStockChangeApparel = name => stock => {\n    //check if user is trying to type non-number or letter\n    if (isNaN(stock.target.value) === true && stock.target.value != \"\") {\n      return;\n    }\n\n    //if the user backspaces or presses delete, create empty input for user to enter number\n    //checks if user types a number, if user types a non-number set default value to \"\", or 0\n    else if (isNaN(stock.target.value) === true || stock.target.value == \"\") {\n      this.setState(\n        {\n          [name]: \"\"\n        },\n        () => {\n          //still add new running total if user removes value\n          //add running total of stocks when value is changed, callback function after state was updated\n          //when user adds \"\", records value as 0\n          var runningStockTotal = 0;\n          runningStockTotal =\n            Number(this.state.small) +\n            Number(this.state.medium) +\n            Number(this.state.large) +\n            Number(this.state.xsmall) +\n            Number(this.state.xlarge);\n\n          //update stock with running total\n          this.setState({\n            stock: Number(runningStockTotal)\n          });\n        }\n      );\n    }\n\n    //if the user is setting the stock to a negative value, set default to 0\n    else if (Number(stock.target.value) < 0) {\n      this.setState({\n        [name]: \"\"\n      });\n      this.props.notifier({\n        title: \"Warning\",\n        message: \"Please enter stock value greater than or equal to 0\",\n        type: \"warning\"\n      });\n    }\n\n    //update stock of current item and update running total of stock items\n    else {\n      //update stock value for current size\n      //after updating current stock, update running total of stock for all sizes\n      //callback function called after setState\n      this.setState(\n        {\n          [name]: Number(stock.target.value)\n        },\n        () => {\n          //add running total of stocks when value is changed, callback function after state was updated\n          var runningStockTotal = 0;\n\n          runningStockTotal =\n            Number(this.state.small) +\n            Number(this.state.medium) +\n            Number(this.state.large) +\n            Number(this.state.xsmall) +\n            Number(this.state.xlarge);\n\n          //update stock with running total\n          this.setState({\n            stock: Number(runningStockTotal)\n          });\n        }\n      );\n    }\n  };\n\n  //upload images to database\n  //upload each image in array to database\n  uploadFiles = () => {\n    //for each file in images array, upload to database\n    const files = this.state.images;\n    files.forEach(file => {\n      this.fileUploader.startUpload(file);\n    });\n  };\n\n  //detects when an image is uploaded from user\n  //change number of files to upload\n  //same function from AddProduct\n  handleFileChange = event => {\n    //extract file from upload component\n    const {\n      target: { files }\n    } = event;\n\n    //TO DO modify file size\n    //check if image being uploaded exceeds max file size\n    if (files[0].size > maxImageSize) {\n      this.props.notifier({\n        title: \"Error\",\n        message: \"Please upload image less than 1MB\",\n        type: \"danger\"\n      });\n\n      //if file exceeds file size, cancel upload and set file input to null\n      //this is as if no file was uploaded\n      event.target.value = null;\n      return;\n    }\n\n    //store image names\n    // const filesToStore = [];\n    const filesToStore = this.state.imageNames;\n\n    //store actual image files\n    // const actualImages = [];\n    const actualImages = this.state.images;\n\n    //store image name as an object\n    let imageName = {};\n    imageName.name = files[0].name;\n\n    //push values to arrays\n    filesToStore.push(imageName);\n    actualImages.push(files[0]);\n\n    // console.log(\"files to store\", imageName);\n    // console.log(\"actual images\", actualImages);\n\n    //set state of component\n    this.setState({\n      images: actualImages,\n      imageNames: filesToStore\n    });\n  };\n\n  //update item info, update information about item in database\n  updateItemInfo = () => {\n    //validators to check for proper input\n\n    //user needs to select item first\n    if (this.state.itemSelected === false) {\n      this.props.notifier({\n        title: \"Error\",\n        message: \"Please select an item to edit from the list\",\n        type: \"danger\"\n      });\n      return;\n    }\n\n    //product name\n    if (this.state.name === \"\") {\n      this.props.notifier({\n        title: \"Error\",\n        message: \"Please insert product name\",\n        type: \"danger\"\n      });\n      return;\n    }\n\n    //product info\n    if (this.state.info === \"\") {\n      this.props.notifier({\n        title: \"Error\",\n        message: \"Please insert product info\",\n        type: \"danger\"\n      });\n      return;\n    }\n\n    //product price\n    if (this.state.price === \"\") {\n      this.props.notifier({\n        title: \"Error\",\n        message: \"Please insert product price\",\n        type: \"danger\"\n      });\n      return;\n    }\n\n    //check to see if user inserted correct price format $D.CC\n    //if user enters money in format $D, then okay proceed\n    if (this.state.price.includes(\".\") === true) {\n      //check to see if user inputted more than 2 spots for cents\n      var checkCentValues = this.state.price.split(\".\");\n      //split into array of items before . and after .\n      if (checkCentValues[1].length != 2) {\n        this.props.notifier({\n          title: \"Error\",\n          message: \"Please insert correct price format\",\n          type: \"danger\"\n        });\n        return;\n      }\n    }\n\n    //check product stock greater than 0\n    if (Number(this.state.stock) === 0) {\n      this.props.notifier({\n        title: \"Error\",\n        message: \"Please insert stock greater than 0\",\n        type: \"danger\"\n      });\n      return;\n    }\n\n    //proceed with edit item process\n    const apiURL = \"/api/adminProducts/editProduct\";\n    var imagesToUpload;\n    var newImages = false;\n\n    //if the admin did not upload anymore pictures, use old array\n    if (this.state.imageNames.length === 0) {\n      imagesToUpload = this.state.productPicture;\n      // console.log(\"uploading old pictures\");\n    }\n\n    //if admin updated new pictures, send new array\n    else {\n      // console.log(\"updating new pictures\");\n      imagesToUpload = this.state.imageNames;\n      newImages = true;\n    }\n\n    //params for editing item\n    axios\n      .patch(apiURL, {\n        withCredentials: true,\n        params: {\n          vid: this.state.vid,\n          pid: this.state.pid,\n          productInfo: this.state.info,\n          productName: this.state.name,\n          productPrice: this.state.price,\n          stock: this.state.stock,\n          productPicture: imagesToUpload,\n          isApparel: this.state.isApparel,\n          pickupLocation: this.state.pickupLocation,\n          pickupTime: this.state.pickupTime,\n          s_stock: Number(this.state.small),\n          m_stock: Number(this.state.medium),\n          l_stock: Number(this.state.large),\n          xs_stock: Number(this.state.xsmall),\n          xl_stock: Number(this.state.xlarge),\n          newImages: newImages\n        }\n      })\n\n      .then(res => {\n        if (res.data.success === true && this.state.imageNames.length != 0) {\n          this.uploadFiles();\n          this.props.notifier({\n            title: \"Success\",\n            message: res.data.message.toString(),\n            type: \"success\"\n          });\n        } else if (res.data.success === true) {\n          this.props.notifier({\n            title: \"Success\",\n            message: res.data.message.toString(),\n            type: \"success\"\n          });\n        } else {\n          this.props.notifier({\n            title: \"Error\",\n            message: res.data.message.toString(),\n            type: \"danger\"\n          });\n        }\n      })\n      .catch(err => {\n        this.props.notifier({\n          title: \"Error\",\n          message: err.toString(),\n          type: \"danger\"\n        });\n      });\n  }; // end of updating item\n\n  render() {\n    //render items to select for editing\n    const products = this.state.items.map(result => {\n      return (\n        <EditItem\n          name={result.productName}\n          clickFunction={this.populateEditForm}\n        />\n      );\n    });\n\n    return (\n      <div>\n        <div className=\"editItemContainer\">\n          <h1> Select Item To Edit </h1>\n          {/* <h5>\n            (If uploading new pictures, old pictures will be discarded/replaced)\n          </h5> */}\n          <div className=\"textForm\">{products}</div>\n\n          <div className=\"tooltip\">\n            <span className=\"tooltiptext\">Name of your product</span>\n            <div className=\"textForm\" id=\"row\">\n              <TextField\n                label=\"Product Name\"\n                required={true}\n                value={this.state.name}\n                onChange={event => this.setState({ name: event.target.value })}\n                style={style.field}\n              />\n            </div>\n          </div>\n\n          <div className=\"tooltip\">\n            <span className=\"tooltiptext\">\n              The product info that will be displayed on the item's product\n              page.\n            </span>\n            <div className=\"textFormEdit\" id=\"row\">\n              <TextField\n                label=\"Product Info\"\n                required={true}\n                multiline={true}\n                // rows={2}\n                value={this.state.info}\n                onChange={event => this.setState({ info: event.target.value })}\n                style={style.field}\n              />\n            </div>\n          </div>\n\n          <div className=\"tooltip\">\n            <span className=\"tooltiptext\">The product's price in USD.</span>\n            <div className=\"textFormEdit\" id=\"row\">\n              <TextField\n                label=\"Product Price\"\n                required={true}\n                value={this.state.price}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\"> $ </InputAdornment>\n                  )\n                }}\n                onChange={event => this.handlePriceChange(event)}\n                style={style.field}\n              />\n            </div>\n          </div>\n\n          <div className=\"tooltip\">\n            <span className=\"tooltiptext\">\n              Your product's stock. The website will stop accepting orders for\n              that product once its stock is out.\n            </span>\n            <div className={this.state.itemStockCSS} id=\"row\">\n              <TextField\n                label=\"Stock\"\n                required={true}\n                value={this.state.stock}\n                onChange={event => this.handleStockChange(event)}\n                style={style.field}\n              />\n            </div>\n          </div>\n\n          {/* add quantity for apparel sizes, toggel visibility if selected */}\n          <div className={this.state.apparelCSS}>\n            <div className=\"textForm\" id=\"row\">\n              <TextField\n                label=\"Product Stock\"\n                value={this.state.stock}\n                disabled\n              />\n            </div>\n\n            <div className=\"textForm\" id=\"row\">\n              <TextField\n                label=\"Small Stock\"\n                required=\"false\"\n                value={this.state.small}\n                onChange={this.handleStockChangeApparel(\"small\")}\n              />\n            </div>\n\n            <div className=\"textForm\" id=\"row\">\n              <TextField\n                label=\"Medium Stock\"\n                required=\"false\"\n                value={this.state.medium}\n                onChange={this.handleStockChangeApparel(\"medium\")}\n              />\n            </div>\n\n            <div className=\"textForm\" id=\"row\">\n              <TextField\n                label=\"Large Stock\"\n                required=\"false\"\n                value={this.state.large}\n                onChange={this.handleStockChangeApparel(\"large\")}\n              />\n            </div>\n\n            <div className=\"textForm\" id=\"row\">\n              <TextField\n                label=\"X-Small Stock\"\n                required=\"false\"\n                value={this.state.xsmall}\n                onChange={this.handleStockChangeApparel(\"xsmall\")}\n              />\n            </div>\n\n            <div className=\"textForm\" id=\"row\">\n              <TextField\n                label=\"X-Large Stock\"\n                required=\"false\"\n                value={this.state.xlarge}\n                onChange={this.handleStockChangeApparel(\"xlarge\")}\n              />\n            </div>\n          </div>\n          <div className=\"tooltip\">\n            <span className=\"tooltiptext\">\n              Note: Any new pictures for an item that are uploaded will\n              overwrite all current pictures for the item. You will have to\n              upload any old pictures again.\n            </span>\n            <div id=\"descriptor\">\n              <p>To edit any of the pictures for an item please click below.</p>\n            </div>\n          </div>\n          <div id=\"column\" className=\"tester\">\n            <FileUploader\n              accept=\"image/*\"\n              onChange={this.handleFileChange}\n              storageRef={firebase\n                .storage()\n                .ref(\n                  \"/images\" + \"/\" + this.props.vendorID + \"/\" + this.state.pid\n                )}\n              ref={instance => {\n                this.fileUploader = instance;\n              }}\n              multiple\n              onUploadError={error => {\n                this.props.notifier({\n                  title: \"Error\",\n                  message: error.toString(),\n                  type: \"danger\"\n                });\n              }}\n              style={style.field}\n            />\n          </div>\n\n          <div id=\"column\" className=\"tester\">\n            <FileUploader\n              accept=\"image/*\"\n              onChange={this.handleFileChange}\n              storageRef={firebase\n                .storage()\n                .ref(\n                  \"/images\" + \"/\" + this.props.vendorID + \"/\" + this.state.pid\n                )}\n              ref={instance => {\n                this.fileUploader = instance;\n              }}\n              multiple\n              onUploadError={error => {\n                this.props.notifier({\n                  title: \"Error\",\n                  message: error.toString(),\n                  type: \"danger\"\n                });\n              }}\n              style={style.field}\n            />\n          </div>\n\n          <div id=\"column\" className=\"tester\">\n            <FileUploader\n              accept=\"image/*\"\n              onChange={this.handleFileChange}\n              storageRef={firebase\n                .storage()\n                .ref(\n                  \"/images\" + \"/\" + this.props.vendorID + \"/\" + this.state.pid\n                )}\n              ref={instance => {\n                this.fileUploader = instance;\n              }}\n              multiple\n              onUploadError={error => {\n                this.props.notifier({\n                  title: \"Error\",\n                  message: error.toString(),\n                  type: \"danger\"\n                });\n              }}\n              style={style.field}\n            />\n          </div>\n\n          <div id=\"column\" className=\"tester\">\n            <FileUploader\n              accept=\"image/*\"\n              onChange={this.handleFileChange}\n              storageRef={firebase\n                .storage()\n                .ref(\n                  \"/images\" + \"/\" + this.props.vendorID + \"/\" + this.state.pid\n                )}\n              ref={instance => {\n                this.fileUploader = instance;\n              }}\n              multiple\n              onUploadError={error => {\n                this.props.notifier({\n                  title: \"Error\",\n                  message: error.toString(),\n                  type: \"danger\"\n                });\n              }}\n              style={style.field}\n            />\n          </div>\n          <div className=\"tooltip\">\n            <span className=\"tooltiptext\">In progress </span>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              color=\"primary\"\n              onClick={this.updateItemInfo}\n              style={{\n                backgroundColor: \"#DAAA00\",\n                color: \"white\",\n                fontFamily: \"Proxima Nova\",\n                boxShadow: \"none\"\n              }}\n            >\n              Update Item\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n//redux, pass as vid and username from redux store to use in component\nconst mapStateToProps = state => {\n  return {\n    vendorID: state.auth.vendorID\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(EditItemView);\n","import React, { Component } from \"react\";\nimport \"./Footer.css\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <footer className=\"footer-container\">\n        <Link to='/'>\n          <h1 className=\"footer-header\">ECS193 E-Commerce</h1>\n        </Link>\n        <div className=\"footer-col footer-col--1\">\n          <div className=\"footer-col-list\">\n            <ul>\n              <li className=\"footer-link\">\n                <Link to=\"/about\">About</Link>\n              </li>\n              <li className=\"footer-link\">\n                <Link to=\"/faq\">FAQ</Link>\n              </li>\n              {/* <li className=\"footer-link\">Link 3</li>\n              <li className=\"footer-link\">Link 4</li> */}\n            </ul>\n          </div>\n        </div>\n        <div className=\"footer-col\">\n          <div className=\"footer-col-list\">\n            <ul>\n              <li className=\"footer-link\">\n                <Link to=\"/clubs\">About Clubs</Link>\n              </li>\n              <li className=\"footer-link\">\n                <Link to=\"/privacy\">Privacy Policy</Link>\n              </li>\n              {/* <li className=\"footer-link\">Link 3</li>\n              <li className=\"footer-link\">Link 4</li> */}\n            </ul>\n          </div>\n        </div>\n        <div className=\"footer-col\">\n          <Link to=\"/terms\">Terms and Services</Link>\n        </div>\n      </footer>\n    );\n  }\n}\n","import React, { Component } from 'react';\r\nimport './AccountInfo.css';\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../../store/actions\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from 'axios';\r\n\r\nclass AccountInfo extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      orders: 0,\r\n    }\r\n  }\r\n  //grab user info for account (email, name, and number of orders)\r\n  componentDidMount(){\r\n    const apiURL = '/api/users';\r\n    axios.get(apiURL, {\r\n      withCredentials: true\r\n    })\r\n    .then(res => {\r\n      if(res.data.data.name){\r\n        this.setState({\r\n          email:res.data.data.email,\r\n          firstName: res.data.data.name.firstName,\r\n          lastName:  res.data.data.name.lastName\r\n        })\r\n      }\r\n\r\n      //get total number of orders\r\n      axios.get('/api/orders/getUserOrders', {\r\n        withCredentials: true\r\n      })\r\n      .then(res => {\r\n        if(res.data.success === true){\r\n          this.setState({\r\n            orders: res.data.orders.length\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.props.notifier({\r\n          title: \"Error\",\r\n          message: err.toString(),\r\n          type: \"danger\"\r\n        });\r\n      })\r\n    })\r\n    .catch(err => {\r\n      this.props.notifier({\r\n        title: \"Error\",\r\n        message: err.toString(),\r\n        type: \"danger\"\r\n      });\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className =\"account-info-header\">\r\n      <div className = \"accountForms\">\r\n      <Paper className=\"paper-account-Container\">\r\n        <h1> Account Info Here </h1>\r\n        <h1> Email: {this.state.email} </h1>\r\n        <h1> First Name:  {this.state.firstName} </h1>\r\n        <h1> Last Name:  {this.state.lastName} </h1>\r\n        <h1> Orders: {this.state.orders} </h1>\r\n        <h1> Other Info </h1>\r\n        </Paper>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AccountInfo;\r\n","import React, { Component } from \"react\";\r\nimport \"./RecoverPassword.css\";\r\nimport axios from \"axios\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nclass RecoverPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      toRedirect: false,\r\n    };\r\n  }\r\n\r\n  //function to handle email change on input\r\n  handleEmailField = event => {\r\n    this.setState({\r\n      email: event.target.value\r\n    });\r\n  };\r\n\r\n  //function called when clicking recover password\r\n  sendRecoverEmail = () => {\r\n    if (this.state.email === \"\") {\r\n      this.props.notifier({\r\n        title: \"Warning\",\r\n        message: \"Please enter an email.\",\r\n        type: \"warning\"\r\n      });\r\n      return;\r\n    }\r\n    //get request to send email with password\r\n    const apiURL = \"/api/resetPass\";\r\n    axios\r\n      .post(apiURL, {\r\n        params: {\r\n          email: this.state.email\r\n        }\r\n      })\r\n      .then(res => {\r\n        if (res.data.success === true) {\r\n          this.props.notifier({\r\n            title: \"Success\",\r\n            message: res.data.message.toString(),\r\n            type: \"success\"\r\n          });\r\n          this.props.history.push(\"/check-email/reset\");\r\n        } else {\r\n          this.props.notifier({\r\n            title: \"Warning\",\r\n            message: res.data.message.toString(),\r\n            type: \"warning\",\r\n            // duration: 5000  // make the notifier here last longer\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.props.notifier({\r\n          title: \"Error\",\r\n          message: err.toString(),\r\n          type: \"danger\"\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"passwordForm\">\r\n      <div id=\"enter-email-container\">\r\n      \r\n        <Paper className=\"password-paper-container\">\r\n          <h2> Password Recovery </h2>\r\n          <div>\r\n            Please enter your email, and we will send you a password reset link.\r\n          </div>\r\n          <form>\r\n            <TextField\r\n              label=\"Email\"\r\n              required={true}\r\n              onChange={this.handleEmailField}\r\n              onKeyPress={(ev) => {\r\n                if (ev.key === 'Enter') {\r\n                  // bug where pressing enter refreshes the page, so below is\r\n                  // done to force the enter key to call sendRecoverEmail()\r\n                  ev.preventDefault();\r\n                  this.sendRecoverEmail();\r\n                }\r\n              }}\r\n            />\r\n          </form>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={this.sendRecoverEmail}\r\n            style = {{backgroundColor:\"#DAAA00\", \r\n            color: \"white\", \r\n            fontFamily: \"Proxima Nova\", \r\n            marginTop: \"20px\",\r\n            boxShadow: \"none\"}}\r\n          >\r\n            Recover Password\r\n          </Button>\r\n        </Paper>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RecoverPassword;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nimport queryString from \"query-string\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport \"./InputRecoveryPassword.css\";\r\n\r\nclass InputRecoveryPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    //check token from query param in url\r\n\r\n    //extract query string param for token\r\n    var queryParseParams = queryString.parse(this.props.location.search);\r\n    var token = queryParseParams.token;\r\n\r\n    const apiURL = \"/api/resetPass/checkToken\";\r\n    axios\r\n      .get(apiURL, {\r\n        params: {\r\n          resetPassToken: token\r\n        }\r\n      })\r\n      .then(res => {\r\n        //get email from matching token in database\r\n        if (res.data.success === true) {\r\n          console.log(\"Successfully checked token.\");\r\n          this.setState({\r\n            email: res.data.email\r\n          });\r\n          // no notifier needed here\r\n        } else if (res.data.message === \"invalid\") {\r\n          console.log(\"Invalid/expired link.\");\r\n          this.props.notifier({\r\n            title: \"Error\",\r\n            message:\r\n              \"Sorry, the link you clicked has expired or is invalid. Please try again with a new link.\",\r\n            type: \"warning\",\r\n            duration: 7000\r\n          });\r\n          this.props.history.push(\"/recoverPassword\");\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.props.notifier({\r\n          title: \"Error\",\r\n          message: err.toString(),\r\n          type: \"danger\"\r\n        });\r\n      });\r\n  }\r\n\r\n  //check reset token\r\n  updatePassword = () => {\r\n    //input checks for matching passwords and min/max length\r\n    if (this.state.password !== this.state.confirmPassword) {\r\n      this.props.notifier({\r\n        title: \"Warning\",\r\n        message: \"Passwords do not match.\",\r\n        type: \"warning\"\r\n      });\r\n      return;\r\n    }\r\n\r\n    /* removed b/c we do more password checking on server\r\n    else if (\r\n      this.state.password.length < 8 ||\r\n      this.state.password.length > 20\r\n    ) {\r\n      this.props.notifier({\r\n        title: \"Warning\",\r\n        message:\r\n          \"Minimum password length is 8 characters and max length is 20 characters.\",\r\n        type: \"warning\"\r\n      });\r\n      return;\r\n    }\r\n    */\r\n\r\n    //check token from query param in url\r\n    //after getting email from database and user inputs new password, update new password\r\n    axios\r\n      .post(\"/api/resetPass/updatePass\", {\r\n        params: {\r\n          email: this.state.email,\r\n          newPassword: this.state.password\r\n        }\r\n      })\r\n      .then(res => {\r\n        if (res.data.success === true) {\r\n          this.props.notifier({\r\n            title: \"Success\",\r\n            message: res.data.message.toString(),\r\n            type: \"success\"\r\n          });\r\n          this.props.history.push(\"/login\");\r\n        } else {\r\n          this.props.notifier({\r\n            title: \"Warning\",\r\n            message: res.data.message.toString(),\r\n            type: \"warning\"\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.props.notifier({\r\n          title: \"Error\",\r\n          message: err.toString(),\r\n          type: \"danger\"\r\n        });\r\n      });\r\n  };\r\n\r\n  //change password on input\r\n  handlePasswordField = event => {\r\n    this.setState({\r\n      password: event.target.value\r\n    });\r\n  };\r\n\r\n  //change confirm password on input change\r\n  handleConfirmPasswordField = event => {\r\n    this.setState({\r\n      confirmPassword: event.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"new-password-container\">\r\n        <Paper className=\"password-paper-container\">\r\n          <h2> Password Recovery </h2>\r\n          <h3> Enter your new password: </h3>\r\n          <form>\r\n            <div>\r\n              <TextField\r\n                label=\"Password\"\r\n                required={true}\r\n                onChange={this.handlePasswordField}\r\n                type=\"password\"\r\n                style={{ marginBottom: \"20px\" }}\r\n                onKeyPress={ev => {\r\n                  if (ev.key === \"Enter\") {\r\n                    // bug where pressing enter refreshes the page, so below is\r\n                    // done to force the enter key to call sendRecoverEmail()\r\n                    ev.preventDefault();\r\n                    this.updatePassword();\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                label=\"Confirm Password\"\r\n                required={true}\r\n                type=\"password\"\r\n                onChange={this.handleConfirmPasswordField}\r\n                style={{ marginBottom: \"20px\" }}\r\n                onKeyPress={ev => {\r\n                  if (ev.key === \"Enter\") {\r\n                    // bug where pressing enter refreshes the page, so below is\r\n                    // done to force the enter key to call sendRecoverEmail()\r\n                    ev.preventDefault();\r\n                    this.updatePassword();\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.updatePassword}\r\n              >\r\n                Change Password\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputRecoveryPassword;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./CartItem.css\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../../store/actions\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n//component to display cart objects\r\nclass CartItem extends Component {\r\n  // store product id PID to reference for item removal\r\n  state = {\r\n    pid: this.props.pid,\r\n    itemID: this.props.itemID,\r\n    vid: this.props.vendorID,\r\n    size: this.props.size,\r\n    amtPurchased: this.props.amtPurchased,\r\n    price: this.props.productPrice,\r\n    total: this.props.totalPrice,\r\n    stock: 0,\r\n    isApparel: this.props.isApparel\r\n  };\r\n\r\n  //when a CartItem renders, store the state of the stock\r\n  //local stock checking used to quantity selector check\r\n  componentDidMount() {\r\n    const apiURL = \"/api/getProductInfo\";\r\n    axios\r\n      .get(apiURL, {\r\n        params: {\r\n          pid: this.props.pid\r\n        }\r\n      })\r\n      .then(res => {\r\n        //extract stock info and store , check local stock\r\n        //non-apparel stock check\r\n        if(res.data.product.isApparel === false){\r\n          this.setState({\r\n            stock: res.data.product.stock\r\n          });\r\n        }\r\n\r\n        //apparel stock check\r\n        else{\r\n          switch (this.state.size) {\r\n            case \"Small\":\r\n              this.setState({\r\n                stock:res.data.product.s_stock\r\n              })\r\n              break;\r\n    \r\n            case \"Medium\":\r\n              this.setState({\r\n                stock:res.data.product.m_stock\r\n              })\r\n              break;\r\n    \r\n            case \"Large\":\r\n              this.setState({\r\n                stock:res.data.product.l_stock\r\n              })\r\n              break;\r\n    \r\n            case \"X-Large\":\r\n              this.setState({\r\n                stock:res.data.product.xl_stock\r\n              })\r\n              break;\r\n    \r\n            case \"X-Small\":\r\n              this.setState({\r\n                stock:res.data.product.xs_stock\r\n              })\r\n              break;\r\n    \r\n            default:\r\n              break;\r\n          }\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.props.notifier({\r\n          title: \"Error\",\r\n          message: err.toString(),\r\n          type: \"danger\"\r\n        });\r\n      });\r\n  }\r\n\r\n  handleChange = name => event => {\r\n    this.setState({ [name]: event.target.value });\r\n  };\r\n\r\n  // TODO figure out how we want to handle 0 change here\r\n  //want to update total value of both item in cart and total sum\r\n  handleQuantityChange = event => {\r\n    //if the user wants to change quantity selector, check if value exceeds current stock\r\n    if (event.target.value > this.state.stock) {\r\n      //added notifier to indicate if user is exceeding stock of item based on quantity selector\r\n      this.props.notifier({\r\n        title: \"Warning\",\r\n        message: \"Quantity you're selecting exceeds available stock for item\",\r\n        type: \"warning\"\r\n      });\r\n      //if exceeded, return\r\n      return;\r\n    }\r\n\r\n    //if not exceeded, proceed with updating new total/amount in cart\r\n    //user cannot select 0 or negative items to purchase, need at least 1 for purchase\r\n    //set default value to 1 item to be purchased if user types 0 or empties input field\r\n    var newAmount = event.target.value;\r\n    if (Number(event.target.value) <= 0 || event.target.value == \"\") {\r\n      this.setState({\r\n        amtPurchased: \"\"\r\n      }, () => {\r\n        //update total in cart\r\n        //update total and amount based on pid\r\n        this.props.updateItemTotal(this.state.itemID, this.state.price, 1);\r\n\r\n        //update cart on server with new amount\r\n        var updateURL = \"/api/getUserCart/updateItems\";\r\n        axios\r\n          .post(updateURL, {\r\n            withCredentials: true,\r\n            params: {\r\n              pid: this.state.pid,\r\n              amtPurchased: 1,\r\n              isApparel: this.state.isApparel,\r\n              size: this.state.size\r\n            }\r\n          })\r\n          .then(res => {\r\n            //on successful item update from quantity select, recalculate total items purchased\r\n            if (res.data.success === true) {\r\n              var amtPurchased = 0;\r\n              for (let i = 0; i < this.props.items.length; i++) {\r\n                amtPurchased =\r\n                  amtPurchased + Number(this.props.items[i].amtPurchased);\r\n              }\r\n\r\n              //update cart badge based on number of items in user's cart\r\n              this.props.updateAmountPurchased(amtPurchased);\r\n            } else if (res.data.success === false) {\r\n              this.props.notifier({\r\n                title: \"Error\",\r\n                message: res.data.message.toString(),\r\n                type: \"danger\"\r\n              });\r\n            }\r\n          })\r\n          .catch(err => {\r\n            this.props.notifier({\r\n              title: \"Error\",\r\n              message: err.toString(),\r\n              type: \"danger\"\r\n            });\r\n          });\r\n      })\r\n      this.props.notifier({\r\n        title: \"Warning\",\r\n        message: \"Please enter a value greater than 0\",\r\n        type: \"warning\"\r\n      });\r\n    } else if (event.target.value > 0){\r\n      //calculate new total of specific item, where total = value * price\r\n      \r\n      var newTotal = event.target.value * this.state.price;\r\n      this.setState(\r\n        {\r\n          amtPurchased: event.target.value,\r\n          total: newTotal\r\n        },\r\n        () => {\r\n          //update total in cart\r\n          //update total and amount based on pid\r\n          this.props.updateItemTotal(this.state.itemID, newTotal, newAmount);\r\n\r\n          //update cart on server with new amount\r\n          var updateURL = \"/api/getUserCart/updateItems\";\r\n          axios\r\n            .post(updateURL, {\r\n              withCredentials: true,\r\n              params: {\r\n                pid: this.state.pid,\r\n                amtPurchased: newAmount,\r\n                isApparel: this.state.isApparel,\r\n                size: this.state.size\r\n              }\r\n            })\r\n            .then(res => {\r\n              //on successful item update from quantity select, recalculate total items purchased\r\n              if (res.data.success === true) {\r\n                var amtPurchased = 0;\r\n                for (let i = 0; i < this.props.items.length; i++) {\r\n                  amtPurchased =\r\n                    amtPurchased + Number(this.props.items[i].amtPurchased);\r\n                }\r\n\r\n                //update cart badge based on number of items in user's cart\r\n                this.props.updateAmountPurchased(amtPurchased);\r\n              } else if (res.data.success === false) {\r\n                this.props.notifier({\r\n                  title: \"Error\",\r\n                  message: res.data.message.toString(),\r\n                  type: \"danger\"\r\n                });\r\n              }\r\n            })\r\n            .catch(err => {\r\n              this.props.notifier({\r\n                title: \"Error\",\r\n                message: err.toString(),\r\n                type: \"danger\"\r\n              });\r\n            });\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  //remove item from user's cart\r\n  removeItem = () => {\r\n    const apiURL = \"/api/getUserCart/deleteItems\";\r\n    axios\r\n      .post(apiURL, {\r\n        withCredentials: true,\r\n        params: {\r\n          pid: this.state.pid,\r\n          isApparel: this.state.isApparel,\r\n          size: this.state.size\r\n        }\r\n      })\r\n      .then(res => {\r\n        const getCart = \"/api/getUserCart\";\r\n        //after successful deletion, get updated user's cart\r\n        axios\r\n          .get(getCart, {\r\n            withCredentials: true\r\n          })\r\n          .then(res => {\r\n            //after removing item from cart, update cart on server\r\n            this.props.updateItems(res.data.data);\r\n\r\n            //get all items related to this vendor and update vendor cart\r\n            var newItemsAfterDeletion = [];\r\n\r\n            var amtPurchased = 0;\r\n            for (let i = 0; i < res.data.data.length; i++) {\r\n              amtPurchased = amtPurchased + res.data.data[i].amtPurchased;\r\n            }\r\n\r\n            //update cart badge based on number of items in user's cart\r\n            this.props.updateAmountPurchased(amtPurchased);\r\n\r\n            //remove vendor from view if no more items\r\n            if (res.data.data.length !== 0) {\r\n              for (let i = 0; i < res.data.data.length; i++) {\r\n                if (res.data.data[i].vid === this.state.vid) {\r\n                  newItemsAfterDeletion.push(res.data.data[i]);\r\n                }\r\n              }\r\n              this.props.updateCartAfterDelete(newItemsAfterDeletion);\r\n            }\r\n\r\n            //update list of vendor items after item removal, no more items in vendor, empty\r\n            else {\r\n              this.props.updateCartAfterDelete(res.data.data);\r\n            }\r\n          })\r\n          .catch(err => {\r\n            this.props.notifier({\r\n              title: \"Error\",\r\n              message: err.toString(),\r\n              type: \"danger\"\r\n            });\r\n          });\r\n      })\r\n      .catch(err => {\r\n        this.props.notifier({\r\n          title: \"Error\",\r\n          message: err.toString(),\r\n          type: \"danger\"\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { imageSrc, productName, size } = this.props;\r\n\r\n    const { amtPurchased } = this.state;\r\n\r\n    // const productPrice = this.props.productPrice.toFixed(2);\r\n    // const totalPrice = this.props.totalPrice.toFixed(2);\r\n\r\n    const productPrice = this.state.price;\r\n    const totalPrice = this.state.total;\r\n\r\n    return (\r\n      <div className=\"cart-row-container\">\r\n        <div className=\"cart-item-container\">\r\n          <img src={imageSrc} className=\"cart-img\" alt={`${productName}`} />\r\n          <div className=\"cart-item-info\">\r\n            <div>\r\n              <b>{`${productName}`}</b>\r\n            </div>\r\n            {size ? (\r\n              <div>\r\n                <b>Size</b>: {`${size}`}\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <Button\r\n              size=\"small\"\r\n              color=\"primary\"\r\n              onClick={this.removeItem}\r\n              id=\"btn-remove\"\r\n            >\r\n              Remove Item\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div>${productPrice}</div>\r\n\r\n        <TextField\r\n          className=\"cart-qty\"\r\n          value={amtPurchased}\r\n          onChange={this.handleQuantityChange}\r\n          type=\"number\"\r\n          InputLabelProps={{ shrink: true }}\r\n        />\r\n\r\n        <div>${totalPrice}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//obtain state from store as props for component\r\n//get cart items, login value, and user email\r\nconst mapStateToProps = state => {\r\n  return {\r\n    items: state.cart.items,\r\n    login: state.auth.login\r\n  };\r\n};\r\n\r\n//redux\r\n//dispatch action to reducer, get user's cart from store\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    updateItems: response =>\r\n      dispatch({\r\n        type: actions.GET_CART,\r\n        cart: response\r\n      }),\r\n\r\n    //update store of cart total\r\n    updateTotal: sum =>\r\n      dispatch({\r\n        type: actions.UPDATE_TOTAL,\r\n        total: sum\r\n      }),\r\n\r\n    updateAmountPurchased: amount =>\r\n      dispatch({\r\n        type: actions.UPDATE_AMOUNT_PURCHASED,\r\n        amountPurchased: amount\r\n      })\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CartItem);\r\n","import React from \"react\";\nimport PropTypes from 'prop-types'\nimport ReactDOM from \"react-dom\";\nimport scriptLoader from \"react-async-script-loader\";\nimport paypal from \"paypal-checkout\";\nimport axios from \"axios\";\n\n// const scriptLoader = require('react-async-script-loader');\n// const paypal = require('paypal-checkout'); \n \nconst PPBtn = paypal.Button.driver(\"react\", { React, ReactDOM });\n\nclass PaypalButton extends React.Component {\n  state = {\n    showButton: false,\n    errorItem: \"\"\n  };\n\n  asyncItemStockCheck = item => {\n    return new Promise((resolve, reject) => {\n      axios\n        .get(\"/api/stock/\", {\n          params: {\n            pid: item.pid,\n            isApparel: item.isApparel,\n            size: item.size,\n            amt: item.amtPurchased\n          }\n        })\n        .then(res => {\n          if (res.data.availableStock === false) {\n            reject(item.productName);\n          } else {\n            resolve(\"Stock available\");\n          }\n        })\n        .catch(err => {\n          console.log(err);\n          reject(err);\n        });\n    });\n  };\n\n  checkStock = items => {\n    // check stock for each item\n    var promises = [];\n    for (let i = 0; i < items.length; i++) {\n      promises.push(this.asyncItemStockCheck(items[i]));\n    }\n    return Promise.all(promises);\n    /*\n    Promise.all(promises)\n      .then(values => {\n        console.log(\"All items stock available.\");\n        return true;\n      })\n      .catch(errorItem => {\n        console.log(\"Not enough stock for:\", errorItem);\n        // this.setState({ errorItem: errorItem });\n        this.props.onNotEnoughStock(errorItem);\n        return false;\n      });\n      */\n  };\n\n  componentDidMount() {\n    const { isScriptLoaded, isScriptLoadSucceed } = this.props;\n\n    if (isScriptLoaded && isScriptLoadSucceed) {\n      this.setState({ showButton: true });\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const { isScriptLoaded, isScriptLoadSucceed } = nextProps;\n\n    const isLoadedButWasntLoadedBefore =\n      !this.state.showButton && !this.props.isScriptLoaded && isScriptLoaded;\n\n    if (isLoadedButWasntLoadedBefore) {\n      if (isScriptLoadSucceed) {\n        this.setState({ showButton: true });\n      }\n    }\n  }\n\n  render() {\n    const {\n      total,\n      currency,\n      env,\n      commit,\n      client,\n      onSuccess,\n      onError,\n      onCancel,\n      items,\n      onNotEnoughStock,\n      paymentOptions\n    } = this.props;\n\n    const { showButton } = this.state;\n\n    // const payment = () =>\n    //   paypal.rest.payment.create(env, client, {\n    //     transactions: [\n    //       {\n    //         amount: {\n    //           total,\n    //           currency\n    //         }\n    //       }\n    //     ]\n    //   });\n\n      let payment = () => {\n        return paypal.rest.payment.create(this.props.env, this.props.client, Object.assign({\n            transactions: [\n                { amount: { total, currency } }\n            ]\n        }, paymentOptions), {\n            input_fields: {\n                // any values other than null, and the address is not returned after payment execution.\n                no_shipping: this.props.shipping\n            }\n        });\n    }\n\n\n    // onAuthorize occurs once the user authorizes the purchase by choosing payment type\n    const onAuthorize = (data, actions) => {\n      this.checkStock(items)\n        .then(res => {\n          // if all promises resovlve\n          console.log(\"Check Stock Successful, proceeding to execute payment.\");\n          actions.payment\n            .execute()\n            .then(() => {\n              const payment = {\n                paid: true,\n                cancelled: false,\n                payerID: data.payerID,\n                paymentID: data.paymentID,\n                paymentToken: data.paymentToken,\n                returnUrl: data.returnUrl\n              };\n\n              this.setState({ showButton: false });\n              onSuccess(payment);\n            })\n            .catch(err => {\n              console.log(\"Error in paypal payment execution:\", err);\n              this.props.notifier({\n                title: 'Error',\n                message: 'Sorry, there was an error. Please contact the support email for help.',\n                type: 'danger',\n                duration: 5000,\n              });\n            });\n        })\n        // if any of the promises reject\n        .catch(errorItem => {\n          console.log(\"Not enough stock for:\", errorItem);\n          // this.setState({ errorItem: errorItem });\n          onNotEnoughStock(errorItem);\n          onCancel(payment);\n        });\n      /*\n      const availableStock = await this.checkStock(items);\n      console.log(availableStock);\n      this.checkStock(items).then(res => {\n        console.log(\"DONE\");\n        console.log(res);\n        if (res === true) {\n          console.log(\"success\");\n          actions.payment.execute().then(() => {\n            const payment = {\n              paid: true,\n              cancelled: false,\n              payerID: data.payerID,\n              paymentID: data.paymentID,\n              paymentToken: data.paymentToken,\n              returnUrl: data.returnUrl\n            };\n\n            onSuccess(payment);\n          });\n        } else {\n          onCancel(payment);\n          // alert(`Sorry, ${this.state.errorItem} has run out of stock.`);\n          // onNotEnoughStock(this.state.errorItem);\n        }\n      });\n      */\n    };\n\n\n    return (\n      <div>\n        {showButton && (\n          <PPBtn\n            env={env}\n            client={client}\n            commit={commit}\n            payment={payment}\n            onAuthorize={onAuthorize}\n            onCancel={onCancel}\n            onError={onError}\n          />\n        ) }\n      </div>\n    );\n  }\n}\n\n      /* <div>\n        {showButton && this.props.displayPaypal ? (\n          <PPBtn\n            env={env}\n            client={client}\n            commit={commit}\n            payment={payment}\n            onAuthorize={onAuthorize}\n            onCancel={onCancel}\n            onError={onError}\n          />\n        ) : (<div></div>)}\n      </div> */\n\nPaypalButton.propTypes = {\n  currency: PropTypes.string.isRequired,\n  total: PropTypes.number.isRequired,\n  client: PropTypes.object.isRequired,\n  style: PropTypes.object\n}\n\nPaypalButton.defaultProps = {\n  paymentOptions: {},\n  env: 'sandbox',\n  // null means buyer address is returned in the payment execution response\n  shipping: null,\n  onSuccess: (payment) => {\n      console.log('The payment was succeeded!', payment);\n  },\n  onCancel: (data) => {\n      console.log('The payment was cancelled!', data)\n  },\n  onError: (err) => {\n      console.log('Error loading Paypal script!', err)\n  }\n};\n\n\nexport default scriptLoader(\"https://www.paypalobjects.com/api/checkout.js\")(\n  PaypalButton\n);\n","import React, { Component, Fragment } from \"react\";\nimport \"./Checkout.css\";\n// import Grid from \"@material-ui/core/Grid\";\n// import Button from \"@material-ui/core/Button\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../store/actions\";\n// import PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\n// import PaypalExpressBtn from \"react-paypal-express-checkout\";\nimport PaypalButton from \"../PaypalButton/PaypalButton\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\n\n//styles for checkout button\nconst styles = theme => ({\n  margin: {\n    margin: theme.spacing.unit\n  },\n  extendedIcon: {\n    marginRight: theme.spacing.unit\n  }\n});\n\n//calculate total price of user's cart and allow user to checkout\n//get user's cart info from state\n//state consists of information needed for paypal checkout\n\n//modified component to account for each vendor\n//old code takes total cart items and price\n//difference is that each vendor has its own list of items and total price of items\nclass Checkout extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayPaypal: true, // display paypal on mount; turn on on successful payment\n      total: this.props.totalValue,\n      env: process.env.REACT_APP_PAYPAL_ENV,\n      currency: \"USD\",\n      client: {\n        sandbox: process.env.REACT_APP_PAYPAL_SANDBOX,\n        production: \"YOUR-PRODUCTION-APP-ID\"\n      },\n      paymentOptions: {\n        intent: \"sale\",\n        // \"payer\": {\n        //   \"payer_info\": {  // payer_info not saved to paypal transaction, will need to send email to vendor with transaction ID for cross reference\n        //     \"email\": \"tst@gmail.com\",\n        //     \"first_name\": \"a\",\n        //     \"last_name\": \"d\"\n        //   },\n        //   \"payment_method\": \"paypal\"\n        // },\n        redirect_urls: {\n          return_url: \"https://193ecommerce.com/\",\n          cancel_url: \"https://193ecommerce.com/cart\"\n        },\n        transactions: [],\n        note_to_payer:\n          \"Please see club page or order receipt for info on pickup location/time.\" // does a popup, not incuded in transaction on paypal\n      },\n      // cartTotal: this.props.total\n      cartTotal: this.props.totalValue\n    };\n  }\n\n  //convert items in cart to array of paypal objects for payment option\n  updateCheckoutParams() {\n    //array to store as payment option\n    var paypalTransactionsArray = [];\n    var paypalTransactions = {};\n    paypalTransactions.item_list = {};\n    paypalTransactions.amount = {};\n    paypalTransactions.description = \"Sale\";\n\n    var paypalItems = [];\n\n    //go through each item in redux store\n    for (let i = 0; i < this.props.cartItems.length; i++) {\n      let paypalItem = {};\n\n      //construct new paypal object based on each item in Redux store container\n      paypalItem.name = this.props.cartItems[i].productName;\n\n      // if apparrel, concat the size to the name\n      if (this.props.cartItems[i].isApparel === true) {\n        paypalItem.name = paypalItem.name.concat(\n          \" : \",\n          this.props.cartItems[i].size\n        );\n      }\n\n      paypalItem.price = String(\n        this.props.cartItems[i].productPrice.toFixed(2)\n      );\n      paypalItem.currency = this.state.currency;\n      paypalItem.quantity = String(this.props.cartItems[i].amtPurchased);\n\n      //store\n      paypalItems.push(paypalItem);\n    }\n\n    paypalTransactions.item_list.items = paypalItems;\n    paypalTransactions.amount.currency = this.state.currency;\n    paypalTransactions.amount.total = String(this.props.totalValue);\n\n    //update payment options to be list of paypal items\n    paypalTransactionsArray.push(paypalTransactions);\n    this.state.paymentOptions.transactions = paypalTransactionsArray;\n\n    //update transaction total based on total summed from items for each vendor\n    // this.state.paymentOptions.transactions[0].amount.total = this.props.totalValue;\n    this.state.paymentOptions.transactions[0].amount.total = String(\n      this.props.totalValue\n    );\n  }\n\n  componentDidMount() {\n    this.updateCheckoutParams();\n  }\n\n  // //update payment option on update\n  componentDidUpdate() {\n    this.updateCheckoutParams();\n    // this.state.paymentOptions.transactions[0].amount.total = this.props.totalValue;\n    // this.state.paymentOptions.transactions[0].amount.total = String(\n    //   this.props.totalValue\n    // );\n  }\n\n  //subtract stock for single item\n  subtractStockSingleItem = item => {\n    return new Promise((resolve, reject) => {\n      const apiURL = \"/api/stock\";\n\n      //convert Size to apparel stock, eg. Small -> s_stock\n      var sizeStock = \"\";\n      switch (item.size) {\n        case \"Small\":\n          sizeStock = \"s_stock\";\n          break;\n\n        case \"Medium\":\n          sizeStock = \"m_stock\";\n          break;\n\n        case \"Large\":\n          sizeStock = \"l_stock\";\n          break;\n\n        case \"X-Large\":\n          sizeStock = \"xl_stock\";\n          break;\n\n        case \"X-Small\":\n          sizeStock = \"xs_stock\";\n          break;\n\n        default:\n          sizeStock = \"\";\n          break;\n      }\n\n      //make request to subtract stock on server\n      axios\n        .patch(apiURL, {\n          params: {\n            pid: item.pid,\n            isApparel: item.isApparel,\n            size: sizeStock,\n            amt: item.amtPurchased\n          }\n        })\n        .then(res => {\n          //if subtraction successful, resolve promise\n          if (res.data.success === true) {\n            resolve(1);\n          }\n          //if error, reject promise\n          else {\n            reject(0);\n          }\n        })\n        .catch(err => {\n          reject(0);\n        });\n    });\n  };\n\n  //wait for all items to complete stock subtraction\n  subtractStock = () => {\n    var waitPromises = [];\n    var currentVendorItems = this.props.cartItems;\n\n    //for each item, subtract stock, create a promise for each\n    for (let i = 0; i < currentVendorItems.length; i++) {\n      waitPromises.push(this.subtractStockSingleItem(currentVendorItems[i]));\n    }\n\n    //subtract stock and then remove items from cart\n    Promise.all(waitPromises)\n      .then(res => {\n        //delete items from vendor in user's cart after successfully subtracting stock\n        this.removeItemsFromVendor();\n      })\n      .catch(err => {\n        this.props.notifier({\n          title: \"Error\",\n          message: err.toString(),\n          type: \"danger\"\n        });\n      });\n  };\n\n  //remove each item from vendor after purchase\n  //create a promise for each item, call /api/getUserCart/deleteItems to delete each item\n  removeSingleItemFromVendor = removeItem => {\n    return new Promise((resolve, reject) => {\n      const apiURL = \"/api/getUserCart/deleteItems\";\n\n      axios\n        .post(apiURL, {\n          withCredentials: true,\n          params: {\n            pid: removeItem.pid,\n            isApparel: removeItem.isApparel,\n            size: removeItem.size\n          }\n        })\n        .then(res => {\n          //item was deleted on server, resolve promise\n          if (res.data.success === true) {\n            resolve(1);\n          } else {\n            //if item was not deleted, reject promise\n            reject(0);\n          }\n        })\n        .catch(err => {\n          reject(0);\n        });\n    });\n  };\n\n  //remove items from vendor after purchase\n  //wait for all promises to return, and then update user's cart\n  removeItemsFromVendor = () => {\n    var waitPromises = [];\n    var currentVendorItems = this.props.cartItems;\n\n    //create a promise for each item to be deleted and wait\n    for (let i = 0; i < currentVendorItems.length; i++) {\n      waitPromises.push(this.removeSingleItemFromVendor(currentVendorItems[i]));\n    }\n\n    //wait until all promises have been resolved\n    Promise.all(waitPromises)\n      //when all promises have been resolved, proceed to get updated user's cart\n      .then(res => {\n        //after removing items from user's cart with vendor item, get updated cart\n        const cartURL = \"/api/getUserCart\";\n        axios\n          .get(cartURL, {\n            withCredentials: true\n          })\n          .then(res => {\n            if (res.data.success === true) {\n              //update new items and redirect to successful payment page\n              this.props.updateItems(res.data.data);\n              var amtPurchased = 0;\n\n              for(let i = 0; i < res.data.data.length; i++){\n                amtPurchased = amtPurchased + res.data.data[i].amtPurchased\n              }\n      \n              //update cart badge based on number of items in user's cart\n              this.props.updateAmountPurchased(amtPurchased);\n\n              this.props.history.push(\"/successfulPayment\");\n              // window.location = \"/successfulPayment\";\n              // this.setState(() => ({ toRedirect: true }));\n              // this.props.handleRedirect();\n            } else {\n              this.props.notifier({\n                title: \"Error\",\n                message: \"Error with server, no cart.\",\n                type: \"danger\"\n              });\n            }\n          })\n          .catch(err => {\n            this.props.notifier({\n              title: \"Error\",\n              message: err.toString(),\n              type: \"danger\"\n            });\n          });\n      })\n      .catch(err => {\n        this.props.notifier({\n          title: \"Error\",\n          message: err.toString(),\n          type: \"danger\"\n        });\n      });\n  };\n\n  onSuccess = payment => {\n    // console.log(\"Payment successful!\", payment);\n    this.props.updateSelectedVendor(this.props.cartItems[0].vid);\n    const apiURL = \"/api/orders\";\n\n    // turn off display of paypal buttons to fix no response window error\n    // this.setState({ displayPaypal: false });\n    this.props.handlePaypalHide();\n\n    //make post request to orders\n    axios\n      .post(apiURL, {\n        withCredentials: true,\n        params: {\n          items: this.state.paymentOptions.transactions[0].item_list.items,\n          totalPrice: String(this.props.totalValue),\n          vid: this.props.cartItems[0].vid,\n          paymentID: payment.paymentID,\n          payerID: payment.payerID\n        }\n      })\n      .then(res => {\n        //on successful payment\n        if (res.data.success === true) {\n          this.props.notifier({\n            title: \"Success\",\n            message: res.data.message.toString(),\n            type: \"success\"\n          });\n\n          //subtract stock from database after items have been processed for checkout\n          //remove items that are based on vendor after purchase\n          //call api to delete item from cart on server\n\n          //subtract stock removes stock from database and calls removeItemsFromVendor()\n          this.subtractStock();\n\n          // this.removeItemsFromVendor();\n\n          // //clear cart on server\n          // const clearcartURL = \"/api/getUserCart/clearCart\";\n          // axios\n          //   .delete(clearcartURL, {\n          //     params: {\n          //       user: this.props.user\n          //     }\n          //   })\n          //   .then(res => {\n          //     if (res.data.success === true) {\n          //       //when payment is successfully processed, clear cart and set total to 0\n          //       this.props.emptyCartOnPayment();\n          //       this.props.clearTotalOnPayment(0);\n          //       window.location = '/successfulPayment';\n          //     } else {\n          //       this.props.notifier({\n          //         title: \"Error\",\n          //         message: \"Error with server.\",\n          //         type: \"danger\"\n          //       });\n          //     }\n          //   })\n          //   .catch(err => {\n          //     this.props.notifier({\n          //       title: \"Error\",\n          //       message: err.toString(),\n          //       type: \"danger\"\n          //     });\n          //   });\n        } else {\n          this.props.notifier({\n            title: \"Error\",\n            message: \"Payment Unsuccessful. Please contact support email.\",\n            type: \"danger\",\n            duration: 8000,\n          });\n        }\n      })\n      .catch(err => {\n        this.props.notifier({\n          title: \"Error\",\n          message: err.toString(),\n          type: \"danger\"\n        });\n      });\n\n    // You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\n    // alert('Transaction completed by ' + payment.email);\n\n    // TODO, payment contains info, send it to backend\n    // payment.payerID\n    // payment.paymentID\n\n    // payment.returnUrl can be used to route back to somewhere\n    // or route ourselves\n  };\n\n  onCancel = data => {\n    // The user pressed \"cancel\" or closed the PayPal popup\n    // console.log(\"Payment cancelled!\", data);\n    // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\n  };\n\n  onNotEnoughStock = itemName => {\n    // console.log(\n    //   \"Payment canceled because there was not enough stock for:\",\n    //   itemName\n    // );\n\n    this.props.notifier({\n      title: \"Error\",\n      message: `Sorry, ${itemName} has run out of stock.`,\n      type: \"danger\"\n    });\n  };\n\n  onError = err => {\n    // The main Paypal script could not be loaded or something blocked the script from loading\n    // console.log(\"Error!\", err);\n    this.props.notifier({\n      title: \"Error\",\n      message: err.toString(),\n      type: \"danger\"\n    });\n    // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\n    // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\n  };\n\n  //TODO bugs\n  //saved quantity selectors, update redux and server for cart\n  //pass correct total to paypal checkout\n  //check quantity of stock in database before proceeding with payment\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n        {this.props.displayPaypalButton && (\n          <Fragment>\n            <PaypalButton\n              env={this.state.env}\n              client={this.state.client}\n              currency={this.state.currency}\n              total={Number(this.props.totalValue)}\n              onError={this.onError}\n              onSuccess={this.onSuccess}\n              onCancel={this.onCancel}\n              shipping={1}\n              paymentOptions={this.state.paymentOptions}\n              items={this.props.items}\n              onNotEnoughStock={this.onNotEnoughStock}\n            />\n          </Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\n//obtain state from store as props for component\n//get cart items, login value, and user email\nconst mapStateToProps = state => {\n  return {\n    items: state.cart.items,\n    login: state.auth.login,\n    cart: state.cart.items\n  };\n};\n\n//redux\n//dispatch action to reducer, get user's cart from store\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateItems: response =>\n      dispatch({\n        type: actions.GET_CART,\n        cart: response\n      }),\n\n    updateSelectedVendor: currentVendor =>\n      dispatch({\n        type: actions.GET_VENDOR_PRODUCTS,\n        vendor: currentVendor\n      }),\n\n    emptyCartOnPayment: () =>\n      dispatch({\n        type: actions.EMPTY_CART\n      }),\n\n    clearTotalOnPayment: value =>\n      dispatch({\n        type: actions.UPDATE_TOTAL,\n        total: value\n      }),\n\n    updateAmountPurchased: amount => \n      dispatch({\n        type: actions.UPDATE_AMOUNT_PURCHASED,\n        amountPurchased: amount\n      })\n\n  };\n};\n\n/*Checkout.PropTypes = {\n  classes: PropTypes.object.isRequired\n};*/\n\n// Checkout.PropTypes = {\n//   classes: PropTypes.object.isRequired\n// };\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(withStyles(styles)(Checkout))\n);\n","import React, { Component } from \"react\";\nimport \"./Cart.css\";\n// import axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../store/actions\";\nimport CartItem from \"../CartItem/CartItem\";\nimport Checkout from \"../Checkout/Checkout\";\n// import { Link } from \"react-router-dom\";\n// import EmptyItem from \"../EmptyItem/EmptyItem\";\n// import ReactNotification from \"react-notifications-component\";\nimport \"react-notifications-component/dist/theme.css\";\n\n//component to display user's cart\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      total: 0,\n      cart: this.props.passedItems,\n      vendor: this.props.passedVendor,\n      vendorsInView: this.props.passedAllVendors\n    };\n  }\n\n  //update total price of cart\n  updateTotal = () => {\n    //get total from items\n    var currentCart = this.state.cart;\n    var priceTotal = 0;\n\n    //if cart is empty, total price is $0\n    if (currentCart.length === 0) {\n      this.setState({\n        total: 0\n      });\n      this.props.updateTotal(priceTotal);\n    }\n\n    //if there are items, calculate total price\n    else {\n      //go through each item in cart and sum up price\n      for (let i = 0; i < currentCart.length; i++) {\n        priceTotal += Number(currentCart[i].totalPrice);\n      }\n      priceTotal = priceTotal.toFixed(2);\n      this.setState({\n        total: priceTotal\n      });\n      this.props.updateTotal(priceTotal);\n    }\n  };\n\n  //update total price based on quantity\n  //if user changes quantity in selector, find the matching item via pid and update total price/amount purchased\n  updateItemTotal = (itemID, newTotal, amt) => {\n    var currentCart = this.state.cart;\n    for (let i = 0; i < currentCart.length; i++) {\n      if (currentCart[i].itemID === itemID) {\n        currentCart[i].totalPrice = newTotal;\n        currentCart[i].amtPurchased = amt;\n      }\n    }\n\n    //update state of cart with new prices and amount purchased with new item\n    this.setState(\n      {\n        cart: currentCart\n      },\n      () => {\n        //update cart and total of cart\n        this.updateTotal();\n      }\n    );\n  };\n\n  //update cart of items in current vendor if an item is removed from CartItem\n  //function passed as prop to child, child calls parent function to update state of items in cart\n  updateCartAfterDelete = newItems => {\n    // console.log(' NEW ITEMS ARE: ', newItems);\n    // if (newItems.length === 0) {\n    //   // console.log('IF STATEMENT RUN')\n    //   this.props.handlePaypalHide();\n    //   // this.props.handleEmptyCart();\n    // }\n    // else {\n    //   console.log('ELSE STATEMENT RUN')\n    //   return this.setState( { cart: newItems }, () => { this.updateTotal() });\n    // }\n\n    this.setState(\n      {\n        cart: newItems\n      },\n      () => {\n        //no more items for this vendor cart, update CartView to remove this cart\n        if (this.state.cart.length === 0) {\n          //reload page only if no more items in cart for a vendor\n          //work around for ppxo error, cleanup error for paypal when trying to unmount component?\n          // this.props.handlePaypalHide();\n          // this.props.handleEmptyCart();\n          window.location.reload();\n          // this.forceUpdate();\n\n          //attempted to rerender based on new items/empty items for vendor, ran into ppxo error for paypal\n          //error window clean up?\n\n          // console.log(\"passed all vendors to view\", this.state.vendorsInView);\n          // var currentVendorsView = this.state.vendorsInView;\n          // var vidIndex = 0;\n\n          // //find location of vid, remove from array of current vendors to render\n          // for(let i = 0; i < currentVendorsView.length; i++){\n          //   if(currentVendorsView[i] === this.state.vendor){\n          //     vidIndex = i;\n          //     break;\n          //   }\n          // }\n\n          // console.log(\"vid to remove\", this.state.vendor);\n          // console.log(\"location of vid\", vidIndex);\n\n          // currentVendorsView.splice(Number(vidIndex),1);\n          // console.log(\"new vendors\", currentVendorsView);\n          // this.props.updateVendorsView(currentVendorsView);\n        } else {\n          this.updateTotal();\n        }\n      }\n    );\n  };\n\n  //get cart from server for user\n  componentDidMount() {\n    //calculate running total of items\n    this.updateTotal();\n  }\n\n  //render cart items to cart view\n  render() {\n    if (this.state.cart.length === 0) {\n      // return nothing\n      return <div />;\n    }\n\n    //render each item in the cart\n    const cart = this.state.cart.map(result => {\n      if (result.size === undefined) {\n        return (\n          <CartItem\n            key={result.itemID}\n            imageSrc={result.image[0]}\n            pid={result.pid}\n            itemID={result.itemID}\n            vendorID={result.vid}\n            productName={result.productName}\n            amtPurchased={result.amtPurchased}\n            productPrice={result.productPrice}\n            totalPrice={result.totalPrice}\n            size={result.size}\n            isApparel={result.isApparel}\n            updateItemTotal={this.updateItemTotal}\n            notifier={this.props.notifier}\n            updateAfterDelete={this.props.updateAfterDelete}\n            updateCartAfterDelete={this.updateCartAfterDelete}\n          />\n        );\n      } else {\n        return (\n          <CartItem\n            key={result.itemID}\n            size={result.size}\n            imageSrc={result.image[0]}\n            pid={result.pid}\n            itemID={result.itemID}\n            vendorID={result.vid}\n            productName={result.productName}\n            amtPurchased={result.amtPurchased}\n            productPrice={result.productPrice}\n            totalPrice={result.totalPrice}\n            isApparel={result.isApparel}\n            updateItemTotal={this.updateItemTotal}\n            notifier={this.props.notifier}\n            updateAfterDelete={this.props.updateAfterDelete}\n            updateCartAfterDelete={this.updateCartAfterDelete}\n          />\n        );\n      }\n    });\n\n    return (\n      <div className=\"cart-table-container\">\n        {/* TABLE HEADERS */}\n        <span className=\"table-header table-row\">\n          <span>\n            <strong>{this.props.vendorName} Cart ({this.state.cart.length})</strong>\n          </span>\n          <span>\n            <strong>Price</strong>\n          </span>\n          <span>\n            <strong>Qty</strong>\n          </span>\n          <span>\n            <strong>Total</strong>\n          </span>\n        </span>\n\n        {/* TABLE DATA */}\n        {cart}\n\n        <div id=\"total-text\">Total</div>\n        <div id=\"total-price\">${this.state.total}</div>\n        <div id=\"btn-paypal\">\n          {/* {checkoutButtons} */}\n\n          <Checkout\n            cartItems={this.state.cart}\n            totalValue={this.state.total}\n            notifier={this.props.notifier}\n            handleRedirect={this.props.handleRedirect}\n            handlePaypalHide={this.props.handlePaypalHide}\n            displayPaypalButton={this.props.displayPaypalButton}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\n//redux\n//dispatch action to reducer, get user's cart\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateItems: response =>\n      dispatch({\n        type: actions.GET_CART,\n        cart: response\n      }),\n\n    //update store of cart total\n    updateTotal: sum =>\n      dispatch({\n        type: actions.UPDATE_TOTAL,\n        total: sum\n      }),\n\n    //update cart\n    updateCart: cart =>\n      dispatch({\n        type: actions.UPDATE_CART,\n        items: cart\n      })\n  };\n};\n\n//obtain state from store as props for component\n//get cart items, login value, and user email\nconst mapStateToProps = state => {\n  return {\n    items: state.cart.items,\n    login: state.auth.login\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Cart);\n","import React, { Component } from \"react\";\nimport Cart from \"../Cart/Cart\";\n// import axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../store/actions\";\nimport \"./CartView.css\";\nimport { Link, Redirect, withRouter } from \"react-router-dom\";\n// import AddShoppingCart from \"@material-ui/icons/AddShoppingCart\";\n\n//split cart into groups, grouped by vendors\n//each subcart has items, subtotal, and checkout button\n\nclass CartView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allVendors: [],\n      vendorItemsSeparated: [],\n      currentCartItems: this.props.items,\n      toRedirect: false,\n      displayPaypalButton: true,\n      emptyCart: false,\n    };\n  }\n\n  // handle redirect called from checkout on successful purchase\n  handleRedirect = () => {\n    // this.setState(() => ({ toRedirect: true }));\n    // this.setState({ toRedirect: true });\n    this.props.history.push(\"/successfulPayment\");\n  };\n\n  //pass list of vendors to function to categorize items\n  separateItems = vendorList => {\n    //array that consists of arrays of items\n    //array that holds arrays\n    var itemsArray = [];\n\n    //for each vendor in the vendor list, determine which items have matching vid and push to temp array\n    for (let i = 0; i < vendorList.length; i++) {\n      //current vendor to check, temp array\n      const currentVendor = vendorList[i];\n      var currentItems = new Array();\n\n      //for each item in cart, determine which vid matches current vendor that is being checked\n      for (let j = 0; j < this.props.items.length; j++) {\n        if (this.props.items[j].vid === currentVendor) {\n          currentItems.push(this.props.items[j]);\n        }\n      }\n\n      //push current array of items to array of arrays\n      itemsArray.push(currentItems);\n    }\n\n    //update state\n    this.setState({\n      vendorItemsSeparated: itemsArray,\n    });\n  };\n\n  //function to separate items by vendors\n  separateVendors = () => {\n    //separate payment by vid\n    //find which vendors exist, array to keep track existing vendors\n    var currentVendorArray = [];\n\n    //go through each item in user's cart, extract vid to determine how many vendors to create buttons for\n    for (let i = 0; i < this.props.items.length; i++) {\n      const currentVid = this.props.items[i].vid;\n      if (currentVendorArray.includes(currentVid) === false) {\n        currentVendorArray.push(currentVid);\n      }\n    }\n\n    //store result of array of vendors available\n    this.setState({\n      allVendors: currentVendorArray\n    });\n\n    //call function to separate items based on vendor\n    this.separateItems(currentVendorArray);\n  };\n\n  //update list of items in user's cart after user removes item from cart\n  //this function is passed down as props to CartItem, when CartItem removes item calls parent function\n  updateAfterDelete = newItems => {\n    this.setState(\n      {\n        currentCartItems: newItems\n      },\n      () => {\n        // console.log(\"separting vendors after delete\");\n        this.separateVendors();\n        this.forceUpdate();\n      }\n    );\n  };\n\n  //update which vendors to render in CartView\n  //pass function down to child, let child update based on items in cart for vendor\n  updateVendorsView = newVendors => {\n    this.setState({\n      allVendors: newVendors\n    });\n  };\n\n  handlePaypalHide = () => {\n    this.setState(() => ({ displayPaypalButton: false }));\n  }\n\n  handleEmptyCart = () => {\n    this.setState(() => ({ displayPaypalButton: false, emptyCart: true }));\n    this.separateVendors();\n    // this.setState(() => ({ emptyCart: true }));\n  }\n\n  //separate items by vendors when component loads to page\n  componentDidMount() {\n    this.separateVendors();\n  }\n\n\n  render() {\n    if (this.state.toRedirect === true) {\n      const pageText =\n        \"Thanks for purchasing. Please check your e-mail inbox for an order receipt.\";\n      return (\n        <Redirect\n          to={{ pathname: \"/page/successfulPayment\", state: { pageText } }}\n        />\n      );\n    }\n    // if empty cart, display empty cart text\n    else if (this.state.allVendors.length === 0) {\n      var renderCarts = (\n        <div id=\"empty-cart-container\">\n          <h1>\n            No items in cart. Click here to <Link to=\"/shop\"> Shop </Link>\n          </h1>\n          {/* <AddShoppingCart style={{width: \"400px\", height: \"400px\"}}/> */}\n        </div>\n      );\n    } else {\n      //render carts for each vendor\n      var renderCarts = this.state.allVendors.map(vendor => {\n        let vendorGroupName = '';\n        let listOfVendors = this.props.vendors;\n  \n        //extract vendor name\n        for(let i = 0; i < listOfVendors.length; i++){\n          if(vendor === listOfVendors[i].vid){\n            vendorGroupName = listOfVendors[i].vendorName;\n            break;\n          }\n        }\n        //for each vendor, want to render a cart\n        for (let i = 0; i < this.state.vendorItemsSeparated.length; i++) {\n          let currentListItems = this.state.vendorItemsSeparated[i];\n          if (currentListItems[0].vid === vendor) {\n            return (\n              <Cart\n                key={vendor}\n                vendorName={vendorGroupName}\n                passedAllVendors={this.state.allVendors}\n                updateVendorsView={this.updateVendorsView}\n                passedItems={currentListItems}\n                passedVendor={vendor}\n                notifier={this.props.notifier}\n                updateAfterDelete={this.updateAfterDelete}\n                handleRedirect={this.handleRedirect}\n                handlePaypalHide={this.handlePaypalHide}\n                displayPaypalButton={this.state.displayPaypalButton}\n                handleEmptyCart={this.handleEmptyCart}\n              />\n            );\n          }\n        }\n      });\n    }\n\n    return <div id=\"cart-items\">{renderCarts}</div>;\n  }\n}\n\n//dispatch action to reducer, get user's cart\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateItems: response =>\n      dispatch({\n        type: actions.GET_CART,\n        cart: response\n      }),\n\n    //update store of cart total\n    updateTotal: sum =>\n      dispatch({\n        type: actions.UPDATE_TOTAL,\n        total: sum\n      }),\n\n    //update cart\n    updateCart: cart =>\n      dispatch({\n        type: actions.UPDATE_CART,\n        items: cart\n      })\n  };\n};\n\n//obtain state from store as props for component\n//get cart items, login value, and user email\nconst mapStateToProps = state => {\n  return {\n    items: state.cart.items,\n    login: state.auth.login,\n    vendors: state.vendor.vendors,\n  };\n};\n\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CartView)\n);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./EmailConfirmation.css\";\nimport Paper from \"@material-ui/core/Paper\";\n\nexport default class EmailConfirmation extends Component {\n  state = {\n    isConfirmed: false,\n    toLogin: false,\n    errorMessage: \"\"\n  };\n\n  componentDidMount() {\n    // check link, call route\n    const { token } = this.props.match.params;\n    const apiURL = \"/api/signup/confirmEmail\";\n    axios\n      .get(apiURL, { params: { token } })\n      .then(res => {\n        if (res.data.success === true) {\n          this.setState(() => ({ isConfirmed: true }));\n          setTimeout(() => {\n            this.setState(() => ({ toLogin: true }));\n          }, 8000);\n        } else {\n          this.setState(() => ({ errorMessage: res.data.message }));\n        }\n      })\n      .catch(err => {\n        console.log(\"Error in email confirmation:\", err);\n        this.props.notifier({\n          title: \"Error\",\n          message: err.toString(),\n          type: \"warning\"\n        });\n      });\n  }\n\n  render() {\n    if (!this.state.isConfirmed) {\n      return (\n        <div id=\"email-confirmation-container\">\n          <Paper id=\"email-confirmation-paper-container\">\n            <h4>\n              {this.state.errorMessage !== \"\"\n                ? this.state.errorMessage\n                : \"Sorry, there was an error in confirming your email.\"}\n            </h4>\n          </Paper>\n        </div>\n      );\n    } else if (this.state.toLogin) {\n      return <Redirect to=\"/login\" />;\n    }\n\n    return (\n      <div id=\"email-confirmation-container\">\n        <Paper id=\"email-confirmation-paper-container\">\n          <h4>\n            Email confirmed. Thanks for signing up! Redirecting to login ...\n          </h4>\n        </Paper>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport {withRouter } from 'react-router-dom';\n\n\nclass ScrollToTop extends Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      window.scrollTo(0, 0)\n    }\n  }\n\n  render() {\n    return this.props.children\n  }\n}\n\nexport default withRouter(ScrollToTop);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./AboutClub.css\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n// import Slider from \"react-slick\";\n// import testPicture from \"../../images/wics2.png\";\n// import Hidden from \"@material-ui/core/Hidden\";\n\nclass ClubInfo extends Component {\n  static propTypes = {\n    vendorName: PropTypes.string.isRequired,\n    bio: PropTypes.string.isRequired,\n    bioPictures: PropTypes.array.isRequired\n  };\n\n  render() {\n    let {\n      vendorName,\n      bio,\n      bioPictures,\n      pickupInfo,\n      email,\n      facebook,\n      instagram,\n      vid,\n    } = this.props;\n\n    if (facebook == \"\") {\n      facebook = \"none\";\n    }\n    else {\n      instagram = \"none\";\n    }\n\n    return (\n      <div>\n        <div id=\"about-club-container\">\n          <h1 className=\"club-header\">{vendorName}</h1>\n          {/* <div className=\"club-bio\">{bio}</div> */}\n\n          <ClubImages bioPictures={bioPictures} />\n          <a\n            href={facebook}\n            style={{ textDecoration: \"none\", color: \"#C26E60\" }}\n          >\n            <div className=\"events-now\">\n              <h2>Events Every Thursday!</h2>\n            </div>\n          </a>\n\n          <div className=\"club-bio\">\n            {bio}\n            {/* Women in Computer Science (WiCS) is a community in Davis that\n            motivates and prepares women for real life challenges in the field\n            of computer science. Women in Computer Science(WiCS) supports,\n            empowers and motivates the growing community of women in computer\n            science. We aim to prepare women for tech industry, in addition to\n            inspiring women to explore educational and professional\n            opportunities in computing through creating a powerful community,\n            providing mentorship and helping them to succeed. We aim to grow,\n            learn and spread the joy of computer science together! Our mission\n            is to create a platform where we can share ideas about our personal\n            projects, promote interest in programming and go to Hackathons. We\n            want to create a community of girls helping each other learn to code\n            and working together to solve problems. */}\n          </div>\n          <div className=\"small-width\">\n            <div className=\"roww\">\n              <div className=\"colls\">\n                <a href={facebook}>\n                  <img\n                    src={require(\"../../images/facebook.svg\")}\n                    alt=\"Facebook\"\n                    width=\"100%\"\n                  />\n                </a>\n              </div>\n\n              <div className=\"colls\">\n                <a href={instagram}>\n                  <img\n                    src={require(\"../../images/instagram.svg\")}\n                    alt=\"Instagram\"\n                    width=\"100%\"\n                  />\n                </a>\n              </div>\n\n              <div className=\"colls\">\n                <Link to={`/vendorProducts/${vid}`}>\n                  <img\n                    src={require(\"../../images/creative-market.svg\")}\n                    alt=\"Shop\"\n                    width=\"100%\"\n                  />\n                </Link>\n              </div>\n            </div>\n          </div>\n\n          {/* <p className=\"club-pick-up\">Pick-up Locations: Kemper Hall Lobby</p> */}\n          <p className=\"club-pick-up\">{pickupInfo}</p>\n\n          <p className=\"club-contacts\">Contact us: {email} </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass ClubImages extends Component {\n  static propTypes = {\n    bioPictures: PropTypes.array.isRequired\n  };\n\n  render() {\n    const { bioPictures } = this.props;\n    const settings = {\n      dots: true,\n      infinite: true,\n      speed: 500,\n      slidesToShow: 1,\n      slidesToScroll: 1,\n      autoplay: true,\n      autoplaySpeed: 5000,\n      pauseOnHover: true\n    };\n    return (\n      <div className=\"club-pictures-container\">\n        <img src={bioPictures[0]} alt=\"About Club\" />\n        {/* <Slider {...settings } className=\"club-pictures-slider\">\n          {bioPictures.map(img => \n            <img src={img} alt=\"Img\" key={img} className=\"club-picture\"/>\n          )}\n        </Slider> */}\n      </div>\n    );\n  }\n}\n\nexport default class AboutClub extends Component {\n  /*\n  static propTypes = {\n    vid: PropTypes.string\n  };\n  */\n\n  state = {\n    vendorName: \"\",\n    bio: \"\",\n    bioPictures: [],\n    pickupInfo: \"\",\n    email: \"\",\n    facebook: \"\",\n    instagram: \"\"\n  };\n\n  componentDidMount() {\n    //extract param values from URL\n    //match object contains parameter values\n    const vid = this.props.match.params.vid;\n\n    const route = `/api/getVendorInfo/aboutClub`;\n\n    axios\n      .get(route, {\n        // params: { vid: this.props.vid }\n\n        //extract vid from URL\n        params: { vid: vid }\n      })\n      .then(res => {\n        if (res.data.success) {\n          const {\n            vendorName,\n            bio,\n            bioPictures,\n            pickupInfo,\n            email,\n            facebook,\n            instagram,\n          } = res.data;\n\n          this.setState({\n            vendorName,\n            bio,\n            bioPictures,\n            pickupInfo,\n            email,\n            facebook,\n            instagram,\n          });\n        } else {\n          this.props.notifier({\n            title: \"Error\",\n            message: res.data.message,\n            type: \"danger\"\n          });\n        }\n      })\n      .catch(err => {\n        this.props.notifier({\n          title: \"Error\",\n          message: err.toString(),\n          type: \"danger\"\n        });\n      });\n  }\n\n  // TODO style about us page\n  render() {\n    const vid = this.props.match.params.vid;\n\n    const {\n      vendorName,\n      bio,\n      bioPictures,\n      pickupInfo,\n      email,\n      facebook,\n      instagram,\n    } = this.state;\n\n    return (\n      // <div id=\"about-club-container\">\n      <ClubInfo\n        vendorName={vendorName}\n        bio={bio}\n        bioPictures={bioPictures}\n        pickupInfo={pickupInfo}\n        email={email}\n        facebook={facebook}\n        instagram={instagram}\n        vid={vid}\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./Clubs.css\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\nfunction DisplayClub(props) {\n  const { bio, vendorName, bioPicture, vid } = props;\n\n  const aboutLink = `/aboutClub/${vid}`;\n  const shopLink = `/vendorProducts/${vid}`;\n\n  return (\n    <div className=\"moreColls\">\n      <figure>\n        <div className=\"roww\">\n          <Link to={shopLink}>\n            <div className=\"moreContainer\">\n              <img src={bioPicture} alt=\"Display Club\" width=\"100%\" />\n              <div className=\"hero-textt\">Shop {vendorName}</div>\n            </div>\n          </Link>\n        </div>\n        <figcaption className=\"shopClub\">\n          <Link to={aboutLink}>Learn More About {vendorName}</Link>\n        </figcaption>\n      </figure>\n    </div>\n  );\n}\n\nexport default class Clubs extends Component {\n  state = {\n    vendors: []\n  };\n\n  // get list of vendors and their info on mount\n  componentDidMount() {\n    const route = `/api/getVendorInfo`;\n\n    axios\n      .get(route)\n      .then(res => {\n        if (res.data.success) {\n          this.setState({ vendors: res.data.vendors });\n        } else {\n          this.props.notifier({\n            title: \"Error\",\n            message: res.data.message.toString(),\n            type: \"danger\"\n          });\n        }\n      })\n      .catch(err => {\n        this.props.notifier({\n          title: \"Error\",\n          message: err.toString(),\n          type: \"danger\"\n        });\n      });\n  }\n\n  render() {\n    const { vendors } = this.state;\n    return (\n      <div id=\"display-clubs-container\">\n        <h1 className=\"clubHeader\">CLUBS</h1>\n        <div id=\"display-club-boxes\">\n          {vendors.map(vendor => (\n            <DisplayClub\n              bio={vendor.bio}\n              vendorName={vendor.vendorName}\n              bioPicture={vendor.bioPictures[1]}\n              vid={vendor.vid}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport \"./GenericPage.css\";\n\nexport default class GenericPage extends Component {\n  render() {\n    let pageText = this.props.pageText;\n\n    return (\n      <div id=\"generic-page-container\">\n        <Paper\n          id=\"generic-page-paper-container\"\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          }}\n        >\n          <h4>{pageText}</h4>\n        </Paper>\n      </div>\n    );\n  }\n}\n","import React, {Component } from \"react\";\n// import PropTypes from \"prop-types\";\nimport \"./Terms.css\"\n// import axios from \"axios\";\n// import Slider from 'react-slick';\n\n\nexport default class Terms extends Component {\n  render(){\n    return(\n      <div className = \"terms-container\">\n        <div>\n          <div className = \"terms-header\">\n\t    <h1>Terms and Service</h1>\n\t    <h2>OVERVIEW</h2>\n      </div>\n\n     \n<font size = '4'>\n<div className = \"each-question\">\n<p>\nThis website is operated by ECS 193 E-Commerce. Throughout the site, the terms “we”, “us” and “our” refer to ECS 193 E-Commerce. ECS 193 E-Commerce offers this website, including all information, tools and services available from this site to you, the user, conditioned upon your acceptance of all terms, conditions, policies and notices stated here.\n</p>\n</div>\n\n<div className = \"each-question\">\nBy visiting our site and/ or purchasing something from us, you engage in our “Service” and agree to be bound by the following terms and conditions (“Terms of Service”, “Terms”), including those additional terms and conditions and policies referenced herein and/or available by hyperlink. These Terms of Service apply  to all users of the site, including without limitation users who are browsers, vendors, customers, merchants, and/ or contributors of content.\n<p>\nPlease read these Terms of Service carefully before accessing or using our website. By accessing or using any part of the site, you agree to be bound by these Terms of Service. If you do not agree to all the terms and conditions of this agreement, then you may not access the website or use any services. If these Terms of Service are considered an offer, acceptance is expressly limited to these Terms of Service.\n</p>\n</div>\n\n<div className = \"each-question\">\n<p>\nAny new features or tools which are added to the current store shall also be subject to the Terms of Service. You can review the most current version of the Terms of Service at any time on this page. We reserve the right to update, change or replace any part of these Terms of Service by posting updates and/or changes to our website. It is your responsibility to check this page periodically for changes. Your continued use of or access to the website following the posting of any changes constitutes acceptance of those changes.\n\n</p>\n</div>\n\n<div className = \"each-question\">\n\n<h2>SECTION 1 - ONLINE STORE TERMS</h2>\n<p>\nBy agreeing to these Terms of Service, you represent that you are at least the age of majority in your state or province of residence, or that you are the age of majority in your state or province of residence and you have given us your consent to allow any of your minor dependents to use this site.\nYou may not use our products for any illegal or unauthorized purpose nor may you, in the use of the Service, violate any laws in your jurisdiction (including but not limited to copyright laws).\nYou must not transmit any worms or viruses or any code of a destructive nature.\nA breach or violation of any of the Terms will result in an immediate termination of your Services.\n</p>\n\n</div>\n\n<div className = \"each-question\">\n<h2>SECTION 2 - GENERAL CONDITIONS</h2>\n<p>\nWe reserve the right to refuse service to anyone for any reason at any time.\nYou understand that your content (not including credit card information), may be transferred unencrypted and involve (a) transmissions over various networks; and (b) changes to conform and adapt to technical requirements of connecting networks or devices. Credit card information is always encrypted during transfer over networks.\nYou agree not to reproduce, duplicate, copy, sell, resell or exploit any portion of the Service, use of the Service, or access to the Service or any contact on the website through which the service is provided, without express written permission by us.\nThe headings used in this agreement are included for convenience only and will not limit or otherwise affect these Terms.\n</p>\n</div>\n\n\n<div className = \"each-question\">\n<h2>SECTION 3 - ACCURACY, COMPLETENESS AND TIMELINESS OF INFORMATION</h2>\n<p>\nWe are not responsible if information made available on this site is not accurate, complete or current. The material on this site is provided for general information only and should not be relied upon or used as the sole basis for making decisions without consulting primary, more accurate, more complete or more timely sources of information. Any reliance on the material on this site is at your own risk.\nThis site may contain certain historical information. Historical information, necessarily, is not current and is provided for your reference only. We reserve the right to modify the contents of this site at any time, but we have no obligation to update any information on our site. You agree that it is your responsibility to monitor changes to our site.\n</p>\n</div>\n\n<div className = \"each-question\">\n<h2>SECTION 4 - MODIFICATIONS TO THE SERVICE AND PRICES</h2>\n\n<p>Prices for our products are subject to change without notice.\nWe reserve the right at any time to modify or discontinue the Service (or any part or content thereof) without notice at any time.\nWe shall not be liable to you or to any third-party for any modification, price change, suspension or discontinuance of the Service.\n</p>\n</div>\n\n<div className = \"each-question\">\n<h2>SECTION 5 - PRODUCTS OR SERVICES (if applicable)</h2>\n<p>\nCertain products or services may be available exclusively online through the website. These products or services may have limited quantities and are subject to return or exchange only according to our Return Policy.\nWe have made every effort to display as accurately as possible the colors and images of our products that appear at the store. We cannot guarantee that your computer monitor's display of any color will be accurate.\nWe reserve the right, but are not obligated, to limit the sales of our products or Services to any person, geographic region or jurisdiction. We may exercise this right on a case-by-case basis. We reserve the right to limit the quantities of any products or services that we offer. All descriptions of products or product pricing are subject to change at anytime without notice, at the sole discretion of us. We reserve the right to discontinue any product at any time. Any offer for any product or service made on this site is void where prohibited.\nWe do not warrant that the quality of any products, services, information, or other material purchased or obtained by you will meet your expectations, or that any errors in the Service will be corrected.\n</p>\n</div>\n\n<div className = \"each-question\">\n<h2>SECTION 6 - ACCURACY OF BILLING AND ACCOUNT INFORMATION</h2>\n<p>\nWe reserve the right to refuse any order you place with us. We may, in our sole discretion, limit or cancel quantities purchased per person, per household or per order. These restrictions may include orders placed by or under the same customer account, the same credit card, and/or orders that use the same billing and/or shipping address. In the event that we make a change to or cancel an order, we may attempt to notify you by contacting the e‑mail and/or billing address/phone number provided at the time the order was made. We reserve the right to limit or prohibit orders that, in our sole judgment, appear to be placed by dealers, resellers or distributors.\n</p>\n<p>\nYou agree to provide current, complete and accurate purchase and account information for all purchases made at our store. You agree to promptly update your account and other information, including your email address and credit card numbers and expiration dates, so that we can complete your transactions and contact you as needed.\n</p>\n</div>\n\n<div className = \"each-question\">\n\nFor more detail, please review our Returns Policy.\n</div>\n\n<div className = \"each-question\">\n<h2>SECTION 7 - OPTIONAL TOOLS</h2>\n<p>\nWe may provide you with access to third-party tools over which we neither monitor nor have any control nor input.\nYou acknowledge and agree that we provide access to such tools ”as is” and “as available” without any warranties, representations or conditions of any kind and without any endorsement. We shall have no liability whatsoever arising from or relating to your use of optional third-party tools.\nAny use by you of optional tools offered through the site is entirely at your own risk and discretion and you should ensure that you are familiar with and approve of the terms on which tools are provided by the relevant third-party provider(s).\nWe may also, in the future, offer new services and/or features through the website (including, the release of new tools and resources). Such new features and/or services shall also be subject to these Terms of Service.\n</p>\n</div>\n\n<div className = \"each-question\">\n<h2>SECTION 8 - THIRD-PARTY LINKS</h2>\n<p>\nCertain content, products and services available via our Service may include materials from third-parties.\nThird-party links on this site may direct you to third-party websites that are not affiliated with us. We are not responsible for examining or evaluating the content or accuracy and we do not warrant and will not have any liability or responsibility for any third-party materials or websites, or for any other materials, products, or services of third-parties.\nWe are not liable for any harm or damages related to the purchase or use of goods, services, resources, content, or any other transactions made in connection with any third-party websites. Please review carefully the third-party's policies and practices and make sure you understand them before you engage in any transaction. Complaints, claims, concerns, or questions regarding third-party products should be directed to the third-party.\n</p>\n</div>\n\n<div className = \"each-question\">\n<h2>SECTION 9 - USER COMMENTS, FEEDBACK AND OTHER SUBMISSIONS</h2>\n<p>\nIf, at our request, you send certain specific submissions (for example contest entries) or without a request from us you send creative ideas, suggestions, proposals, plans, or other materials, whether online, by email, by postal mail, or otherwise (collectively, 'comments'), you agree that we may, at any time, without restriction, edit, copy, publish, distribute, translate and otherwise use in any medium any comments that you forward to us. We are and shall be under no obligation (1) to maintain any comments in confidence; (2) to pay compensation for any comments; or (3) to respond to any comments.\n</p>\n<p>\nWe may, but have no obligation to, monitor, edit or remove content that we determine in our sole discretion are unlawful, offensive, threatening, libelous, defamatory, pornographic, obscene or otherwise objectionable or violates any party’s intellectual property or these Terms of Service.\nYou agree that your comments will not violate any right of any third-party, including copyright, trademark, privacy, personality or other personal or proprietary right. You further agree that your comments will not contain libelous or otherwise unlawful, abusive or obscene material, or contain any computer virus or other malware that could in any way affect the operation of the Service or any related website. You may not use a false e‑mail address, pretend to be someone other than yourself, or otherwise mislead us or third-parties as to the origin of any comments. You are solely responsible for any comments you make and their accuracy. We take no responsibility and assume no liability for any comments posted by you or any third-party.\n</p>\n</div>\n\n<div className = \"each-question\">\n<h2>SECTION 10 - PERSONAL INFORMATION</h2>\n\nYour submission of personal information through the store is governed by our Privacy Policy. To view our Privacy Policy.\n</div>\n\n<div className = \"each-question\">\n\n<h2>SECTION 11 - ERRORS, INACCURACIES AND OMISSIONS</h2>\n<p>\nOccasionally there may be information on our site or in the Service that contains typographical errors, inaccuracies or omissions that may relate to product descriptions, pricing, promotions, offers, product shipping charges, transit times and availability. We reserve the right to correct any errors, inaccuracies or omissions, and to change or update information or cancel orders if any information in the Service or on any related website is inaccurate at any time without prior notice (including after you have submitted your order).\nWe undertake no obligation to update, amend or clarify information in the Service or on any related website, including without limitation, pricing information, except as required by law. No specified update or refresh date applied in the Service or on any related website, should be taken to indicate that all information in the Service or on any related website has been modified or updated.\n</p>\n</div>\n\n<div className = \"each-question\">\n<h2>SECTION 12 - PROHIBITED USES</h2>\n<p>\nIn addition to other prohibitions as set forth in the Terms of Service, you are prohibited from using the site or its content: (a) for any unlawful purpose; (b) to solicit others to perform or participate in any unlawful acts; (c) to violate any international, federal, provincial or state regulations, rules, laws, or local ordinances; (d) to infringe upon or violate our intellectual property rights or the intellectual property rights of others; (e) to harass, abuse, insult, harm, defame, slander, disparage, intimidate, or discriminate based on gender, sexual orientation, religion, ethnicity, race, age, national origin, or disability; (f) to submit false or misleading information; (g) to upload or transmit viruses or any other type of malicious code that will or may be used in any way that will affect the functionality or operation of the Service or of any related website, other websites, or the Internet; (h) to collect or track the personal information of others; (i) to spam, phish, pharm, pretext, spider, crawl, or scrape; (j) for any obscene or immoral purpose; or (k) to interfere with or circumvent the security features of the Service or any related website, other websites, or the Internet. We reserve the right to terminate your use of the Service or any related website for violating any of the prohibited uses.\n</p>\n</div>\n\n<div className = \"each-question\">\n<h2>SECTION 13 - DISCLAIMER OF WARRANTIES; LIMITATION OF LIABILITY</h2>\n<p>\nWe do not guarantee, represent or warrant that your use of our service will be uninterrupted, timely, secure or error-free.\nWe do not warrant that the results that may be obtained from the use of the service will be accurate or reliable.\nYou agree that from time to time we may remove the service for indefinite periods of time or cancel the service at any time, without notice to you.\nYou expressly agree that your use of, or inability to use, the service is at your sole risk. The service and all products and services delivered to you through the service are (except as expressly stated by us) provided 'as is' and 'as available' for your use, without any representation, warranties or conditions of any kind, either express or implied, including all implied warranties or conditions of merchantability, merchantable quality, fitness for a particular purpose, durability, title, and non-infringement.\nIn no case shall ECS 193 E-Commerce, our directors, officers, employees, affiliates, agents, contractors, interns, suppliers, service providers or licensors be liable for any injury, loss, claim, or any direct, indirect, incidental, punitive, special, or consequential damages of any kind, including, without limitation lost profits, lost revenue, lost savings, loss of data, replacement costs, or any similar damages, whether based in contract, tort (including negligence), strict liability or otherwise, arising from your use of any of the service or any products procured using the service, or for any other claim related in any way to your use of the service or any product, including, but not limited to, any errors or omissions in any content, or any loss or damage of any kind incurred as a result of the use of the service or any content (or product) posted, transmitted, or otherwise made available via the service, even if advised of their possibility. Because some states or jurisdictions do not allow the exclusion or the limitation of liability for consequential or incidental damages, in such states or jurisdictions, our liability shall be limited to the maximum extent permitted by law.\n</p>\n</div>\n\n<div className = \"each-question\">\n<h2>SECTION 14 - INDEMNIFICATION</h2>\n<p>\nYou agree to indemnify, defend and hold harmless ECS 193 E-Commerce and our parent, subsidiaries, affiliates, partners, officers, directors, agents, contractors, licensors, service providers, subcontractors, suppliers, interns and employees, harmless from any claim or demand, including reasonable attorneys’ fees, made by any third-party due to or arising out of your breach of these Terms of Service or the documents they incorporate by reference, or your violation of any law or the rights of a third-party.\n</p>\n</div>\n\n<div className = \"each-question\">\n<h2>SECTION 15 - SEVERABILITY</h2>\n<p>\nIn the event that any provision of these Terms of Service is determined to be unlawful, void or unenforceable, such provision shall nonetheless be enforceable to the fullest extent permitted by applicable law, and the unenforceable portion shall be deemed to be severed from these Terms of Service, such determination shall not affect the validity and enforceability of any other remaining provisions.\n</p>\n</div>\n\n<div className = \"each-question\">\n<h2>SECTION 16 - TERMINATION</h2>\n<p>\nThe obligations and liabilities of the parties incurred prior to the termination date shall survive the termination of this agreement for all purposes.\nThese Terms of Service are effective unless and until terminated by either you or us. You may terminate these Terms of Service at any time by notifying us that you no longer wish to use our Services, or when you cease using our site.\nIf in our sole judgment you fail, or we suspect that you have failed, to comply with any term or provision of these Terms of Service, we also may terminate this agreement at any time without notice and you will remain liable for all amounts due up to and including the date of termination; and/or accordingly may deny you access to our Services (or any part thereof).\n</p>\n</div>\n\n<div className = \"each-question\">\n<h2>SECTION 17 - ENTIRE AGREEMENT</h2>\n<p>\nThe failure of us to exercise or enforce any right or provision of these Terms of Service shall not constitute a waiver of such right or provision.\nThese Terms of Service and any policies or operating rules posted by us on this site or in respect to The Service constitutes the entire agreement and understanding between you and us and govern your use of the Service, superseding any prior or contemporaneous agreements, communications and proposals, whether oral or written, between you and us (including, but not limited to, any prior versions of the Terms of Service).\nAny ambiguities in the interpretation of these Terms of Service shall not be construed against the drafting party.\n</p>\n</div>\n\n<div className = \"each-question\">\n<h2>SECTION 18 - GOVERNING LAW</h2>\n\nThese Terms of Service and any separate agreements whereby we provide you Services shall be governed by and construed in accordance with the laws of United States.\n</div>\n<div className = \"each-question\">\n<h2>SECTION 19 - CHANGES TO TERMS OF SERVICE</h2>\n<p>\nYou can review the most current version of the Terms of Service at any time at this page.\nWe reserve the right, at our sole discretion, to update, change or replace any part of these Terms of Service by posting updates and changes to our website. It is your responsibility to check our website periodically for changes. Your continued use of or access to our website or the Service following the posting of any changes to these Terms of Service constitutes acceptance of those changes.\n</p>\n</div>\n\n<div className = \"each-question\">\n<h2>SECTION 20 - CONTACT INFORMATION</h2>\n\nQuestions about the Terms of Service should be sent to us at ecs193.ecommerce@gmail.com\n</div>\n\t</font>\n  </div>\n      </div>\n    )\n  }\n}\n\n","import React, { Component } from \"react\";\nimport \"./Privacy.css\";\n\nexport default class Privacy extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"privacy-header\">\n          <h1>Privacy Policy</h1>\n          This Privacy Policy describes how your personal information is\n          collected, used, and shared when you visit or make a purchase from\n          193ecommerce.com (the “Site”).\n        </div>\n        <div className=\"each-question\">\n          <h2>PERSONAL INFORMATION WE COLLECT</h2>\n          <p>\n            When you visit the Site, we automatically collect certain\n            information about your device, including information about some of\n\t    the cookies that are installed on your device. Additionally, as you \n\t    browse the Site, we collect information about the about how you interact\n\t    with the Site. We refer to this automatically-collected information as \n\t    “Device Information”.\n          </p>\n        </div>\n\n        <div className=\"each-question\">\n          <p>\n            We collect Device Information using the following technologies: \n\t  </p>\n\t  <p>- “Cookies” are data files that are placed on your device or computer\n            and often include an anonymous unique identifier. For more\n            information about cookies, and how to disable cookies, visit\n            http://www.allaboutcookies.org.</p>\n        </div>\n\n        <div className=\"each-question\">\n          Additionally when you make a purchase or attempt to make a purchase\n          through the Site, we collect certain information from you, including\n          your name, billing address, shipping address, payment information\n          (including credit card numbers), and email address. We refer to this \n\t  information as “Order Information”. When we talk about\n          “Personal Information” in this Privacy Policy, we are talking both\n          about Device Information and Order Information.\n        </div>\n\n        <div className=\"each-question\">\n          <h2>HOW DO WE USE YOUR PERSONAL INFORMATION</h2>\n          <p>\n            We use the Order Information that we collect generally to fulfill\n            any orders placed through the Site (including processing your\n            payment information, arranging for shipping, and providing you with\n            invoices and/or order confirmations). Additionally, we use this\n            Order Information to:\n          </p>\n          <p>- Communicate with you;</p>\n          <p>- Screen our orders for potential risk or fraud; and</p>\n          <p>\n            - When in line with the preferences you have shared with us, provide\n            you with information or advertising relating to our products or\n            services.\n          </p>\n          We use the Device Information that we collect to help us screen for\n          potential risk and fraud, and more generally to improve and optimize our Site.\n        </div>\n        <div className=\"each-question\">\n          <h2>SHARING YOUR PERSONAL INFORMATION</h2>\n          <p>\n            Finally, we may also share your Personal Information to comply with\n            applicable laws and regulations, to respond to a subpoena, search\n            warrant or other lawful request for information we receive, or to\n            otherwise protect our rights.\n          </p>\n        </div>\n\n        <div className=\"each-question\">\n          <h2>DO NOT TRACK</h2>\n          <p>\n            Please note that we do not alter our Site’s data collection and use\n            practices when we see a Do Not Track signal from your browser.\n          </p>\n        </div>\n\n        <div className=\"each-question\">\n          <h2>DATA RETENTION</h2>\n          <p>\n            When you place an order through the Site, we will maintain your\n            Order Information for our records unless and until you ask us to\n            delete this information.\n          </p>\n        </div>\n\n        <div className=\"each-question\">\n          <h2>CHANGES</h2>\n          <p>\n            We may update this privacy policy from time to time in order to\n            reflect, for example, changes to our practices or for other\n            operational, legal or regulatory reasons.\n          </p>\n        </div>\n\n        <div className=\"each-question\">\n\t  <h2>MINORS</h2>\n          <p>\n            The Site is not intended for individuals under the age of 16.\n          </p>\n        </div>\n\n        <div className=\"each-question\">\n          <h2>CONTACT US</h2>\n          <p>\n            For more information about our privacy practices, if you have\n            questions, or if you would like to make a complaint, please contact\n            us by e‑mail at ecs193.ecommerce@gmail.com\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./Faq.css\";\n\nexport default class Privacy extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"faq-container\">\n          <div className=\"faq-header\">\n            <h1> Frequently Asked Questions </h1>\n          </div>\n\n          <div className=\"each-question-faq\">\n            <h2> Where do I go to pick up my products? </h2>\n            <p>\n              Products purchased on this website are picked up on campus unless\n              otherwise noted by the vendor.\n            </p>\n          </div>\n\n          <div className=\"each-question-faq\">\n            <h2> Is there a refund policy? </h2>\n            <p>\n              There is no refund policy, products are not returnable after\n              purchase.\n            </p>\n          </div>\n\n          <div className=\"each-question-faq\">\n            <h2>\n              Who should I contact if I have any questions/issues with my\n              product?\n            </h2>\n            <p>\n              Please contact the club/vendor directly if there any questions or\n              issues with the product.\n            </p>\n          </div>\n\n          <div className=\"each-question-faq\">\n            <h2>\n              I am a club/vendor and I am interested in selling on this platform\n            </h2>\n            <p>\n              Thank you for your interest, please send us an email at\n              ecs193.ecommerce@gmail.com to initiate the setup process.\n            </p>\n          </div>\n\n          <div className=\"each-question-faq\">\n            <h2> How can I contact you ?</h2>\n            <p> You can send us an email at ecs193.ecommerce@gmail.com </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Router,\n  // BrowserRouter as Router,\n  Route,\n  Switch\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport About from \"./components/About/About\";\nimport Signup from \"./components/Signup/Signup\";\nimport Home from \"./components/Home/Home\";\nimport Login from \"./components/Login/Login\";\nimport ButtonAppBar from \"./components/ButtonAppBar/ButtonAppBar\";\nimport ShopView from \"./components/ShopView/ShopView\";\n// import Cart from \"./components/Cart/Cart\";\nimport VendorView from \"./components/VendorView/VendorView\";\nimport VendorSignup from \"./components/VendorSignup/VendorSignup\";\nimport EditClubInfo from \"./components/EditClubInfo/EditClubInfo\";\nimport AddProduct from \"./components/AddProduct/AddProduct\";\nimport OrderHistory from \"./components/OrderHistory/OrderHistory\";\nimport ShopItemDetailed from \"./components/ShopItemDetailed/ShopItemDetailed\";\nimport EditItemView from \"./components/EditItemView/EditItemView\";\nimport Footer from \"./components/Footer/Footer\";\nimport AccountInfo from \"./components/AccountInfo/AccountInfo\";\nimport RecoverPassword from \"./components/RecoverPassword/RecoverPassword\";\nimport InputRecoveryPassword from \"./components/InputRecoveryPassword/InputRecoveryPassword\";\nimport CartView from \"./components/CartView/CartView\";\nimport EmailConfirmation from \"./components/EmailConfirmation/EmailConfirmation\";\nimport ScrollToTop from \"./components/ScrollToTop/ScrollToTop\";\n// import SuccessfulPayment from \"./components/SuccesfulPayment/SuccessfulPayment\";\nimport { connect } from \"react-redux\";\nimport actions from \"./store/actions\";\nimport axios from \"axios\";\n\nimport { createBrowserHistory } from \"history\";\nimport AboutClub from \"./components/AboutClub/AboutClub\";\nimport Clubs from \"./components/Clubs/Clubs\";\nimport ReactNotification from \"react-notifications-component\";\nimport \"react-notifications-component/dist/theme.css\";\nimport GenericPage from \"./components/GenericPage/GenericPage\";\nimport Terms from \"./components/Terms/Terms\";\nimport Privacy from \"./components/Privacy/Privacy\";\nimport Faq from \"./components/Faq/Faq\";\nrequire(\"dotenv\").config();\n\nconst history = createBrowserHistory();\n\n// on every response received by axios, check for 403\naxios.interceptors.response.use(\n  res => {\n    // if no error, pass on the response\n    return res;\n  },\n  err => {\n    // if received a 403 forbidden, then token has expired\n    // redirect them to login\n    if (err.response.status === 403) {\n      console.log(\"TOKEN EXPIRED\");\n      history.push(\"/refreshLogin\");\n    }\n\n    // in hindsight, could have just called notifier error here rather than in\n    // components\n\n    return err.response;\n  }\n);\n\nclass App extends Component {\n  notificationDOMRef = React.createRef();\n\n  addNotification = ({\n    title = \"Error\",\n    message = \"Sorry, an error occurred.\",\n    type = \"danger\",\n    duration = 4500\n  }) => {\n    try {\n      this.notificationDOMRef.current.addNotification({\n        title: title,\n        message: message,\n        type: type,\n        insert: \"top\",\n        container: \"bottom-left\",\n        animationIn: [\"animated\", \"fadeIn\"],\n        animationOut: [\"animated\", \"fadeOut\"],\n        dismiss: { duration: duration },\n        dismissable: { click: true }\n      });\n    } catch {\n      console.log(\"ERROR IN NOTIFIER\");\n    }\n  };\n\n  //check token expiration if user was logged in\n  checkIfTokenNeedsRefresh = () => {\n    if (this.props.login === true) {\n      const apiURL = \"/api/checkTokenRefresh\";\n\n      axios\n        .get(apiURL, {\n          withCredentials: true\n        })\n        .then(res => {})\n        //err catches 403 forbidden error\n        .catch(err => {\n          //logout user and then display error message\n          this.addNotification({\n            title: \"Error\",\n            message: \"Session Expired Please Login Again\",\n            type: \"danger\"\n          });\n\n          this.props.updateLogout();\n\n          //goal is to show alert message and then redirect\n          //set timeout, after 4 seconds redirect to login\n          setTimeout(() => {\n            window.location = \"/login\";\n          }, 4000);\n        });\n    }\n  };\n\n  componentDidMount() {\n    // alert(\"testing to see if token needs to be refreshed\");\n    //need to write function to check if token is present, verify on backend, need to see if needs to be refreshed\n    //if token is expired, logout user and redirect to login\n    // this.checkIfTokenNeedsRefresh();\n  }\n\n  render() {\n    return (\n      <Router history={history}>\n        <ScrollToTop>\n          <div>\n            <ButtonAppBar notifier={this.addNotification} />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/about\" component={About} />\n              <Route\n                exact\n                path=\"/shop\"\n                render={props => (\n                  <ShopView {...props} notifier={this.addNotification} />\n                )}\n              />\n\n              <Route\n                exact\n                path=\"/signup\"\n                render={props => (\n                  <Signup {...props} notifier={this.addNotification} />\n                )}\n              />\n\n              <Route\n                exact\n                path=\"/login\"\n                render={props => (\n                  <Login\n                    {...props}\n                    notifier={this.addNotification}\n                    logout={false}\n                  />\n                )}\n              />\n\n              <Route\n                exact\n                path=\"/refreshLogin\"\n                render={props => (\n                  <Login\n                    {...props}\n                    notifier={this.addNotification}\n                    logout={true}\n                  />\n                )}\n              />\n\n              <Route\n                exact\n                path=\"/cart\"\n                render={props => (\n                  <CartView {...props} notifier={this.addNotification} />\n                )}\n              />\n\n              <Route\n                path=\"/vendorProducts/:vid\"\n                render={props => (\n                  <VendorView {...props} notifier={this.addNotification} />\n                )}\n              />\n\n              <Route\n                exact\n                path=\"/abcdefg/vendorSignup\"\n                render={props => (\n                  <VendorSignup {...props} notifier={this.addNotification} />\n                )}\n              />\n\n              <Route\n                exact\n                path=\"/editClubInfo\"\n                render={props => (\n                  <EditClubInfo {...props} notifier={this.addNotification} />\n                )}\n              />\n\n              <Route\n                exact\n                path=\"/addProduct\"\n                render={props => (\n                  <AddProduct {...props} notifier={this.addNotification} />\n                )}\n              />\n\n              <Route\n                exact\n                path=\"/orderHistory\"\n                render={props => (\n                  <OrderHistory {...props} notifier={this.addNotification} />\n                )}\n              />\n\n              <Route\n                path=\"/itemDetails/:vid/:pid\"\n                render={props => (\n                  <ShopItemDetailed\n                    {...props}\n                    notifier={this.addNotification}\n                  />\n                )}\n              />\n\n              <Route\n                path=\"/aboutClub/:vid\"\n                render={props => (\n                  <AboutClub {...props} notifier={this.addNotification} />\n                )}\n              />\n\n              <Route\n                path=\"/editItem\"\n                render={props => (\n                  <EditItemView {...props} notifier={this.addNotification} />\n                )}\n              />\n\n              <Route\n                exact\n                path=\"/clubs\"\n                render={props => (\n                  <Clubs {...props} notifier={this.addNotification} />\n                )}\n              />\n\n              <Route\n                exact\n                path=\"/accountInfo\"\n                render={props => (\n                  <AccountInfo {...props} notifier={this.addNotification} />\n                )}\n              />\n\n              <Route\n                exact\n                path=\"/recoverPassword\"\n                render={props => (\n                  <RecoverPassword {...props} notifier={this.addNotification} />\n                )}\n              />\n\n              <Route\n                path=\"/inputNewPassword\"\n                render={props => (\n                  <InputRecoveryPassword\n                    {...props}\n                    notifier={this.addNotification}\n                  />\n                )}\n              />\n\n              <Route\n                path=\"/emailConfirmation/:token\"\n                render={props => (\n                  <EmailConfirmation\n                    {...props}\n                    notifier={this.addNotification}\n                  />\n                )}\n              />\n\n              <Route\n                path=\"/page\"\n                render={props => (\n                  <GenericPage {...props} notifier={this.addNotification} />\n                )}\n              />\n\n              <Route\n                exact\n                path=\"/successfulPayment\"\n                render={props => (\n                  <GenericPage\n                    {...props}\n                    notifier={this.addNotification}\n                    pageText={\n                      \"Thanks for purchasing. Please check your e-mail inbox for an order receipt.\"\n                    }\n                  />\n                )}\n              />\n\n              <Route\n                exact\n                path=\"/check-email\"\n                render={props => (\n                  <GenericPage\n                    {...props}\n                    notifier={this.addNotification}\n                    pageText={\n                      \"Thanks for signing up. Please check your email to verify your account.\"\n                    }\n                  />\n                )}\n              />\n\n              <Route\n                exact\n                path=\"/check-email/reset\"\n                render={props => (\n                  <GenericPage\n                    {...props}\n                    notifier={this.addNotification}\n                    pageText={\n                      \"Please check your email for a password reset link.\"\n                    }\n                  />\n                )}\n              />\n\n              <Route\n                exact\n                path=\"/terms\"\n                render={props => (\n                  <Terms {...props} notifier={this.addNotification} />\n                )}\n              />\n\n              <Route\n                exact\n                path=\"/privacy\"\n                render={props => (\n                  <Privacy {...props} notifier={this.addNotification} />\n                )}\n              />\n\n              <Route\n                exact\n                path=\"/faq\"\n                render={props => (\n                  <Faq {...props} notifier={this.addNotification} />\n                )}\n              />\n\n              <Route\n                render={props => (\n                  <GenericPage\n                    {...props}\n                    notifier={this.addNotification}\n                    pageText={\"Error 404 not found.\"}\n                  />\n                )}\n              />\n            </Switch>\n\n            <Footer />\n            <ReactNotification ref={this.notificationDOMRef} />\n          </div>\n        </ScrollToTop>\n      </Router>\n    );\n  }\n}\n\n//obtain state from store as props for component\n//get cart items, login value, and user email\nconst mapStateToProps = state => {\n  return {\n    login: state.auth.login\n  };\n};\n\n//dispatch action to reducer\nconst mapDispatchToProps = dispatch => {\n  return {\n    //update store that user logged out\n    updateLogout: () =>\n      dispatch({\n        type: actions.LOGGED_OUT\n      })\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import actions from './actions';\r\n\r\n//initial state of login reducer\r\n\r\n//check whether login is true or false\r\n//if logged in, set navbar text to Logout, if logged out set navbar text to Login\r\n//store user email to use with other components\r\nconst initialState = {\r\n    login: false,\r\n    text: \"Login\",\r\n    isAdmin: false,\r\n    vendorID: '',\r\n    adminsOf: [],\r\n    currentVendor: ''\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        //if user is logged in, change state to true\r\n        case actions.LOGGED_IN:\r\n            return{\r\n                //updating state immutably\r\n                //disperse contents of original state object\r\n                ...state,\r\n                //assign login value to true based on payload action name\r\n                //assign email to user's email after logging in\r\n                //return new state object with updated \r\n                login: true,\r\n                text: \"Logout\",\r\n                // user: action.user\r\n            }\r\n        //when an admin is logged in\r\n        case actions.ADMIN_LOGGED_IN:\r\n            return{\r\n                ...state,\r\n                login: true,\r\n                text: \"Logout\",\r\n                isAdmin: true,\r\n                vendorID: action.vid,\r\n                adminsOf: action.admins,\r\n                currentVendor: action.currentVendor,\r\n            }\r\n        //if user logs out, update state\r\n        case actions.LOGGED_OUT:\r\n        return initialState\r\n            // return{\r\n            //     ...state,\r\n            //     login: false,\r\n            //     text: \"Login\",\r\n            //     email: '',\r\n            //     isAdmin: false,\r\n            //     vendorID: '',\r\n            //     adminsOf: state.adminsOf.length = 0,\r\n            //     currentVendor: ''\r\n            // }\r\n        //update vendor id of user if admin\r\n        case actions.UPDATE_VENDOR_ID:\r\n            return{\r\n              ...state,\r\n              vendorID: action.vid,\r\n              currentVendor: action.vendor\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import actions from './actions';\r\n\r\n//initial state of shop view\r\nconst initialState = {\r\n  products: []\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch(action.type){\r\n    case actions.GET_PRODUCTS:\r\n      //copy initial state\r\n      //update products array to be array retrieved from GET request to server\r\n      //action.items is payload to update state\r\n      return{\r\n        ...state,\r\n        products: action.items\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n","import actions from './actions';\r\n//reducer for managing state of cart for a logged in user\r\n\r\n//initial state of cart reducer\r\nconst initialState = {\r\n  items: [],\r\n  total: 0,\r\n  itemsPurchased: 0,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  //action to get cart items stored on server\r\n  switch(action.type){\r\n    case actions.GET_CART:\r\n      return{\r\n        ...state,\r\n        //get cart items from server, assign to state\r\n        items: action.cart\r\n      }\r\n\r\n    //add item to cart, update state\r\n    case actions.ADD_CART:\r\n      return{\r\n        ...state,\r\n        items: state.items.concat(action.item)\r\n      }\r\n\r\n    //remove item from cart, update state\r\n    case actions.REMOVE_CART:\r\n      return{\r\n\r\n      }\r\n\r\n    //empty cart, either on logout or checkout\r\n    case actions.EMPTY_CART:\r\n      return{\r\n        ...state,\r\n        items: []\r\n      }\r\n\r\n    case actions.UPDATE_TOTAL:\r\n      return{\r\n        ...state,\r\n        total: action.total\r\n      }\r\n\r\n    case actions.UPDATE_CART:\r\n      return{\r\n        ...state,\r\n        items: action.cart\r\n      }\r\n\r\n    case actions.UPDATE_AMOUNT_PURCHASED:\r\n      return{\r\n        ...state,\r\n        itemsPurchased: action.amountPurchased\r\n      }\r\n\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n","import actions from './actions';\r\n\r\nconst initialState = {\r\n  vendor: '',\r\n  vendors: []\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch(action.type){\r\n    case actions.GET_VENDOR_PRODUCTS:\r\n      return{\r\n        ...state,\r\n        vendor: action.vendor\r\n      }\r\n\r\n    case actions.GET_VENDORS:\r\n      return{\r\n        ...state,\r\n        vendors: action.vendors\r\n      }\r\n\r\n  \r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default reducer;\r\n","import actions from './actions';\r\n\r\n//initial state\r\nconst initialState = {\r\n  selectedItemID: ''\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch(action.type){\r\n    case actions.UPDATE_SELECTED_ITEM:\r\n      return{\r\n        ...state,\r\n        selectedItemID: action.itemID\r\n      }\r\n    \r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n//import redux\nimport {createStore, combineReducers} from 'redux';\nimport {Provider} from 'react-redux';\n//store redux state\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\n//redux reducers\nimport loginReducer from './store/loginReducer';\nimport getProductsReducer from './store/getProductsReducer';\nimport cartReducer from './store/cartReducer';\nimport vendorReducer from './store/vendorReducer';\nimport shopItemReducer from './store/shopItemReducer';\n\n// import 'typeface-roboto';\n\n\n\n//create store for redux state management\n//store stores state of application\nconst rootReducer = combineReducers({\n  auth: loginReducer,\n  getAllItems: getProductsReducer,\n  cart: cartReducer,\n  vendor: vendorReducer,\n  selectedItem: shopItemReducer\n});\n\n//redux persistConfig\nconst persistConfig = {\n  key: 'root',\n  storage: storage,\n  stateReconciler: autoMergeLevel2\n};\n\nconst pReducer = persistReducer(persistConfig, rootReducer);\nconst store = createStore(pReducer);\nconst persistor = persistStore(store);\nconst primary = \"#6F8AB7\";\n\n//Provider tag allows all components to have access to store\nReactDOM.render(<Provider store = {store}> \n                  <PersistGate loading ={null} persistor = {persistor}>\n                    <App/> \n                  </PersistGate>\n                </Provider>, document.getElementById('root'));\n\n// hot module reloading used to reload app in browser w/out performing a page\n// refresh. Useful when wanting to test w/out losing console.log() s\nif (module.hot) {\n  module.hot.accept()\n}\n\nserviceWorker.unregister();\n"],"sourceRoot":""}