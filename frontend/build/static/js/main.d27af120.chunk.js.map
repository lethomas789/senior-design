{"version":3,"sources":["components/Signup/Signup.js","components/Home/Home.js","components/Login/Login.js","components/ButtonAppBar/ButtonAppBar.js","App.js","serviceWorker.js","index.js"],"names":["Signup","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","firstName","lastName","email","password","confirmPassword","sendSignup","bind","assertThisInitialized","axios","post","params","then","res","data","success","alert","message","catch","err","console","log","_this2","react_default","a","createElement","id","TextField_default","label","required","onChange","event","setState","target","value","type","Button_default","onClick","Component","Home","Login","sendLogin","ButtonAppBar","className","AppBar_default","position","Toolbar_default","IconButton_default","color","aria-label","Menu_default","Typography_default","component","Link","to","variant","App","BrowserRouter","components_ButtonAppBar_ButtonAppBar","Route","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d27af120.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport './Signup.css';\n\nexport default class Signup extends Component {\n  constructor(props) {\n    super(props)\n    //store user input\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n    }\n    this.sendSignup = this.sendSignup.bind(this);\n  }\n\n  //send signup request\n  sendSignup(){\n    axios.post('http://localhost:4000/api/signup', {\n      params: {\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        email: this.state.email,\n        password: this.state.password\n      }\n    }).then(res => {\n      if(res.data.success === true){\n        alert(res.data.message);\n      }\n\n      else{\n        alert(res.data.message);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    })\n  }\n  \n  render() {\n    return (\n      <div id = \"signupContainer\">\n        <div id = \"signupForms\">\n          <h1> Sign Up </h1>\n          <div id=\"row\">\n            <TextField\n              label=\"First Name\"\n              required=\"true\"\n              onChange={(event) => this.setState({ firstName: event.target.value })}\n            />\n          </div>\n          <div id=\"row\">\n            <TextField\n              label=\"Last Name\"\n              required=\"true\"\n              onChange={(event) => this.setState({ lastName: event.target.value })}\n            />\n          </div>\n          <div id=\"row\">\n            <TextField\n              label=\"Email\"\n              required=\"true\"\n              onChange={(event) => this.setState({ email: event.target.value })}\n            />\n          </div>\n          <div id=\"row\">\n            <TextField\n              type=\"password\"\n              label=\"Password\"\n              required=\"true\"\n              onChange={(event) => this.setState({ password: event.target.value })}\n            />\n          </div>\n          <Button id = \"signupButton\" onClick = {this.sendSignup}> Sign Up  </Button>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Signup from '../Signup/Signup';\nimport './Home.css';\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div id = \"homeContainer\">\n        <div id = \"textContainer\">\n          <h1> Welcome to ECS193 ECommerce! </h1>\n          <p>This is a ecommerce website for UC Davis's clubs. \n          Here we make merchandise available from all different clubs of Davis.</p>\n        </div>\n      </div>\n    )\n  }\n}\n\n\n\n","import React, { Component } from 'react';\r\nimport './Login.css';\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class Login extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        //store user input\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\"        \r\n        }\r\n        this.sendLogin = this.sendLogin.bind(this);\r\n    }\r\n\r\n    //send login request, display if login was successful\r\n    //retrieve JWT to use for authetnicated page access\r\n    sendLogin(){\r\n        const apiURL = \"http://localhost:4000/api/login\";\r\n        axios.post(apiURL, {\r\n            params:{\r\n                email: this.state.email,\r\n                password: this.state.password\r\n            }\r\n        })\r\n        .then(res => {\r\n            if(res.data.success === true){\r\n                alert(res.data.message);\r\n            }\r\n\r\n            else{\r\n                alert(res.data);\r\n            }\r\n        })\r\n        .catch(err => {\r\n            alert(err);\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div id = \"loginContainer\">\r\n                <div id = \"loginForms\">\r\n                    <h1> Login </h1>\r\n                    <div id=\"row\">\r\n                        <TextField\r\n                        label=\"Email\"\r\n                        required=\"true\"\r\n                        onChange={(event) => this.setState({ email: event.target.value })}\r\n                        />\r\n                    </div>\r\n                    <div id=\"row\">\r\n                        <TextField\r\n                        type=\"password\"\r\n                        label=\"Password\"\r\n                        required=\"true\"\r\n                        onChange={(event) => this.setState({ password: event.target.value })}\r\n                        />\r\n                    </div>\r\n                    <Button id = \"signupButton\" onClick = {this.sendLogin}> Login  </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\nimport {Route, Link, BrowserRouter as Router} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport './ButtonAppBar.css';\n\n\nfunction ButtonAppBar(props) {\n\n  //variables to store routes to redirect to with Link component\n  const homeRoute = \"/\";\n  const signupRoute = \"/signup\";\n  const loginRoute = \"/login\";\n\n  return (\n    <div className= \"root\">\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton className = \"menuButton\" color=\"inherit\" aria-label=\"Menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography component = {Link} to = {homeRoute} variant=\"h6\" color=\"inherit\" className = \"grow\">\n            ECS193 ECommerce\n          </Typography>\n           <Button component = {Link} to = {signupRoute} color = \"inherit\"> Sign Up </Button> \n           <Button component = {Link} to = {loginRoute}color=\"inherit\">Login </Button> \n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default ButtonAppBar;\n","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport './App.css';\nimport Signup from './components/Signup/Signup';\nimport Home from './components/Home/Home';\nimport Login from './components/Login/Login';\nimport ButtonAppBar from './components/ButtonAppBar/ButtonAppBar';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <ButtonAppBar />\n          <Route exact path = \"/\" component = {Home} />\n          <Route exact path = \"/signup\" component = {Signup} />\n          <Route exact path = \"/login\" component = {Login} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// hot module reloading used to reload app in browser w/out performing a page\n// refresh. Useful when wanting to test w/out losing console.log() s\nif (module.hot) {\n  module.hot.accept()\n}\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}